// Generated by cue-terraform-gen (https://github.com/tnarg/cue_terraform_gen). DO NOT EDIT.
package vault

#VaultAdSecretBackendResource: {
	binddn:                        string
	bindpass:                      string
	anonymous_group_search?:       bool
	backend?:                      string
	case_sensitive_names?:         bool
	certificate?:                  string
	client_tls_cert?:              string
	client_tls_key?:               string
	default_lease_ttl_seconds?:    number
	deny_null_bind?:               bool
	description?:                  string
	discoverdn?:                   bool
	formatter?:                    string
	groupattr?:                    string
	groupdn?:                      string
	groupfilter?:                  string
	id?:                           string
	insecure_tls?:                 bool
	last_rotation_tolerance?:      number
	length?:                       number
	local?:                        bool
	max_lease_ttl_seconds?:        number
	max_ttl?:                      number
	password_policy?:              string
	request_timeout?:              number
	starttls?:                     bool
	tls_max_version?:              string
	tls_min_version?:              string
	ttl?:                          number
	upndomain?:                    string
	url?:                          string
	use_pre111_group_cn_behavior?: bool
	use_token_groups?:             bool
	userattr?:                     string
	userdn?:                       string
}
#VaultAdSecretLibraryResource: {
	backend: string
	name:    string
	service_account_names: [string, ...]
	disable_check_in_enforcement?: bool
	id?:                           string
	max_ttl?:                      number
	ttl?:                          number
}
#VaultAdSecretRoleResource: {
	backend:              string
	role:                 string
	service_account_name: string
	id?:                  string
	last_vault_rotation?: string
	password_last_set?:   string
	ttl?:                 number
}
#VaultAlicloudAuthBackendRoleResource: {
	arn:      string
	role:     string
	backend?: string
	id?:      string
	token_bound_cidrs?: [string, ...]
	token_explicit_max_ttl?:  number
	token_max_ttl?:           number
	token_no_default_policy?: bool
	token_num_uses?:          number
	token_period?:            number
	token_policies?: [string, ...]
	token_ttl?:  number
	token_type?: string
}
#VaultApproleAuthBackendLoginResource: {
	role_id:         string
	accessor?:       string
	backend?:        string
	client_token?:   string
	id?:             string
	lease_duration?: number
	lease_started?:  string
	metadata?: [_]: string
	policies?: [string, ...]
	renewable?: bool
	secret_id?: string
}
#VaultApproleAuthBackendRoleResource: {
	role_name:       string
	backend?:        string
	bind_secret_id?: bool
	bound_cidr_list?: [string, ...]
	id?:     string
	period?: number
	policies?: [string, ...]
	role_id?: string
	secret_id_bound_cidrs?: [string, ...]
	secret_id_num_uses?: number
	secret_id_ttl?:      number
	token_bound_cidrs?: [string, ...]
	token_explicit_max_ttl?:  number
	token_max_ttl?:           number
	token_no_default_policy?: bool
	token_num_uses?:          number
	token_period?:            number
	token_policies?: [string, ...]
	token_ttl?:  number
	token_type?: string
}
#VaultApproleAuthBackendRoleSecretIdResource: {
	role_name: string
	accessor?: string
	backend?:  string
	cidr_list?: [string, ...]
	id?:                string
	metadata?:          string
	secret_id?:         string
	wrapping_accessor?: string
	wrapping_token?:    string
	wrapping_ttl?:      string
}
#VaultAuditResource: {
	options: [_]: string
	type:         string
	description?: string
	id?:          string
	local?:       bool
	path?:        string
}
#VaultAuthBackendResource: {
	type:                       string
	accessor?:                  string
	default_lease_ttl_seconds?: number
	description?:               string
	id?:                        string
	listing_visibility?:        string
	local?:                     bool
	max_lease_ttl_seconds?:     number
	path?:                      string
	tune?: [{
		allowed_response_headers: [string, ...]
		audit_non_hmac_request_keys: [string, ...]
		audit_non_hmac_response_keys: [string, ...]
		default_lease_ttl:  string
		listing_visibility: string
		max_lease_ttl:      string
		passthrough_request_headers: [string, ...]
		token_type: string
	}, ...]
}
#VaultAwsAuthBackendCertResource: {
	aws_public_cert: string
	cert_name:       string
	backend?:        string
	id?:             string
	type?:           string
}
#VaultAwsAuthBackendClientResource: {
	access_key?:                 string
	backend?:                    string
	ec2_endpoint?:               string
	iam_endpoint?:               string
	iam_server_id_header_value?: string
	id?:                         string
	secret_key?:                 string
	sts_endpoint?:               string
	sts_region?:                 string
}
#VaultAwsAuthBackendIdentityWhitelistResource: {
	backend?:               string
	disable_periodic_tidy?: bool
	id?:                    string
	safety_buffer?:         number
}
#VaultAwsAuthBackendLoginResource: {
	accessor?:                string
	auth_type?:               string
	backend?:                 string
	client_token?:            string
	iam_http_request_method?: string
	iam_request_body?:        string
	iam_request_headers?:     string
	iam_request_url?:         string
	id?:                      string
	identity?:                string
	lease_duration?:          number
	lease_start_time?:        string
	metadata?: [_]: string
	nonce?: string
	pkcs7?: string
	policies?: [string, ...]
	renewable?: bool
	role?:      string
	signature?: string
}
#VaultAwsAuthBackendRoleResource: {
	role:                      string
	allow_instance_migration?: bool
	auth_type?:                string
	backend?:                  string
	bound_account_id?:         string
	bound_account_ids?: [string, ...]
	bound_ami_id?: string
	bound_ami_ids?: [string, ...]
	bound_ec2_instance_id?: [string, ...]
	bound_ec2_instance_ids?: [string, ...]
	bound_iam_instance_profile_arn?: string
	bound_iam_instance_profile_arns?: [string, ...]
	bound_iam_principal_arn?: string
	bound_iam_principal_arns?: [string, ...]
	bound_iam_role_arn?: string
	bound_iam_role_arns?: [string, ...]
	bound_region?: string
	bound_regions?: [string, ...]
	bound_subnet_id?: string
	bound_subnet_ids?: [string, ...]
	bound_vpc_id?: string
	bound_vpc_ids?: [string, ...]
	disallow_reauthentication?: bool
	id?:                        string
	inferred_aws_region?:       string
	inferred_entity_type?:      string
	max_ttl?:                   number
	period?:                    number
	policies?: [string, ...]
	resolve_aws_unique_ids?: bool
	role_tag?:               string
	token_bound_cidrs?: [string, ...]
	token_explicit_max_ttl?:  number
	token_max_ttl?:           number
	token_no_default_policy?: bool
	token_num_uses?:          number
	token_period?:            number
	token_policies?: [string, ...]
	token_ttl?:  number
	token_type?: string
	ttl?:        number
}
#VaultAwsAuthBackendRoleTagResource: {
	role:                       string
	allow_instance_migration?:  bool
	backend?:                   string
	disallow_reauthentication?: bool
	id?:                        string
	instance_id?:               string
	max_ttl?:                   string
	policies?: [string, ...]
	tag_key?:   string
	tag_value?: string
}
#VaultAwsAuthBackendRoletagBlacklistResource: {
	backend:                string
	disable_periodic_tidy?: bool
	id?:                    string
	safety_buffer?:         number
}
#VaultAwsAuthBackendStsRoleResource: {
	account_id: string
	sts_role:   string
	backend?:   string
	id?:        string
}
#VaultAwsSecretBackendResource: {
	access_key?:                string
	default_lease_ttl_seconds?: number
	description?:               string
	id?:                        string
	max_lease_ttl_seconds?:     number
	path?:                      string
	region?:                    string
	secret_key?:                string
}
#VaultAwsSecretBackendRoleResource: {
	backend:          string
	credential_type:  string
	name:             string
	default_sts_ttl?: number
	iam_groups?: [string, ...]
	id?:          string
	max_sts_ttl?: number
	policy?:      string
	policy_arn?:  string
	policy_arns?: [string, ...]
	policy_document?: string
	role_arns?: [string, ...]
}
#VaultAzureAuthBackendConfigResource: {
	resource:       string
	tenant_id:      string
	backend?:       string
	client_id?:     string
	client_secret?: string
	environment?:   string
	id?:            string
}
#VaultAzureAuthBackendRoleResource: {
	role:     string
	backend?: string
	bound_group_ids?: [string, ...]
	bound_locations?: [string, ...]
	bound_resource_groups?: [string, ...]
	bound_scale_sets?: [string, ...]
	bound_service_principal_ids?: [string, ...]
	bound_subscription_ids?: [string, ...]
	id?:      string
	max_ttl?: number
	period?:  number
	policies?: [string, ...]
	token_bound_cidrs?: [string, ...]
	token_explicit_max_ttl?:  number
	token_max_ttl?:           number
	token_no_default_policy?: bool
	token_num_uses?:          number
	token_period?:            number
	token_policies?: [string, ...]
	token_ttl?:  number
	token_type?: string
	ttl?:        number
}
#VaultAzureSecretBackendResource: {
	subscription_id: string
	tenant_id:       string
	client_id?:      string
	client_secret?:  string
	description?:    string
	environment?:    string
	id?:             string
	path?:           string
}
#VaultAzureSecretBackendRoleResource: {
	role:                   string
	application_object_id?: string
	backend?:               string
	description?:           string
	id?:                    string
	max_ttl?:               string
	ttl?:                   string
	azure_groups?: [{
		group_name: string
		object_id?: string
	}, ...]
	azure_roles?: [{
		role_name: string
		scope:     string
		role_id?:  string
	}, ...]
}
#VaultCertAuthBackendRoleResource: {
	certificate: string
	name:        string
	allowed_common_names?: [string, ...]
	allowed_dns_sans?: [string, ...]
	allowed_email_sans?: [string, ...]
	allowed_names?: [string, ...]
	allowed_organization_units?: [string, ...]
	allowed_uri_sans?: [string, ...]
	backend?: string
	bound_cidrs?: [string, ...]
	display_name?: string
	id?:           string
	max_ttl?:      string
	period?:       string
	policies?: [string, ...]
	required_extensions?: [string, ...]
	token_bound_cidrs?: [string, ...]
	token_explicit_max_ttl?:  number
	token_max_ttl?:           number
	token_no_default_policy?: bool
	token_num_uses?:          number
	token_period?:            number
	token_policies?: [string, ...]
	token_ttl?:  number
	token_type?: string
	ttl?:        string
}
#VaultConsulSecretBackendResource: {
	address:                    string
	token:                      string
	ca_cert?:                   string
	client_cert?:               string
	client_key?:                string
	default_lease_ttl_seconds?: number
	description?:               string
	id?:                        string
	max_lease_ttl_seconds?:     number
	path?:                      string
	scheme?:                    string
}
#VaultConsulSecretBackendRoleResource: {
	name: string
	policies: [string, ...]
	backend?:    string
	id?:         string
	local?:      bool
	max_ttl?:    number
	path?:       string
	token_type?: string
	ttl?:        number
}
#VaultDatabaseSecretBackendConnectionResource: {
	backend: string
	name:    string
	allowed_roles?: [string, ...]
	data?: [_]: string
	id?: string
	root_rotation_statements?: [string, ...]
	verify_connection?: bool
	cassandra?: [{
		connect_timeout?: number
		hosts?: [string, ...]
		insecure_tls?:     bool
		password?:         string
		pem_bundle?:       string
		pem_json?:         string
		port?:             number
		protocol_version?: number
		tls?:              bool
		username?:         string
	}, ...]
	elasticsearch?: [{
		password: string
		url:      string
		username: string
	}, ...]
	hana?: [{
		connection_url?:          string
		max_connection_lifetime?: number
		max_idle_connections?:    number
		max_open_connections?:    number
	}, ...]
	mongodb?: [{
		connection_url?:          string
		max_connection_lifetime?: number
		max_idle_connections?:    number
		max_open_connections?:    number
	}, ...]
	mongodbatlas?: [{
		private_key: string
		project_id:  string
		public_key:  string
	}, ...]
	mssql?: [{
		connection_url?:          string
		max_connection_lifetime?: number
		max_idle_connections?:    number
		max_open_connections?:    number
	}, ...]
	mysql?: [{
		connection_url?:          string
		max_connection_lifetime?: number
		max_idle_connections?:    number
		max_open_connections?:    number
	}, ...]
	mysql_aurora?: [{
		connection_url?:          string
		max_connection_lifetime?: number
		max_idle_connections?:    number
		max_open_connections?:    number
	}, ...]
	mysql_legacy?: [{
		connection_url?:          string
		max_connection_lifetime?: number
		max_idle_connections?:    number
		max_open_connections?:    number
	}, ...]
	mysql_rds?: [{
		connection_url?:          string
		max_connection_lifetime?: number
		max_idle_connections?:    number
		max_open_connections?:    number
	}, ...]
	oracle?: [{
		connection_url?:          string
		max_connection_lifetime?: number
		max_idle_connections?:    number
		max_open_connections?:    number
	}, ...]
	postgresql?: [{
		connection_url?:          string
		max_connection_lifetime?: number
		max_idle_connections?:    number
		max_open_connections?:    number
	}, ...]
}
#VaultDatabaseSecretBackendRoleResource: {
	backend: string
	creation_statements: [string, ...]
	db_name:      string
	name:         string
	default_ttl?: number
	id?:          string
	max_ttl?:     number
	renew_statements?: [string, ...]
	revocation_statements?: [string, ...]
	rollback_statements?: [string, ...]
}
#VaultDatabaseSecretBackendStaticRoleResource: {
	backend:         string
	db_name:         string
	name:            string
	rotation_period: number
	username:        string
	id?:             string
	rotation_statements?: [string, ...]
}
#VaultEgpPolicyResource: {
	enforcement_level: string
	name:              string
	paths: [string, ...]
	policy: string
	id?:    string
}
#VaultGcpAuthBackendResource: {
	client_email?:   string
	client_id?:      string
	credentials?:    string
	description?:    string
	id?:             string
	local?:          bool
	path?:           string
	private_key_id?: string
	project_id?:     string
}
#VaultGcpAuthBackendRoleResource: {
	role:                 string
	type:                 string
	add_group_aliases?:   bool
	allow_gce_inference?: bool
	backend?:             string
	bound_instance_groups?: [string, ...]
	bound_labels?: [string, ...]
	bound_projects?: [string, ...]
	bound_regions?: [string, ...]
	bound_service_accounts?: [string, ...]
	bound_zones?: [string, ...]
	id?:          string
	max_jwt_exp?: string
	max_ttl?:     string
	period?:      string
	policies?: [string, ...]
	project_id?: string
	token_bound_cidrs?: [string, ...]
	token_explicit_max_ttl?:  number
	token_max_ttl?:           number
	token_no_default_policy?: bool
	token_num_uses?:          number
	token_period?:            number
	token_policies?: [string, ...]
	token_ttl?:  number
	token_type?: string
	ttl?:        string
}
#VaultGcpSecretBackendResource: {
	credentials?:               string
	default_lease_ttl_seconds?: number
	description?:               string
	id?:                        string
	local?:                     bool
	max_lease_ttl_seconds?:     number
	path?:                      string
}
#VaultGcpSecretRolesetResource: {
	backend:                string
	project:                string
	roleset:                string
	id?:                    string
	secret_type?:           string
	service_account_email?: string
	token_scopes?: [string, ...]
	binding?: [{
		resource: string
		roles: [string, ...]
	}, ...]
}
#VaultGenericEndpointResource: {
	data_json:             string
	path:                  string
	disable_delete?:       bool
	disable_read?:         bool
	id?:                   string
	ignore_absent_fields?: bool
	write_data?: [_]: string
	write_data_json?: string
	write_fields?: [string, ...]
}
#VaultGenericSecretResource: {
	data_json:   string
	path:        string
	allow_read?: bool
	data?: [_]: string
	disable_read?: bool
	id?:           string
}
#VaultGithubAuthBackendResource: {
	organization: string
	accessor?:    string
	base_url?:    string
	description?: string
	id?:          string
	max_ttl?:     string
	path?:        string
	token_bound_cidrs?: [string, ...]
	token_explicit_max_ttl?:  number
	token_max_ttl?:           number
	token_no_default_policy?: bool
	token_num_uses?:          number
	token_period?:            number
	token_policies?: [string, ...]
	token_ttl?:  number
	token_type?: string
	ttl?:        string
	tune?: [{
		allowed_response_headers: [string, ...]
		audit_non_hmac_request_keys: [string, ...]
		audit_non_hmac_response_keys: [string, ...]
		default_lease_ttl:  string
		listing_visibility: string
		max_lease_ttl:      string
		passthrough_request_headers: [string, ...]
		token_type: string
	}, ...]
}
#VaultGithubTeamResource: {
	team:     string
	backend?: string
	id?:      string
	policies?: [string, ...]
	token_bound_cidrs?: [string, ...]
	token_explicit_max_ttl?:  number
	token_max_ttl?:           number
	token_no_default_policy?: bool
	token_num_uses?:          number
	token_period?:            number
	token_policies?: [string, ...]
	token_ttl?:  number
	token_type?: string
}
#VaultGithubUserResource: {
	user:     string
	backend?: string
	id?:      string
	policies?: [string, ...]
	token_bound_cidrs?: [string, ...]
	token_explicit_max_ttl?:  number
	token_max_ttl?:           number
	token_no_default_policy?: bool
	token_num_uses?:          number
	token_period?:            number
	token_policies?: [string, ...]
	token_ttl?:  number
	token_type?: string
}
#VaultIdentityEntityResource: {
	disabled?:          bool
	external_policies?: bool
	id?:                string
	metadata?: [_]: string
	name?: string
	policies?: [string, ...]
}
#VaultIdentityEntityAliasResource: {
	canonical_id:   string
	mount_accessor: string
	name:           string
	id?:            string
}
#VaultIdentityEntityPoliciesResource: {
	entity_id: string
	policies: [string, ...]
	entity_name?: string
	exclusive?:   bool
	id?:          string
}
#VaultIdentityGroupResource: {
	external_member_entity_ids?: bool
	external_policies?:          bool
	id?:                         string
	member_entity_ids?: [string, ...]
	member_group_ids?: [string, ...]
	metadata?: [_]: string
	name?: string
	policies?: [string, ...]
	type?: string
}
#VaultIdentityGroupAliasResource: {
	canonical_id:   string
	mount_accessor: string
	name:           string
	id?:            string
}
#VaultIdentityGroupMemberEntityIdsResource: {
	group_id:    string
	exclusive?:  bool
	group_name?: string
	id?:         string
	member_entity_ids?: [string, ...]
}
#VaultIdentityGroupPoliciesResource: {
	group_id: string
	policies: [string, ...]
	exclusive?:  bool
	group_name?: string
	id?:         string
}
#VaultIdentityOidcResource: {
	id?:     string
	issuer?: string
}
#VaultIdentityOidcKeyResource: {
	name:       string
	algorithm?: string
	allowed_client_ids?: [string, ...]
	id?:               string
	rotation_period?:  number
	verification_ttl?: number
}
#VaultIdentityOidcKeyAllowedClientIdResource: {
	allowed_client_id: string
	key_name:          string
	id?:               string
}
#VaultIdentityOidcRoleResource: {
	key:        string
	name:       string
	client_id?: string
	id?:        string
	template?:  string
	ttl?:       number
}
#VaultJwtAuthBackendResource: {
	accessor?:     string
	bound_issuer?: string
	default_role?: string
	description?:  string
	id?:           string
	jwks_ca_pem?:  string
	jwks_url?:     string
	jwt_supported_algs?: [string, ...]
	jwt_validation_pubkeys?: [string, ...]
	oidc_client_id?:        string
	oidc_client_secret?:    string
	oidc_discovery_ca_pem?: string
	oidc_discovery_url?:    string
	path?:                  string
	provider_config?: [_]: string
	tune?: [{
		allowed_response_headers: [string, ...]
		audit_non_hmac_request_keys: [string, ...]
		audit_non_hmac_response_keys: [string, ...]
		default_lease_ttl:  string
		listing_visibility: string
		max_lease_ttl:      string
		passthrough_request_headers: [string, ...]
		token_type: string
	}, ...]
	type?: string
}
#VaultJwtAuthBackendRoleResource: {
	role_name:  string
	user_claim: string
	allowed_redirect_uris?: [string, ...]
	backend?: string
	bound_audiences?: [string, ...]
	bound_cidrs?: [string, ...]
	bound_claims?: [_]: string
	bound_claims_type?: string
	bound_subject?:     string
	claim_mappings?: [_]: string
	clock_skew_leeway?:              number
	expiration_leeway?:              number
	groups_claim?:                   string
	groups_claim_delimiter_pattern?: string
	id?:                             string
	max_ttl?:                        number
	not_before_leeway?:              number
	num_uses?:                       number
	oidc_scopes?: [string, ...]
	period?: number
	policies?: [string, ...]
	role_type?: string
	token_bound_cidrs?: [string, ...]
	token_explicit_max_ttl?:  number
	token_max_ttl?:           number
	token_no_default_policy?: bool
	token_num_uses?:          number
	token_period?:            number
	token_policies?: [string, ...]
	token_ttl?:            number
	token_type?:           string
	ttl?:                  number
	verbose_oidc_logging?: bool
}
#VaultKubernetesAuthBackendConfigResource: {
	kubernetes_host:         string
	backend?:                string
	disable_iss_validation?: bool
	disable_local_ca_jwt?:   bool
	id?:                     string
	issuer?:                 string
	kubernetes_ca_cert?:     string
	pem_keys?: [string, ...]
	token_reviewer_jwt?: string
}
#VaultKubernetesAuthBackendRoleResource: {
	bound_service_account_names: [string, ...]
	bound_service_account_namespaces: [string, ...]
	role_name: string
	audience?: string
	backend?:  string
	bound_cidrs?: [string, ...]
	id?:       string
	max_ttl?:  number
	num_uses?: number
	period?:   number
	policies?: [string, ...]
	token_bound_cidrs?: [string, ...]
	token_explicit_max_ttl?:  number
	token_max_ttl?:           number
	token_no_default_policy?: bool
	token_num_uses?:          number
	token_period?:            number
	token_policies?: [string, ...]
	token_ttl?:  number
	token_type?: string
	ttl?:        number
}
#VaultLdapAuthBackendResource: {
	url:              string
	accessor?:        string
	binddn?:          string
	bindpass?:        string
	certificate?:     string
	deny_null_bind?:  bool
	description?:     string
	discoverdn?:      bool
	groupattr?:       string
	groupdn?:         string
	groupfilter?:     string
	id?:              string
	insecure_tls?:    bool
	path?:            string
	starttls?:        bool
	tls_max_version?: string
	tls_min_version?: string
	token_bound_cidrs?: [string, ...]
	token_explicit_max_ttl?:  number
	token_max_ttl?:           number
	token_no_default_policy?: bool
	token_num_uses?:          number
	token_period?:            number
	token_policies?: [string, ...]
	token_ttl?:        number
	token_type?:       string
	upndomain?:        string
	use_token_groups?: bool
	userattr?:         string
	userdn?:           string
}
#VaultLdapAuthBackendGroupResource: {
	groupname: string
	backend?:  string
	id?:       string
	policies?: [string, ...]
}
#VaultLdapAuthBackendUserResource: {
	username: string
	backend?: string
	groups?: [string, ...]
	id?: string
	policies?: [string, ...]
}
#VaultMfaDuoResource: {
	api_hostname:     string
	integration_key:  string
	mount_accessor:   string
	name:             string
	secret_key:       string
	id?:              string
	push_info?:       string
	username_format?: string
}
#VaultMountResource: {
	path:                       string
	type:                       string
	accessor?:                  string
	default_lease_ttl_seconds?: number
	description?:               string
	external_entropy_access?:   bool
	id?:                        string
	local?:                     bool
	max_lease_ttl_seconds?:     number
	options?: [_]: string
	seal_wrap?: bool
}
#VaultNamespaceResource: {
	path:          string
	id?:           string
	namespace_id?: string
}
#VaultNomadSecretBackendResource: {
	address?:                   string
	backend?:                   string
	ca_cert?:                   string
	client_cert?:               string
	client_key?:                string
	default_lease_ttl_seconds?: number
	description?:               string
	id?:                        string
	local?:                     bool
	max_lease_ttl_seconds?:     number
	max_token_name_length?:     number
	max_ttl?:                   number
	token?:                     string
	ttl?:                       number
}
#VaultNomadSecretRoleResource: {
	backend: string
	role:    string
	global?: bool
	id?:     string
	policies?: [string, ...]
	type?: string
}
#VaultOktaAuthBackendResource: {
	organization:     string
	accessor?:        string
	base_url?:        string
	bypass_okta_mfa?: bool
	description?:     string
	group?: [{
		group_name: string
		policies: [string, ...]
	}, ...]
	id?:      string
	max_ttl?: string
	path?:    string
	token?:   string
	ttl?:     string
	user?: [{
		groups: [string, ...]
		policies: [string, ...]
		username: string
	}, ...]
}
#VaultOktaAuthBackendGroupResource: {
	group_name: string
	path:       string
	id?:        string
	policies?: [string, ...]
}
#VaultOktaAuthBackendUserResource: {
	path:     string
	username: string
	groups?: [string, ...]
	id?: string
	policies?: [string, ...]
}
#VaultPasswordPolicyResource: {
	name:   string
	policy: string
	id?:    string
}
#VaultPkiSecretBackendResource: {
	path:                       string
	default_lease_ttl_seconds?: number
	description?:               string
	id?:                        string
	max_lease_ttl_seconds?:     number
}
#VaultPkiSecretBackendCertResource: {
	backend:     string
	common_name: string
	name:        string
	alt_names?: [string, ...]
	auto_renew?:           bool
	ca_chain?:             string
	certificate?:          string
	exclude_cn_from_sans?: bool
	expiration?:           number
	format?:               string
	id?:                   string
	ip_sans?: [string, ...]
	issuing_ca?:            string
	min_seconds_remaining?: number
	other_sans?: [string, ...]
	private_key?:        string
	private_key_format?: string
	private_key_type?:   string
	serial_number?:      string
	ttl?:                string
	uri_sans?: [string, ...]
}
#VaultPkiSecretBackendConfigCaResource: {
	backend:    string
	pem_bundle: string
	id?:        string
}
#VaultPkiSecretBackendConfigUrlsResource: {
	backend: string
	crl_distribution_points?: [string, ...]
	id?: string
	issuing_certificates?: [string, ...]
	ocsp_servers?: [string, ...]
}
#VaultPkiSecretBackendCrlConfigResource: {
	backend:  string
	disable?: bool
	expiry?:  string
	id?:      string
}
#VaultPkiSecretBackendIntermediateCertRequestResource: {
	backend:     string
	common_name: string
	type:        string
	alt_names?: [string, ...]
	country?:              string
	csr?:                  string
	exclude_cn_from_sans?: bool
	format?:               string
	id?:                   string
	ip_sans?: [string, ...]
	key_bits?:     number
	key_type?:     string
	locality?:     string
	organization?: string
	other_sans?: [string, ...]
	ou?:                 string
	postal_code?:        string
	private_key?:        string
	private_key_format?: string
	private_key_type?:   string
	province?:           string
	street_address?:     string
	uri_sans?: [string, ...]
}
#VaultPkiSecretBackendIntermediateSetSignedResource: {
	backend:     string
	certificate: string
	id?:         string
}
#VaultPkiSecretBackendRoleResource: {
	backend:             string
	name:                string
	allow_any_name?:     bool
	allow_bare_domains?: bool
	allow_glob_domains?: bool
	allow_ip_sans?:      bool
	allow_localhost?:    bool
	allow_subdomains?:   bool
	allowed_domains?: [string, ...]
	allowed_other_sans?: [string, ...]
	allowed_uri_sans?: [string, ...]
	basic_constraints_valid_for_non_ca?: bool
	client_flag?:                        bool
	code_signing_flag?:                  bool
	country?: [string, ...]
	email_protection_flag?: bool
	enforce_hostnames?:     bool
	ext_key_usage?: [string, ...]
	generate_lease?: bool
	id?:             string
	key_bits?:       number
	key_type?:       string
	key_usage?: [string, ...]
	locality?: [string, ...]
	max_ttl?:             string
	no_store?:            bool
	not_before_duration?: string
	organization?: [string, ...]
	ou?: [string, ...]
	policy_identifiers?: [string, ...]
	postal_code?: [string, ...]
	province?: [string, ...]
	require_cn?:  bool
	server_flag?: bool
	street_address?: [string, ...]
	ttl?:                 string
	use_csr_common_name?: bool
	use_csr_sans?:        bool
}
#VaultPkiSecretBackendRootCertResource: {
	backend:     string
	common_name: string
	type:        string
	alt_names?: [string, ...]
	certificate?:          string
	country?:              string
	exclude_cn_from_sans?: bool
	format?:               string
	id?:                   string
	ip_sans?: [string, ...]
	issuing_ca?:      string
	key_bits?:        number
	key_type?:        string
	locality?:        string
	max_path_length?: number
	organization?:    string
	other_sans?: [string, ...]
	ou?: string
	permitted_dns_domains?: [string, ...]
	postal_code?:        string
	private_key_format?: string
	province?:           string
	serial?:             string
	street_address?:     string
	ttl?:                string
	uri_sans?: [string, ...]
}
#VaultPkiSecretBackendRootSignIntermediateResource: {
	backend:     string
	common_name: string
	csr:         string
	alt_names?: [string, ...]
	ca_chain?:             string
	certificate?:          string
	country?:              string
	exclude_cn_from_sans?: bool
	format?:               string
	id?:                   string
	ip_sans?: [string, ...]
	issuing_ca?:      string
	locality?:        string
	max_path_length?: number
	organization?:    string
	other_sans?: [string, ...]
	ou?: string
	permitted_dns_domains?: [string, ...]
	postal_code?:    string
	province?:       string
	serial?:         string
	street_address?: string
	ttl?:            string
	uri_sans?: [string, ...]
	use_csr_values?: bool
}
#VaultPkiSecretBackendSignResource: {
	backend:     string
	common_name: string
	csr:         string
	name:        string
	alt_names?: [string, ...]
	auto_renew?: bool
	ca_chain?: [string, ...]
	certificate?:          string
	exclude_cn_from_sans?: bool
	expiration?:           number
	format?:               string
	id?:                   string
	ip_sans?: [string, ...]
	issuing_ca?:            string
	min_seconds_remaining?: number
	other_sans?: [string, ...]
	serial?: string
	ttl?:    string
	uri_sans?: [string, ...]
}
#VaultPolicyResource: {
	name:   string
	policy: string
	id?:    string
}
#VaultQuotaRateLimitResource: {
	name:  string
	rate:  number
	id?:   string
	path?: string
}
#VaultRabbitmqSecretBackendResource: {
	connection_uri:             string
	password:                   string
	username:                   string
	default_lease_ttl_seconds?: number
	description?:               string
	id?:                        string
	max_lease_ttl_seconds?:     number
	path?:                      string
	verify_connection?:         bool
}
#VaultRabbitmqSecretBackendRoleResource: {
	backend: string
	name:    string
	id?:     string
	tags?:   string
	vhost?: [{
		configure: string
		host:      string
		read:      string
		write:     string
	}, ...]
}
#VaultRgpPolicyResource: {
	enforcement_level: string
	name:              string
	policy:            string
	id?:               string
}
#VaultSshSecretBackendCaResource: {
	backend?:              string
	generate_signing_key?: bool
	id?:                   string
	private_key?:          string
	public_key?:           string
}
#VaultSshSecretBackendRoleResource: {
	backend:                   string
	key_type:                  string
	name:                      string
	algorithm_signer?:         string
	allow_bare_domains?:       bool
	allow_host_certificates?:  bool
	allow_subdomains?:         bool
	allow_user_certificates?:  bool
	allow_user_key_ids?:       bool
	allowed_critical_options?: string
	allowed_domains?:          string
	allowed_extensions?:       string
	allowed_user_key_lengths?: [_]: string
	allowed_users?:          string
	allowed_users_template?: bool
	cidr_list?:              string
	default_critical_options?: [_]: string
	default_extensions?: [_]:       string
	default_user?:  string
	id?:            string
	key_id_format?: string
	max_ttl?:       string
	ttl?:           string
}
#VaultTokenResource: {
	client_token?:           string
	display_name?:           string
	encrypted_client_token?: string
	explicit_max_ttl?:       string
	id?:                     string
	lease_duration?:         number
	lease_started?:          string
	no_default_policy?:      bool
	no_parent?:              bool
	num_uses?:               number
	period?:                 string
	pgp_key?:                string
	policies?: [string, ...]
	renew_increment?:   number
	renew_min_lease?:   number
	renewable?:         bool
	role_name?:         string
	ttl?:               string
	wrapped_token?:     string
	wrapping_accessor?: string
	wrapping_ttl?:      string
}
#VaultTokenAuthBackendRoleResource: {
	role_name: string
	allowed_policies?: [string, ...]
	bound_cidrs?: [string, ...]
	disallowed_policies?: [string, ...]
	explicit_max_ttl?: string
	id?:               string
	orphan?:           bool
	path_suffix?:      string
	period?:           string
	renewable?:        bool
	token_bound_cidrs?: [string, ...]
	token_explicit_max_ttl?:  number
	token_max_ttl?:           number
	token_no_default_policy?: bool
	token_num_uses?:          number
	token_period?:            number
	token_policies?: [string, ...]
	token_ttl?:  number
	token_type?: string
}
#VaultTransformAlphabetResource: {
	name:      string
	path:      string
	alphabet?: string
	id?:       string
}
#VaultTransformRoleResource: {
	name: string
	path: string
	id?:  string
	transformations?: [string, ...]
}
#VaultTransformTemplateResource: {
	name:      string
	path:      string
	alphabet?: string
	id?:       string
	pattern?:  string
	type?:     string
}
#VaultTransformTransformationResource: {
	name: string
	path: string
	allowed_roles?: [string, ...]
	id?:                string
	masking_character?: string
	template?:          string
	templates?: [string, ...]
	tweak_source?: string
	type?:         string
}
#VaultTransitSecretBackendKeyResource: {
	backend:                 string
	name:                    string
	allow_plaintext_backup?: bool
	convergent_encryption?:  bool
	deletion_allowed?:       bool
	derived?:                bool
	exportable?:             bool
	id?:                     string
	keys?: [{
		[_]: string
	}, ...]
	latest_version?:         number
	min_available_version?:  number
	min_decryption_version?: number
	min_encryption_version?: number
	supports_decryption?:    bool
	supports_derivation?:    bool
	supports_encryption?:    bool
	supports_signing?:       bool
	type?:                   string
}
#VaultTransitSecretCacheConfigResource: {
	backend: string
	size:    number
	id?:     string
}
#Resources: {
	vault_ad_secret_backend?: [_]:                            #VaultAdSecretBackendResource
	vault_ad_secret_library?: [_]:                            #VaultAdSecretLibraryResource
	vault_ad_secret_role?: [_]:                               #VaultAdSecretRoleResource
	vault_alicloud_auth_backend_role?: [_]:                   #VaultAlicloudAuthBackendRoleResource
	vault_approle_auth_backend_login?: [_]:                   #VaultApproleAuthBackendLoginResource
	vault_approle_auth_backend_role?: [_]:                    #VaultApproleAuthBackendRoleResource
	vault_approle_auth_backend_role_secret_id?: [_]:          #VaultApproleAuthBackendRoleSecretIdResource
	vault_audit?: [_]:                                        #VaultAuditResource
	vault_auth_backend?: [_]:                                 #VaultAuthBackendResource
	vault_aws_auth_backend_cert?: [_]:                        #VaultAwsAuthBackendCertResource
	vault_aws_auth_backend_client?: [_]:                      #VaultAwsAuthBackendClientResource
	vault_aws_auth_backend_identity_whitelist?: [_]:          #VaultAwsAuthBackendIdentityWhitelistResource
	vault_aws_auth_backend_login?: [_]:                       #VaultAwsAuthBackendLoginResource
	vault_aws_auth_backend_role?: [_]:                        #VaultAwsAuthBackendRoleResource
	vault_aws_auth_backend_role_tag?: [_]:                    #VaultAwsAuthBackendRoleTagResource
	vault_aws_auth_backend_roletag_blacklist?: [_]:           #VaultAwsAuthBackendRoletagBlacklistResource
	vault_aws_auth_backend_sts_role?: [_]:                    #VaultAwsAuthBackendStsRoleResource
	vault_aws_secret_backend?: [_]:                           #VaultAwsSecretBackendResource
	vault_aws_secret_backend_role?: [_]:                      #VaultAwsSecretBackendRoleResource
	vault_azure_auth_backend_config?: [_]:                    #VaultAzureAuthBackendConfigResource
	vault_azure_auth_backend_role?: [_]:                      #VaultAzureAuthBackendRoleResource
	vault_azure_secret_backend?: [_]:                         #VaultAzureSecretBackendResource
	vault_azure_secret_backend_role?: [_]:                    #VaultAzureSecretBackendRoleResource
	vault_cert_auth_backend_role?: [_]:                       #VaultCertAuthBackendRoleResource
	vault_consul_secret_backend?: [_]:                        #VaultConsulSecretBackendResource
	vault_consul_secret_backend_role?: [_]:                   #VaultConsulSecretBackendRoleResource
	vault_database_secret_backend_connection?: [_]:           #VaultDatabaseSecretBackendConnectionResource
	vault_database_secret_backend_role?: [_]:                 #VaultDatabaseSecretBackendRoleResource
	vault_database_secret_backend_static_role?: [_]:          #VaultDatabaseSecretBackendStaticRoleResource
	vault_egp_policy?: [_]:                                   #VaultEgpPolicyResource
	vault_gcp_auth_backend?: [_]:                             #VaultGcpAuthBackendResource
	vault_gcp_auth_backend_role?: [_]:                        #VaultGcpAuthBackendRoleResource
	vault_gcp_secret_backend?: [_]:                           #VaultGcpSecretBackendResource
	vault_gcp_secret_roleset?: [_]:                           #VaultGcpSecretRolesetResource
	vault_generic_endpoint?: [_]:                             #VaultGenericEndpointResource
	vault_generic_secret?: [_]:                               #VaultGenericSecretResource
	vault_github_auth_backend?: [_]:                          #VaultGithubAuthBackendResource
	vault_github_team?: [_]:                                  #VaultGithubTeamResource
	vault_github_user?: [_]:                                  #VaultGithubUserResource
	vault_identity_entity?: [_]:                              #VaultIdentityEntityResource
	vault_identity_entity_alias?: [_]:                        #VaultIdentityEntityAliasResource
	vault_identity_entity_policies?: [_]:                     #VaultIdentityEntityPoliciesResource
	vault_identity_group?: [_]:                               #VaultIdentityGroupResource
	vault_identity_group_alias?: [_]:                         #VaultIdentityGroupAliasResource
	vault_identity_group_member_entity_ids?: [_]:             #VaultIdentityGroupMemberEntityIdsResource
	vault_identity_group_policies?: [_]:                      #VaultIdentityGroupPoliciesResource
	vault_identity_oidc?: [_]:                                #VaultIdentityOidcResource
	vault_identity_oidc_key?: [_]:                            #VaultIdentityOidcKeyResource
	vault_identity_oidc_key_allowed_client_id?: [_]:          #VaultIdentityOidcKeyAllowedClientIdResource
	vault_identity_oidc_role?: [_]:                           #VaultIdentityOidcRoleResource
	vault_jwt_auth_backend?: [_]:                             #VaultJwtAuthBackendResource
	vault_jwt_auth_backend_role?: [_]:                        #VaultJwtAuthBackendRoleResource
	vault_kubernetes_auth_backend_config?: [_]:               #VaultKubernetesAuthBackendConfigResource
	vault_kubernetes_auth_backend_role?: [_]:                 #VaultKubernetesAuthBackendRoleResource
	vault_ldap_auth_backend?: [_]:                            #VaultLdapAuthBackendResource
	vault_ldap_auth_backend_group?: [_]:                      #VaultLdapAuthBackendGroupResource
	vault_ldap_auth_backend_user?: [_]:                       #VaultLdapAuthBackendUserResource
	vault_mfa_duo?: [_]:                                      #VaultMfaDuoResource
	vault_mount?: [_]:                                        #VaultMountResource
	vault_namespace?: [_]:                                    #VaultNamespaceResource
	vault_nomad_secret_backend?: [_]:                         #VaultNomadSecretBackendResource
	vault_nomad_secret_role?: [_]:                            #VaultNomadSecretRoleResource
	vault_okta_auth_backend?: [_]:                            #VaultOktaAuthBackendResource
	vault_okta_auth_backend_group?: [_]:                      #VaultOktaAuthBackendGroupResource
	vault_okta_auth_backend_user?: [_]:                       #VaultOktaAuthBackendUserResource
	vault_password_policy?: [_]:                              #VaultPasswordPolicyResource
	vault_pki_secret_backend?: [_]:                           #VaultPkiSecretBackendResource
	vault_pki_secret_backend_cert?: [_]:                      #VaultPkiSecretBackendCertResource
	vault_pki_secret_backend_config_ca?: [_]:                 #VaultPkiSecretBackendConfigCaResource
	vault_pki_secret_backend_config_urls?: [_]:               #VaultPkiSecretBackendConfigUrlsResource
	vault_pki_secret_backend_crl_config?: [_]:                #VaultPkiSecretBackendCrlConfigResource
	vault_pki_secret_backend_intermediate_cert_request?: [_]: #VaultPkiSecretBackendIntermediateCertRequestResource
	vault_pki_secret_backend_intermediate_set_signed?: [_]:   #VaultPkiSecretBackendIntermediateSetSignedResource
	vault_pki_secret_backend_role?: [_]:                      #VaultPkiSecretBackendRoleResource
	vault_pki_secret_backend_root_cert?: [_]:                 #VaultPkiSecretBackendRootCertResource
	vault_pki_secret_backend_root_sign_intermediate?: [_]:    #VaultPkiSecretBackendRootSignIntermediateResource
	vault_pki_secret_backend_sign?: [_]:                      #VaultPkiSecretBackendSignResource
	vault_policy?: [_]:                                       #VaultPolicyResource
	vault_quota_rate_limit?: [_]:                             #VaultQuotaRateLimitResource
	vault_rabbitmq_secret_backend?: [_]:                      #VaultRabbitmqSecretBackendResource
	vault_rabbitmq_secret_backend_role?: [_]:                 #VaultRabbitmqSecretBackendRoleResource
	vault_rgp_policy?: [_]:                                   #VaultRgpPolicyResource
	vault_ssh_secret_backend_ca?: [_]:                        #VaultSshSecretBackendCaResource
	vault_ssh_secret_backend_role?: [_]:                      #VaultSshSecretBackendRoleResource
	vault_token?: [_]:                                        #VaultTokenResource
	vault_token_auth_backend_role?: [_]:                      #VaultTokenAuthBackendRoleResource
	vault_transform_alphabet?: [_]:                           #VaultTransformAlphabetResource
	vault_transform_role?: [_]:                               #VaultTransformRoleResource
	vault_transform_template?: [_]:                           #VaultTransformTemplateResource
	vault_transform_transformation?: [_]:                     #VaultTransformTransformationResource
	vault_transit_secret_backend_key?: [_]:                   #VaultTransitSecretBackendKeyResource
	vault_transit_secret_cache_config?: [_]:                  #VaultTransitSecretCacheConfigResource
}
