// Generated by cue-terraform-gen (https://github.com/tnarg/cue_terraform_gen). DO NOT EDIT.
package aws

#AwsAccessanalyzerAnalyzerResource: {
	analyzer_name: string
	tags?: [_]: string
	type?: string
}
#AwsAcmCertificateResource: {
	certificate_authority_arn?: string
	certificate_body?:          string
	certificate_chain?:         string
	private_key?:               string
	tags?: [_]: string
	options?: [{
		certificate_transparency_logging_preference?: string
	}, ...]
}
#AwsAcmCertificateValidationResource: {
	certificate_arn: string
	validation_record_fqdns?: [string, ...]
	timeouts?: create?: string
}
#AwsAcmpcaCertificateAuthorityResource: {
	enabled?:                         bool
	permanent_deletion_time_in_days?: number
	tags?: [_]: string
	type?: string
	certificate_authority_configuration?: [{
		key_algorithm:     string
		signing_algorithm: string
		subject?: [{
			common_name?:                  string
			country?:                      string
			distinguished_name_qualifier?: string
			generation_qualifier?:         string
			given_name?:                   string
			initials?:                     string
			locality?:                     string
			organization?:                 string
			organizational_unit?:          string
			pseudonym?:                    string
			state?:                        string
			surname?:                      string
			title?:                        string
		}, ...]
	}, ...]
	revocation_configuration?: [{
		crl_configuration?: [{
			expiration_in_days: number
			custom_cname?:      string
			enabled?:           bool
			s3_bucket_name?:    string
		}, ...]
	}, ...]
	timeouts?: create?: string
}
#AwsAlbResource: {
	drop_invalid_header_fields?:       bool
	enable_cross_zone_load_balancing?: bool
	enable_deletion_protection?:       bool
	enable_http2?:                     bool
	idle_timeout?:                     number
	load_balancer_type?:               string
	name_prefix?:                      string
	tags?: [_]: string
	access_logs?: [{
		bucket:   string
		enabled?: bool
		prefix?:  string
	}, ...]
	subnet_mapping?: [{
		subnet_id:      string
		allocation_id?: string
	}, ...]
	timeouts?: {
		create?: string
		delete?: string
		update?: string
	}
}
#AwsAlbListenerResource: {
	load_balancer_arn: string
	port:              number
	certificate_arn?:  string
	protocol?:         string
	default_action?: [{
		type:              string
		target_group_arn?: string
		authenticate_cognito?: [{
			user_pool_arn:       string
			user_pool_client_id: string
			user_pool_domain:    string
			authentication_request_extra_params?: [_]: string
		}, ...]
		authenticate_oidc?: [{
			authorization_endpoint: string
			client_id:              string
			client_secret:          string
			issuer:                 string
			token_endpoint:         string
			user_info_endpoint:     string
			authentication_request_extra_params?: [_]: string
		}, ...]
		fixed_response?: [{
			content_type:  string
			message_body?: string
		}, ...]
		redirect?: [{
			status_code: string
			host?:       string
			path?:       string
			port?:       string
			protocol?:   string
			query?:      string
		}, ...]
	}, ...]
	timeouts?: read?: string
}
#AwsAlbListenerCertificateResource: {
	certificate_arn: string
	listener_arn:    string
}
#AwsAlbListenerRuleResource: {
	listener_arn: string
	action?: [{
		type:              string
		target_group_arn?: string
		authenticate_cognito?: [{
			user_pool_arn:       string
			user_pool_client_id: string
			user_pool_domain:    string
			authentication_request_extra_params?: [_]: string
		}, ...]
		authenticate_oidc?: [{
			authorization_endpoint: string
			client_id:              string
			client_secret:          string
			issuer:                 string
			token_endpoint:         string
			user_info_endpoint:     string
			authentication_request_extra_params?: [_]: string
		}, ...]
		fixed_response?: [{
			content_type:  string
			message_body?: string
		}, ...]
		redirect?: [{
			status_code: string
			host?:       string
			path?:       string
			port?:       string
			protocol?:   string
			query?:      string
		}, ...]
	}, ...]
	condition?: [{
		host_header?: [{}, ...]
		http_header?: [{
			http_header_name: string
			values: [string, ...]
		}, ...]
		http_request_method?: [{
			values: [string, ...]
		}, ...]
		path_pattern?: [{}, ...]
		query_string?: [{
			value: string
			key?:  string
		}, ...]
		source_ip?: [{
			values: [string, ...]
		}, ...]
	}, ...]
}
#AwsAlbTargetGroupResource: {
	deregistration_delay?:               number
	lambda_multi_value_headers_enabled?: bool
	name_prefix?:                        string
	port?:                               number
	protocol?:                           string
	proxy_protocol_v2?:                  bool
	slow_start?:                         number
	tags?: [_]: string
	target_type?: string
	vpc_id?:      string
	health_check?: [{
		enabled?:             bool
		healthy_threshold?:   number
		interval?:            number
		port?:                string
		protocol?:            string
		unhealthy_threshold?: number
	}, ...]
	stickiness?: [{
		type:             string
		cookie_duration?: number
		enabled?:         bool
	}, ...]
}
#AwsAlbTargetGroupAttachmentResource: {
	target_group_arn:   string
	target_id:          string
	availability_zone?: string
	port?:              number
}
#AwsAmiResource: {
	name:               string
	architecture?:      string
	description?:       string
	ena_support?:       bool
	kernel_id?:         string
	ramdisk_id?:        string
	root_device_name?:  string
	sriov_net_support?: string
	tags?: [_]: string
	virtualization_type?: string
	ebs_block_device?: [{
		device_name:            string
		delete_on_termination?: bool
		encrypted?:             bool
		iops?:                  number
		snapshot_id?:           string
		volume_type?:           string
	}, ...]
	ephemeral_block_device?: [{
		device_name:  string
		virtual_name: string
	}, ...]
	timeouts?: {
		create?: string
		delete?: string
		update?: string
	}
}
#AwsAmiCopyResource: {
	name:              string
	source_ami_id:     string
	source_ami_region: string
	description?:      string
	encrypted?:        bool
	tags?: [_]: string
	ebs_block_device?: [{}, ...]
	ephemeral_block_device?: [{}, ...]
	timeouts?: {
		create?: string
		delete?: string
		update?: string
	}
}
#AwsAmiFromInstanceResource: {
	name:                     string
	source_instance_id:       string
	description?:             string
	snapshot_without_reboot?: bool
	tags?: [_]: string
	ebs_block_device?: [{}, ...]
	ephemeral_block_device?: [{}, ...]
	timeouts?: {
		create?: string
		delete?: string
		update?: string
	}
}
#AwsAmiLaunchPermissionResource: {
	account_id: string
	image_id:   string
}
#AwsApiGatewayAccountResource: cloudwatch_role_arn?: string
#AwsApiGatewayApiKeyResource: {
	name:         string
	description?: string
	enabled?:     bool
	tags?: [_]: string
	stage_key?: [{
		rest_api_id: string
		stage_name:  string
	}, ...]
}
#AwsApiGatewayAuthorizerResource: {
	name:                              string
	rest_api_id:                       string
	authorizer_credentials?:           string
	authorizer_result_ttl_in_seconds?: number
	authorizer_uri?:                   string
	identity_source?:                  string
	identity_validation_expression?:   string
	provider_arns?: [string, ...]
	type?: string
}
#AwsApiGatewayBasePathMappingResource: {
	api_id:      string
	domain_name: string
	base_path?:  string
	stage_name?: string
}
#AwsApiGatewayClientCertificateResource: {
	description?: string
	tags?: [_]: string
}
#AwsApiGatewayDeploymentResource: {
	rest_api_id:        string
	description?:       string
	stage_description?: string
	stage_name?:        string
	triggers?: [_]:  string
	variables?: [_]: string
}
#AwsApiGatewayDocumentationPartResource: {
	properties:  string
	rest_api_id: string
	location?: [{
		type:         string
		method?:      string
		name?:        string
		path?:        string
		status_code?: string
	}, ...]
}
#AwsApiGatewayDocumentationVersionResource: {
	rest_api_id:  string
	version:      string
	description?: string
}
#AwsApiGatewayDomainNameResource: {
	domain_name:                string
	certificate_arn?:           string
	certificate_body?:          string
	certificate_chain?:         string
	certificate_name?:          string
	certificate_private_key?:   string
	regional_certificate_arn?:  string
	regional_certificate_name?: string
	tags?: [_]: string
	endpoint_configuration?: [{
		types: [string, ...]
	}, ...]
}
#AwsApiGatewayGatewayResponseResource: {
	response_type: string
	rest_api_id:   string
	response_parameters?: [_]: string
	response_templates?: [_]:  string
	status_code?: string
}
#AwsApiGatewayIntegrationResource: {
	http_method: string
	resource_id: string
	rest_api_id: string
	type:        string
	cache_key_parameters?: [string, ...]
	connection_id?:           string
	connection_type?:         string
	content_handling?:        string
	credentials?:             string
	integration_http_method?: string
	request_parameters?: [_]: string
	request_parameters_in_json?: string
	request_templates?: [_]: string
	timeout_milliseconds?: number
	uri?:                  string
}
#AwsApiGatewayIntegrationResponseResource: {
	http_method:       string
	resource_id:       string
	rest_api_id:       string
	status_code:       string
	content_handling?: string
	response_parameters?: [_]: string
	response_parameters_in_json?: string
	response_templates?: [_]: string
	selection_pattern?: string
}
#AwsApiGatewayMethodResource: {
	authorization:     string
	http_method:       string
	resource_id:       string
	rest_api_id:       string
	api_key_required?: bool
	authorization_scopes?: [string, ...]
	authorizer_id?: string
	request_models?: [_]:     string
	request_parameters?: [_]: bool
	request_parameters_in_json?: string
	request_validator_id?:       string
}
#AwsApiGatewayMethodResponseResource: {
	http_method: string
	resource_id: string
	rest_api_id: string
	status_code: string
	response_models?: [_]:     string
	response_parameters?: [_]: bool
	response_parameters_in_json?: string
}
#AwsApiGatewayMethodSettingsResource: {
	method_path: string
	rest_api_id: string
	stage_name:  string
	settings?: [{
		cache_data_encrypted?:                       bool
		cache_ttl_in_seconds?:                       number
		caching_enabled?:                            bool
		data_trace_enabled?:                         bool
		logging_level?:                              string
		metrics_enabled?:                            bool
		require_authorization_for_cache_control?:    bool
		throttling_burst_limit?:                     number
		throttling_rate_limit?:                      number
		unauthorized_cache_control_header_strategy?: string
	}, ...]
}
#AwsApiGatewayModelResource: {
	content_type: string
	name:         string
	rest_api_id:  string
	description?: string
	schema?:      string
}
#AwsApiGatewayRequestValidatorResource: {
	name:                         string
	rest_api_id:                  string
	validate_request_body?:       bool
	validate_request_parameters?: bool
}
#AwsApiGatewayResourceResource: {
	parent_id:   string
	path_part:   string
	rest_api_id: string
}
#AwsApiGatewayRestApiResource: {
	name:            string
	api_key_source?: string
	binary_media_types?: [string, ...]
	body?:                     string
	description?:              string
	minimum_compression_size?: number
	policy?:                   string
	tags?: [_]: string
	endpoint_configuration?: [{
		types: [string, ...]
		vpc_endpoint_ids?: [string, ...]
	}, ...]
}
#AwsApiGatewayStageResource: {
	deployment_id:          string
	rest_api_id:            string
	stage_name:             string
	cache_cluster_enabled?: bool
	cache_cluster_size?:    string
	client_certificate_id?: string
	description?:           string
	documentation_version?: string
	tags?: [_]:      string
	variables?: [_]: string
	xray_tracing_enabled?: bool
	access_log_settings?: [{
		destination_arn: string
		format:          string
	}, ...]
}
#AwsApiGatewayUsagePlanResource: {
	name:          string
	description?:  string
	product_code?: string
	tags?: [_]: string
	api_stages?: [{
		api_id: string
		stage:  string
	}, ...]
	quota_settings?: [{
		limit:   number
		period:  string
		offset?: number
	}, ...]
	throttle_settings?: [{
		burst_limit?: number
		rate_limit?:  number
	}, ...]
}
#AwsApiGatewayUsagePlanKeyResource: {
	key_id:        string
	key_type:      string
	usage_plan_id: string
}
#AwsApiGatewayVpcLinkResource: {
	name: string
	target_arns: [string, ...]
	description?: string
	tags?: [_]: string
}
#AwsApigatewayv2ApiResource: {
	name:                          string
	protocol_type:                 string
	api_key_selection_expression?: string
	credentials_arn?:              string
	description?:                  string
	route_key?:                    string
	route_selection_expression?:   string
	tags?: [_]: string
	target?:  string
	version?: string
	cors_configuration?: [{
		allow_credentials?: bool
		allow_headers?: [string, ...]
		allow_methods?: [string, ...]
		allow_origins?: [string, ...]
		expose_headers?: [string, ...]
		max_age?: number
	}, ...]
}
#AwsApigatewayv2ApiMappingResource: {
	api_id:           string
	domain_name:      string
	stage:            string
	api_mapping_key?: string
}
#AwsApigatewayv2AuthorizerResource: {
	api_id:          string
	authorizer_type: string
	identity_sources: [string, ...]
	name:                        string
	authorizer_credentials_arn?: string
	authorizer_uri?:             string
	jwt_configuration?: [{
		audience?: [string, ...]
		issuer?: string
	}, ...]
}
#AwsApigatewayv2DeploymentResource: {
	api_id:       string
	description?: string
	triggers?: [_]: string
}
#AwsApigatewayv2DomainNameResource: {
	domain_name: string
	tags?: [_]: string
	domain_name_configuration?: [{
		certificate_arn: string
		endpoint_type:   string
		security_policy: string
	}, ...]
	timeouts?: update?: string
}
#AwsApigatewayv2IntegrationResource: {
	api_id:                     string
	integration_type:           string
	connection_id?:             string
	connection_type?:           string
	content_handling_strategy?: string
	credentials_arn?:           string
	description?:               string
	integration_method?:        string
	integration_uri?:           string
	passthrough_behavior?:      string
	payload_format_version?:    string
	request_templates?: [_]: string
	template_selection_expression?: string
	timeout_milliseconds?:          number
}
#AwsApigatewayv2IntegrationResponseResource: {
	api_id:                     string
	integration_id:             string
	integration_response_key:   string
	content_handling_strategy?: string
	response_templates?: [_]: string
	template_selection_expression?: string
}
#AwsApigatewayv2ModelResource: {
	api_id:       string
	content_type: string
	name:         string
	schema:       string
	description?: string
}
#AwsApigatewayv2RouteResource: {
	api_id:            string
	route_key:         string
	api_key_required?: bool
	authorization_scopes?: [string, ...]
	authorization_type?:         string
	authorizer_id?:              string
	model_selection_expression?: string
	operation_name?:             string
	request_models?: [_]: string
	route_response_selection_expression?: string
	target?:                              string
}
#AwsApigatewayv2RouteResponseResource: {
	api_id:                      string
	route_id:                    string
	route_response_key:          string
	model_selection_expression?: string
	response_models?: [_]: string
}
#AwsApigatewayv2StageResource: {
	api_id:                 string
	name:                   string
	auto_deploy?:           bool
	client_certificate_id?: string
	deployment_id?:         string
	description?:           string
	stage_variables?: [_]: string
	tags?: [_]:            string
	access_log_settings?: [{
		destination_arn: string
		format:          string
	}, ...]
	default_route_settings?: [{
		data_trace_enabled?:       bool
		detailed_metrics_enabled?: bool
		logging_level?:            string
		throttling_burst_limit?:   number
		throttling_rate_limit?:    number
	}, ...]
	route_settings?: [{
		route_key:                 string
		data_trace_enabled?:       bool
		detailed_metrics_enabled?: bool
		logging_level?:            string
		throttling_burst_limit?:   number
		throttling_rate_limit?:    number
	}, ...]
}
#AwsApigatewayv2VpcLinkResource: {
	name: string
	security_group_ids: [string, ...]
	subnet_ids: [string, ...]
	tags?: [_]: string
}
#AwsAppCookieStickinessPolicyResource: {
	cookie_name:   string
	lb_port:       number
	load_balancer: string
	name:          string
}
#AwsAppautoscalingPolicyResource: {
	name:                      string
	resource_id:               string
	scalable_dimension:        string
	service_namespace:         string
	adjustment_type?:          string
	cooldown?:                 number
	metric_aggregation_type?:  string
	min_adjustment_magnitude?: number
	policy_type?:              string
	step_adjustment?: [{
		scaling_adjustment:           number
		metric_interval_lower_bound?: string
		metric_interval_upper_bound?: string
	}, ...]
	step_scaling_policy_configuration?: [{
		adjustment_type?:          string
		cooldown?:                 number
		metric_aggregation_type?:  string
		min_adjustment_magnitude?: number
		step_adjustment?: [{
			scaling_adjustment:           number
			metric_interval_lower_bound?: string
			metric_interval_upper_bound?: string
		}, ...]
	}, ...]
	target_tracking_scaling_policy_configuration?: [{
		target_value:        number
		disable_scale_in?:   bool
		scale_in_cooldown?:  number
		scale_out_cooldown?: number
		customized_metric_specification?: [{
			metric_name: string
			namespace:   string
			statistic:   string
			unit?:       string
			dimensions?: [{
				name:  string
				value: string
			}, ...]
		}, ...]
		predefined_metric_specification?: [{
			predefined_metric_type: string
			resource_label?:        string
		}, ...]
	}, ...]
}
#AwsAppautoscalingScheduledActionResource: {
	name:                string
	resource_id:         string
	service_namespace:   string
	end_time?:           string
	scalable_dimension?: string
	schedule?:           string
	start_time?:         string
	scalable_target_action?: [{
		max_capacity?: number
		min_capacity?: number
	}, ...]
}
#AwsAppautoscalingTargetResource: {
	max_capacity:       number
	min_capacity:       number
	resource_id:        string
	scalable_dimension: string
	service_namespace:  string
}
#AwsAppmeshMeshResource: {
	name: string
	tags?: [_]: string
	spec?: [{
		egress_filter?: [{
			type?: string
		}, ...]
	}, ...]
}
#AwsAppmeshRouteResource: {
	mesh_name:           string
	name:                string
	virtual_router_name: string
	tags?: [_]: string
	spec?: [{
		priority?: number
		http_route?: [{
			action?: [{
				weighted_target?: [{
					virtual_node: string
					weight:       number
				}, ...]
			}, ...]
			match?: [{
				prefix:  string
				method?: string
				scheme?: string
				header?: [{
					name:    string
					invert?: bool
					match?: [{
						exact?:  string
						prefix?: string
						regex?:  string
						suffix?: string
						range?: [{
							end:   number
							start: number
						}, ...]
					}, ...]
				}, ...]
			}, ...]
		}, ...]
		tcp_route?: [{
			action?: [{
				weighted_target?: [{
					virtual_node: string
					weight:       number
				}, ...]
			}, ...]
		}, ...]
	}, ...]
}
#AwsAppmeshVirtualNodeResource: {
	mesh_name: string
	name:      string
	tags?: [_]: string
	spec?: [{
		backend?: [{
			virtual_service?: [{
				virtual_service_name: string
			}, ...]
		}, ...]
		listener?: [{
			health_check?: [{
				healthy_threshold:   number
				interval_millis:     number
				protocol:            string
				timeout_millis:      number
				unhealthy_threshold: number
				path?:               string
			}, ...]
			port_mapping?: [{
				port:     number
				protocol: string
			}, ...]
		}, ...]
		logging?: [{
			access_log?: [{
				file?: [{
					path: string
				}, ...]
			}, ...]
		}, ...]
		service_discovery?: [{
			aws_cloud_map?: [{
				namespace_name: string
				service_name:   string
				attributes?: [_]: string
			}, ...]
			dns?: [{
				hostname: string
			}, ...]
		}, ...]
	}, ...]
}
#AwsAppmeshVirtualRouterResource: {
	mesh_name: string
	name:      string
	tags?: [_]: string
	spec?: [{
		listener?: [{
			port_mapping?: [{
				port:     number
				protocol: string
			}, ...]
		}, ...]
	}, ...]
}
#AwsAppmeshVirtualServiceResource: {
	mesh_name: string
	name:      string
	tags?: [_]: string
	spec?: [{
		provider?: [{
			virtual_node?: [{
				virtual_node_name: string
			}, ...]
			virtual_router?: [{
				virtual_router_name: string
			}, ...]
		}, ...]
	}, ...]
}
#AwsAppsyncApiKeyResource: {
	api_id:       string
	description?: string
	expires?:     string
}
#AwsAppsyncDatasourceResource: {
	api_id:            string
	name:              string
	type:              string
	description?:      string
	service_role_arn?: string
	dynamodb_config?: [{
		table_name:              string
		use_caller_credentials?: bool
	}, ...]
	elasticsearch_config?: [{
		endpoint: string
	}, ...]
	http_config?: [{
		endpoint: string
	}, ...]
	lambda_config?: [{
		function_arn: string
	}, ...]
}
#AwsAppsyncFunctionResource: {
	api_id:                    string
	data_source:               string
	name:                      string
	request_mapping_template:  string
	response_mapping_template: string
	description?:              string
	function_version?:         string
}
#AwsAppsyncGraphqlApiResource: {
	authentication_type: string
	name:                string
	schema?:             string
	tags?: [_]: string
	xray_enabled?: bool
	additional_authentication_provider?: [{
		authentication_type: string
		openid_connect_config?: [{
			issuer:     string
			auth_ttl?:  number
			client_id?: string
			iat_ttl?:   number
		}, ...]
		user_pool_config?: [{
			user_pool_id:         string
			app_id_client_regex?: string
		}, ...]
	}, ...]
	log_config?: [{
		cloudwatch_logs_role_arn: string
		field_log_level:          string
		exclude_verbose_content?: bool
	}, ...]
	openid_connect_config?: [{
		issuer:     string
		auth_ttl?:  number
		client_id?: string
		iat_ttl?:   number
	}, ...]
	user_pool_config?: [{
		default_action:       string
		user_pool_id:         string
		app_id_client_regex?: string
	}, ...]
}
#AwsAppsyncResolverResource: {
	api_id:            string
	field:             string
	request_template:  string
	response_template: string
	type:              string
	data_source?:      string
	kind?:             string
	caching_config?: [{
		caching_keys?: [string, ...]
		ttl?: number
	}, ...]
	pipeline_config?: [{
		functions?: [string, ...]
	}, ...]
}
#AwsAthenaDatabaseResource: {
	bucket:         string
	name:           string
	force_destroy?: bool
	encryption_configuration?: [{
		encryption_option: string
		kms_key?:          string
	}, ...]
}
#AwsAthenaNamedQueryResource: {
	database:     string
	name:         string
	query:        string
	description?: string
	workgroup?:   string
}
#AwsAthenaWorkgroupResource: {
	name:           string
	description?:   string
	force_destroy?: bool
	state?:         string
	tags?: [_]: string
	configuration?: [{
		bytes_scanned_cutoff_per_query?:     number
		enforce_workgroup_configuration?:    bool
		publish_cloudwatch_metrics_enabled?: bool
		result_configuration?: [{
			output_location?: string
			encryption_configuration?: [{
				encryption_option?: string
				kms_key_arn?:       string
			}, ...]
		}, ...]
	}, ...]
}
#AwsAutoscalingAttachmentResource: {
	autoscaling_group_name: string
	alb_target_group_arn?:  string
	elb?:                   string
}
#AwsAutoscalingGroupResource: {
	max_size: number
	min_size: number
	enabled_metrics?: [string, ...]
	force_delete?:              bool
	health_check_grace_period?: number
	launch_configuration?:      string
	max_instance_lifetime?:     number
	metrics_granularity?:       string
	min_elb_capacity?:          number
	name_prefix?:               string
	placement_group?:           string
	protect_from_scale_in?:     bool
	suspended_processes?: [string, ...]
	tags?: [{
		[_]: string
	}, ...]
	termination_policies?: [string, ...]
	wait_for_capacity_timeout?: string
	wait_for_elb_capacity?:     number
	initial_lifecycle_hook?: [{
		lifecycle_transition:     string
		name:                     string
		heartbeat_timeout?:       number
		notification_metadata?:   string
		notification_target_arn?: string
		role_arn?:                string
	}, ...]
	launch_template?: [{
		version?: string
	}, ...]
	mixed_instances_policy?: [{
		instances_distribution?: [{
			on_demand_allocation_strategy?:            string
			on_demand_base_capacity?:                  number
			on_demand_percentage_above_base_capacity?: number
			spot_allocation_strategy?:                 string
			spot_max_price?:                           string
		}, ...]
		launch_template?: [{
			launch_template_specification?: [{
				version?: string
			}, ...]
			override?: [{
				instance_type?:     string
				weighted_capacity?: string
			}, ...]
		}, ...]
	}, ...]
	tag?: [{
		key:                 string
		propagate_at_launch: bool
		value:               string
	}, ...]
	timeouts?: delete?: string
}
#AwsAutoscalingLifecycleHookResource: {
	autoscaling_group_name:   string
	lifecycle_transition:     string
	name:                     string
	heartbeat_timeout?:       number
	notification_metadata?:   string
	notification_target_arn?: string
	role_arn?:                string
}
#AwsAutoscalingNotificationResource: {
	group_names: [string, ...]
	notifications: [string, ...]
	topic_arn: string
}
#AwsAutoscalingPolicyResource: {
	autoscaling_group_name:     string
	name:                       string
	adjustment_type?:           string
	cooldown?:                  number
	estimated_instance_warmup?: number
	min_adjustment_magnitude?:  number
	min_adjustment_step?:       number
	policy_type?:               string
	scaling_adjustment?:        number
	step_adjustment?: [{
		scaling_adjustment:           number
		metric_interval_lower_bound?: string
		metric_interval_upper_bound?: string
	}, ...]
	target_tracking_configuration?: [{
		target_value:      number
		disable_scale_in?: bool
		customized_metric_specification?: [{
			metric_name: string
			namespace:   string
			statistic:   string
			unit?:       string
			metric_dimension?: [{
				name:  string
				value: string
			}, ...]
		}, ...]
		predefined_metric_specification?: [{
			predefined_metric_type: string
			resource_label?:        string
		}, ...]
	}, ...]
}
#AwsAutoscalingScheduleResource: {
	autoscaling_group_name: string
	scheduled_action_name:  string
}
#AwsBackupPlanResource: {
	name: string
	tags?: [_]: string
	rule?: [{
		rule_name:          string
		target_vault_name:  string
		completion_window?: number
		recovery_point_tags?: [_]: string
		schedule?:     string
		start_window?: number
		copy_action?: [{
			destination_vault_arn: string
			lifecycle?: [{
				cold_storage_after?: number
				delete_after?:       number
			}, ...]
		}, ...]
		lifecycle?: [{
			cold_storage_after?: number
			delete_after?:       number
		}, ...]
	}, ...]
}
#AwsBackupSelectionResource: {
	iam_role_arn: string
	name:         string
	plan_id:      string
	resources?: [string, ...]
	selection_tag?: [{
		key:   string
		type:  string
		value: string
	}, ...]
}
#AwsBackupVaultResource: {
	name: string
	tags?: [_]: string
}
#AwsBatchComputeEnvironmentResource: {
	service_role:                     string
	type:                             string
	compute_environment_name_prefix?: string
	state?:                           string
	compute_resources?: [{
		instance_role: string
		instance_type: [string, ...]
		max_vcpus: number
		min_vcpus: number
		security_group_ids: [string, ...]
		subnets: [string, ...]
		type:                 string
		allocation_strategy?: string
		bid_percentage?:      number
		desired_vcpus?:       number
		ec2_key_pair?:        string
		image_id?:            string
		spot_iam_fleet_role?: string
		tags?: [_]: string
		launch_template?: [{
			launch_template_id?:   string
			launch_template_name?: string
			version?:              string
		}, ...]
	}, ...]
}
#AwsBatchJobDefinitionResource: {
	name:                  string
	type:                  string
	container_properties?: string
	parameters?: [_]: string
	retry_strategy?: [{
		attempts?: number
	}, ...]
	timeout?: [{
		attempt_duration_seconds?: number
	}, ...]
}
#AwsBatchJobQueueResource: {
	compute_environments: [string, ...]
	name:     string
	priority: number
	state:    string
}
#AwsBudgetsBudgetResource: {
	budget_type:       string
	limit_amount:      string
	limit_unit:        string
	time_period_start: string
	time_unit:         string
	time_period_end?:  string
	cost_types?: [{
		include_credit?:             bool
		include_discount?:           bool
		include_other_subscription?: bool
		include_recurring?:          bool
		include_refund?:             bool
		include_subscription?:       bool
		include_support?:            bool
		include_tax?:                bool
		include_upfront?:            bool
		use_amortized?:              bool
		use_blended?:                bool
	}, ...]
	notification?: [{
		comparison_operator: string
		notification_type:   string
		threshold:           number
		threshold_type:      string
		subscriber_email_addresses?: [string, ...]
		subscriber_sns_topic_arns?: [string, ...]
	}, ...]
}
#AwsCloud9EnvironmentEc2Resource: {
	instance_type:                string
	name:                         string
	automatic_stop_time_minutes?: number
	description?:                 string
	subnet_id?:                   string
	tags?: [_]: string
}
#AwsCloudformationStackResource: {
	name: string
	capabilities?: [string, ...]
	disable_rollback?: bool
	iam_role_arn?:     string
	notification_arns?: [string, ...]
	on_failure?: string
	policy_url?: string
	tags?: [_]: string
	template_url?:       string
	timeout_in_minutes?: number
	timeouts?: {
		create?: string
		delete?: string
		update?: string
	}
}
#AwsCloudformationStackSetResource: {
	administration_role_arn: string
	name:                    string
	capabilities?: [string, ...]
	description?:         string
	execution_role_name?: string
	parameters?: [_]: string
	tags?: [_]:       string
	template_url?: string
	timeouts?: update?: string
}
#AwsCloudformationStackSetInstanceResource: {
	stack_set_name: string
	parameter_overrides?: [_]: string
	retain_stack?: bool
	timeouts?: {
		create?: string
		delete?: string
		update?: string
	}
}
#AwsCloudfrontDistributionResource: {
	enabled: bool
	aliases?: [string, ...]
	comment?:             string
	default_root_object?: string
	http_version?:        string
	is_ipv6_enabled?:     bool
	price_class?:         string
	retain_on_delete?:    bool
	tags?: [_]: string
	wait_for_deployment?: bool
	web_acl_id?:          string
	cache_behavior?: [{
		allowed_methods: [string, ...]
		cached_methods: [string, ...]
		path_pattern:               string
		target_origin_id:           string
		viewer_protocol_policy:     string
		compress?:                  bool
		default_ttl?:               number
		field_level_encryption_id?: string
		max_ttl?:                   number
		min_ttl?:                   number
		smooth_streaming?:          bool
		trusted_signers?: [string, ...]
		forwarded_values?: [{
			query_string: bool
			headers?: [string, ...]
			query_string_cache_keys?: [string, ...]
			cookies?: [{
				forward: string
				whitelisted_names?: [string, ...]
			}, ...]
		}, ...]
		lambda_function_association?: [{
			event_type:    string
			lambda_arn:    string
			include_body?: bool
		}, ...]
	}, ...]
	custom_error_response?: [{
		error_code:             number
		error_caching_min_ttl?: number
		response_code?:         number
		response_page_path?:    string
	}, ...]
	default_cache_behavior?: [{
		allowed_methods: [string, ...]
		cached_methods: [string, ...]
		target_origin_id:           string
		viewer_protocol_policy:     string
		compress?:                  bool
		default_ttl?:               number
		field_level_encryption_id?: string
		max_ttl?:                   number
		min_ttl?:                   number
		smooth_streaming?:          bool
		trusted_signers?: [string, ...]
		forwarded_values?: [{
			query_string: bool
			headers?: [string, ...]
			query_string_cache_keys?: [string, ...]
			cookies?: [{
				forward: string
				whitelisted_names?: [string, ...]
			}, ...]
		}, ...]
		lambda_function_association?: [{
			event_type:    string
			lambda_arn:    string
			include_body?: bool
		}, ...]
	}, ...]
	logging_config?: [{
		bucket:           string
		include_cookies?: bool
		prefix?:          string
	}, ...]
	ordered_cache_behavior?: [{
		allowed_methods: [string, ...]
		cached_methods: [string, ...]
		path_pattern:               string
		target_origin_id:           string
		viewer_protocol_policy:     string
		compress?:                  bool
		default_ttl?:               number
		field_level_encryption_id?: string
		max_ttl?:                   number
		min_ttl?:                   number
		smooth_streaming?:          bool
		trusted_signers?: [string, ...]
		forwarded_values?: [{
			query_string: bool
			headers?: [string, ...]
			query_string_cache_keys?: [string, ...]
			cookies?: [{
				forward: string
				whitelisted_names?: [string, ...]
			}, ...]
		}, ...]
		lambda_function_association?: [{
			event_type:    string
			lambda_arn:    string
			include_body?: bool
		}, ...]
	}, ...]
	origin?: [{
		domain_name:  string
		origin_id:    string
		origin_path?: string
		custom_header?: [{
			name:  string
			value: string
		}, ...]
		custom_origin_config?: [{
			http_port:              number
			https_port:             number
			origin_protocol_policy: string
			origin_ssl_protocols: [string, ...]
			origin_keepalive_timeout?: number
			origin_read_timeout?:      number
		}, ...]
		s3_origin_config?: [{
			origin_access_identity: string
		}, ...]
	}, ...]
	origin_group?: [{
		origin_id: string
		failover_criteria?: [{
			status_codes: [number, ...]
		}, ...]
		member?: [{
			origin_id: string
		}, ...]
	}, ...]
	restrictions?: [{
		geo_restriction?: [{
			restriction_type: string
			locations?: [string, ...]
		}, ...]
	}, ...]
	viewer_certificate?: [{
		acm_certificate_arn?:            string
		cloudfront_default_certificate?: bool
		iam_certificate_id?:             string
		minimum_protocol_version?:       string
		ssl_support_method?:             string
	}, ...]
}
#AwsCloudfrontOriginAccessIdentityResource: comment?: string
#AwsCloudfrontPublicKeyResource: {
	encoded_key: string
	comment?:    string
}
#AwsCloudhsmV2ClusterResource: {
	hsm_type: string
	subnet_ids: [string, ...]
	source_backup_identifier?: string
	tags?: [_]: string
	timeouts?: {
		create?: string
		delete?: string
		update?: string
	}
}
#AwsCloudhsmV2HsmResource: {
	cluster_id: string
	timeouts?: {
		create?: string
		delete?: string
		update?: string
	}
}
#AwsCloudtrailResource: {
	name:                           string
	s3_bucket_name:                 string
	cloud_watch_logs_group_arn?:    string
	cloud_watch_logs_role_arn?:     string
	enable_log_file_validation?:    bool
	enable_logging?:                bool
	include_global_service_events?: bool
	is_multi_region_trail?:         bool
	is_organization_trail?:         bool
	kms_key_id?:                    string
	s3_key_prefix?:                 string
	sns_topic_name?:                string
	tags?: [_]: string
	event_selector?: [{
		include_management_events?: bool
		read_write_type?:           string
		data_resource?: [{
			type: string
			values: [string, ...]
		}, ...]
	}, ...]
}
#AwsCloudwatchDashboardResource: {
	dashboard_body: string
	dashboard_name: string
}
#AwsCloudwatchEventPermissionResource: {
	principal:    string
	statement_id: string
	action?:      string
	condition?: [{
		key:   string
		type:  string
		value: string
	}, ...]
}
#AwsCloudwatchEventRuleResource: {
	description?:         string
	event_pattern?:       string
	is_enabled?:          bool
	name_prefix?:         string
	role_arn?:            string
	schedule_expression?: string
	tags?: [_]: string
}
#AwsCloudwatchEventTargetResource: {
	arn:         string
	rule:        string
	input?:      string
	input_path?: string
	role_arn?:   string
	batch_target?: [{
		job_definition: string
		job_name:       string
		array_size?:    number
		job_attempts?:  number
	}, ...]
	ecs_target?: [{
		task_definition_arn: string
		group?:              string
		launch_type?:        string
		platform_version?:   string
		task_count?:         number
		network_configuration?: [{
			subnets: [string, ...]
			assign_public_ip?: bool
			security_groups?: [string, ...]
		}, ...]
	}, ...]
	input_transformer?: [{
		input_template: string
		input_paths?: [_]: string
	}, ...]
	kinesis_target?: [{
		partition_key_path?: string
	}, ...]
	run_command_targets?: [{
		key: string
		values: [string, ...]
	}, ...]
	sqs_target?: [{
		message_group_id?: string
	}, ...]
}
#AwsCloudwatchLogDestinationResource: {
	name:       string
	role_arn:   string
	target_arn: string
}
#AwsCloudwatchLogDestinationPolicyResource: {
	access_policy:    string
	destination_name: string
}
#AwsCloudwatchLogGroupResource: {
	kms_key_id?:        string
	name_prefix?:       string
	retention_in_days?: number
	tags?: [_]: string
}
#AwsCloudwatchLogMetricFilterResource: {
	log_group_name: string
	name:           string
	pattern:        string
	metric_transformation?: [{
		name:           string
		namespace:      string
		value:          string
		default_value?: string
	}, ...]
}
#AwsCloudwatchLogResourcePolicyResource: {
	policy_document: string
	policy_name:     string
}
#AwsCloudwatchLogStreamResource: {
	log_group_name: string
	name:           string
}
#AwsCloudwatchLogSubscriptionFilterResource: {
	destination_arn: string
	filter_pattern:  string
	log_group_name:  string
	name:            string
	distribution?:   string
}
#AwsCloudwatchMetricAlarmResource: {
	alarm_name:          string
	comparison_operator: string
	evaluation_periods:  number
	actions_enabled?:    bool
	alarm_actions?: [string, ...]
	alarm_description?:   string
	datapoints_to_alarm?: number
	dimensions?: [_]: string
	extended_statistic?: string
	insufficient_data_actions?: [string, ...]
	metric_name?: string
	namespace?:   string
	ok_actions?: [string, ...]
	period?:    number
	statistic?: string
	tags?: [_]: string
	threshold?:           number
	threshold_metric_id?: string
	treat_missing_data?:  string
	unit?:                string
	metric_query?: [{
		id:           string
		expression?:  string
		label?:       string
		return_data?: bool
		metric?: [{
			metric_name: string
			period:      number
			stat:        string
			dimensions?: [_]: string
			namespace?: string
			unit?:      string
		}, ...]
	}, ...]
}
#AwsCodebuildProjectResource: {
	name:            string
	service_role:    string
	badge_enabled?:  bool
	build_timeout?:  number
	queued_timeout?: number
	source_version?: string
	tags?: [_]: string
	artifacts?: [{
		type:                    string
		artifact_identifier?:    string
		encryption_disabled?:    bool
		location?:               string
		name?:                   string
		namespace_type?:         string
		override_artifact_name?: bool
		packaging?:              string
		path?:                   string
	}, ...]
	cache?: [{
		location?: string
		modes?: [string, ...]
		type?: string
	}, ...]
	environment?: [{
		compute_type:                 string
		image:                        string
		type:                         string
		certificate?:                 string
		image_pull_credentials_type?: string
		privileged_mode?:             bool
		environment_variable?: [{
			name:  string
			value: string
			type?: string
		}, ...]
		registry_credential?: [{
			credential:          string
			credential_provider: string
		}, ...]
	}, ...]
	logs_config?: [{
		cloudwatch_logs?: [{
			group_name?:  string
			status?:      string
			stream_name?: string
		}, ...]
		s3_logs?: [{
			encryption_disabled?: bool
			location?:            string
			status?:              string
		}, ...]
	}, ...]
	secondary_artifacts?: [{
		artifact_identifier:     string
		type:                    string
		encryption_disabled?:    bool
		location?:               string
		name?:                   string
		namespace_type?:         string
		override_artifact_name?: bool
		packaging?:              string
		path?:                   string
	}, ...]
	secondary_sources?: [{
		source_identifier:    string
		type:                 string
		buildspec?:           string
		git_clone_depth?:     number
		insecure_ssl?:        bool
		location?:            string
		report_build_status?: bool
		auth?: [{
			type:      string
			resource?: string
		}, ...]
		git_submodules_config?: [{
			fetch_submodules: bool
		}, ...]
	}, ...]
	source?: [{
		type:                 string
		buildspec?:           string
		git_clone_depth?:     number
		insecure_ssl?:        bool
		location?:            string
		report_build_status?: bool
		auth?: [{
			type:      string
			resource?: string
		}, ...]
		git_submodules_config?: [{
			fetch_submodules: bool
		}, ...]
	}, ...]
	vpc_config?: [{
		security_group_ids: [string, ...]
		subnets: [string, ...]
		vpc_id: string
	}, ...]
}
#AwsCodebuildSourceCredentialResource: {
	auth_type:   string
	server_type: string
	token:       string
	user_name?:  string
}
#AwsCodebuildWebhookResource: {
	project_name:   string
	branch_filter?: string
	filter_group?: [{
		filter?: [{
			pattern:                  string
			type:                     string
			exclude_matched_pattern?: bool
		}, ...]
	}, ...]
}
#AwsCodecommitRepositoryResource: {
	repository_name: string
	default_branch?: string
	description?:    string
	tags?: [_]: string
}
#AwsCodecommitTriggerResource: {
	repository_name: string
	trigger?: [{
		destination_arn: string
		events: [string, ...]
		name: string
		branches?: [string, ...]
		custom_data?: string
	}, ...]
}
#AwsCodedeployAppResource: {
	name:              string
	compute_platform?: string
}
#AwsCodedeployDeploymentConfigResource: {
	deployment_config_name: string
	compute_platform?:      string
	minimum_healthy_hosts?: [{
		type?:  string
		value?: number
	}, ...]
	traffic_routing_config?: [{
		type?: string
		time_based_canary?: [{
			interval?:   number
			percentage?: number
		}, ...]
		time_based_linear?: [{
			interval?:   number
			percentage?: number
		}, ...]
	}, ...]
}
#AwsCodedeployDeploymentGroupResource: {
	app_name:              string
	deployment_group_name: string
	service_role_arn:      string
	autoscaling_groups?: [string, ...]
	deployment_config_name?: string
	alarm_configuration?: [{
		alarms?: [string, ...]
		enabled?:                   bool
		ignore_poll_alarm_failure?: bool
	}, ...]
	auto_rollback_configuration?: [{
		enabled?: bool
		events?: [string, ...]
	}, ...]
	blue_green_deployment_config?: [{
		deployment_ready_option?: [{
			action_on_timeout?:    string
			wait_time_in_minutes?: number
		}, ...]
		green_fleet_provisioning_option?: [{
			action?: string
		}, ...]
		terminate_blue_instances_on_deployment_success?: [{
			action?:                           string
			termination_wait_time_in_minutes?: number
		}, ...]
	}, ...]
	deployment_style?: [{
		deployment_option?: string
		deployment_type?:   string
	}, ...]
	ec2_tag_filter?: [{
		key?:   string
		type?:  string
		value?: string
	}, ...]
	ec2_tag_set?: [{
		ec2_tag_filter?: [{
			key?:   string
			type?:  string
			value?: string
		}, ...]
	}, ...]
	ecs_service?: [{
		cluster_name: string
		service_name: string
	}, ...]
	load_balancer_info?: [{
		elb_info?: [{
			name?: string
		}, ...]
		target_group_info?: [{
			name?: string
		}, ...]
		target_group_pair_info?: [{
			prod_traffic_route?: [{
				listener_arns: [string, ...]
			}, ...]
			target_group?: [{
				name: string
			}, ...]
			test_traffic_route?: [{
				listener_arns: [string, ...]
			}, ...]
		}, ...]
	}, ...]
	on_premises_instance_tag_filter?: [{
		key?:   string
		type?:  string
		value?: string
	}, ...]
	trigger_configuration?: [{
		trigger_events: [string, ...]
		trigger_name:       string
		trigger_target_arn: string
	}, ...]
}
#AwsCodepipelineResource: {
	name:     string
	role_arn: string
	tags?: [_]: string
	artifact_store?: [{
		location: string
		type:     string
		encryption_key?: [{
			id:   string
			type: string
		}, ...]
	}, ...]
	stage?: [{
		name: string
		action?: [{
			category: string
			name:     string
			owner:    string
			provider: string
			version:  string
			configuration?: [_]: string
			input_artifacts?: [string, ...]
			namespace?: string
			output_artifacts?: [string, ...]
			role_arn?: string
		}, ...]
	}, ...]
}
#AwsCodepipelineWebhookResource: {
	authentication:  string
	name:            string
	target_action:   string
	target_pipeline: string
	tags?: [_]: string
	authentication_configuration?: [{
		allowed_ip_range?: string
		secret_token?:     string
	}, ...]
	filter?: [{
		json_path:    string
		match_equals: string
	}, ...]
}
#AwsCodestarnotificationsNotificationRuleResource: {
	detail_type: string
	event_type_ids: [string, ...]
	name:     string
	resource: string
	status?:  string
	tags?: [_]: string
	target?: [{
		address: string
		type?:   string
	}, ...]
}
#AwsCognitoIdentityPoolResource: {
	identity_pool_name:                string
	allow_unauthenticated_identities?: bool
	developer_provider_name?:          string
	openid_connect_provider_arns?: [string, ...]
	saml_provider_arns?: [string, ...]
	supported_login_providers?: [_]: string
	tags?: [_]:                      string
	cognito_identity_providers?: [{
		client_id?:               string
		provider_name?:           string
		server_side_token_check?: bool
	}, ...]
}
#AwsCognitoIdentityPoolRolesAttachmentResource: {
	identity_pool_id: string
	roles: [_]: string
	role_mapping?: [{
		identity_provider:          string
		type:                       string
		ambiguous_role_resolution?: string
		mapping_rule?: [{
			claim:      string
			match_type: string
			role_arn:   string
			value:      string
		}, ...]
	}, ...]
}
#AwsCognitoIdentityProviderResource: {
	provider_details: [_]: string
	provider_name: string
	provider_type: string
	user_pool_id:  string
	idp_identifiers?: [string, ...]
}
#AwsCognitoResourceServerResource: {
	identifier:   string
	name:         string
	user_pool_id: string
	scope?: [{
		scope_description: string
		scope_name:        string
	}, ...]
}
#AwsCognitoUserGroupResource: {
	name:         string
	user_pool_id: string
	description?: string
	precedence?:  number
	role_arn?:    string
}
#AwsCognitoUserPoolResource: {
	name: string
	alias_attributes?: [string, ...]
	auto_verified_attributes?: [string, ...]
	mfa_configuration?:          string
	sms_authentication_message?: string
	tags?: [_]: string
	username_attributes?: [string, ...]
	admin_create_user_config?: [{
		allow_admin_create_user_only?: bool
		invite_message_template?: [{
			email_message?: string
			email_subject?: string
			sms_message?:   string
		}, ...]
	}, ...]
	device_configuration?: [{
		challenge_required_on_new_device?:      bool
		device_only_remembered_on_user_prompt?: bool
	}, ...]
	email_configuration?: [{
		email_sending_account?:  string
		from_email_address?:     string
		reply_to_email_address?: string
		source_arn?:             string
	}, ...]
	lambda_config?: [{
		create_auth_challenge?:          string
		custom_message?:                 string
		define_auth_challenge?:          string
		post_authentication?:            string
		post_confirmation?:              string
		pre_authentication?:             string
		pre_sign_up?:                    string
		pre_token_generation?:           string
		user_migration?:                 string
		verify_auth_challenge_response?: string
	}, ...]
	password_policy?: [{
		minimum_length?:                   number
		require_lowercase?:                bool
		require_numbers?:                  bool
		require_symbols?:                  bool
		require_uppercase?:                bool
		temporary_password_validity_days?: number
	}, ...]
	schema?: [{
		attribute_data_type:       string
		name:                      string
		developer_only_attribute?: bool
		mutable?:                  bool
		required?:                 bool
		number_attribute_constraints?: [{
			max_value?: string
			min_value?: string
		}, ...]
		string_attribute_constraints?: [{
			max_length?: string
			min_length?: string
		}, ...]
	}, ...]
	sms_configuration?: [{
		external_id:    string
		sns_caller_arn: string
	}, ...]
	software_token_mfa_configuration?: [{
		enabled: bool
	}, ...]
	user_pool_add_ons?: [{
		advanced_security_mode: string
	}, ...]
	username_configuration?: [{
		case_sensitive: bool
	}, ...]
	verification_message_template?: [{
		default_email_option?: string
	}, ...]
}
#AwsCognitoUserPoolClientResource: {
	name:         string
	user_pool_id: string
	allowed_oauth_flows?: [string, ...]
	allowed_oauth_flows_user_pool_client?: bool
	allowed_oauth_scopes?: [string, ...]
	callback_urls?: [string, ...]
	default_redirect_uri?: string
	explicit_auth_flows?: [string, ...]
	generate_secret?: bool
	logout_urls?: [string, ...]
	read_attributes?: [string, ...]
	refresh_token_validity?: number
	supported_identity_providers?: [string, ...]
	write_attributes?: [string, ...]
	analytics_configuration?: [{
		application_id:    string
		external_id:       string
		role_arn:          string
		user_data_shared?: bool
	}, ...]
}
#AwsCognitoUserPoolDomainResource: {
	domain:           string
	user_pool_id:     string
	certificate_arn?: string
}
#AwsConfigAggregateAuthorizationResource: {
	account_id: string
	region:     string
	tags?: [_]: string
}
#AwsConfigConfigRuleResource: {
	name:                         string
	description?:                 string
	input_parameters?:            string
	maximum_execution_frequency?: string
	tags?: [_]: string
	scope?: [{
		compliance_resource_id?: string
		compliance_resource_types?: [string, ...]
		tag_key?:   string
		tag_value?: string
	}, ...]
	source?: [{
		owner:             string
		source_identifier: string
		source_detail?: [{
			event_source?:                string
			maximum_execution_frequency?: string
			message_type?:                string
		}, ...]
	}, ...]
}
#AwsConfigConfigurationAggregatorResource: {
	name: string
	tags?: [_]: string
	account_aggregation_source?: [{
		account_ids: [string, ...]
		all_regions?: bool
		regions?: [string, ...]
	}, ...]
	organization_aggregation_source?: [{
		role_arn:     string
		all_regions?: bool
		regions?: [string, ...]
	}, ...]
}
#AwsConfigConfigurationRecorderResource: {
	role_arn: string
	name?:    string
	recording_group?: [{
		all_supported?:                 bool
		include_global_resource_types?: bool
		resource_types?: [string, ...]
	}, ...]
}
#AwsConfigConfigurationRecorderStatusResource: {
	is_enabled: bool
	name:       string
}
#AwsConfigDeliveryChannelResource: {
	s3_bucket_name: string
	name?:          string
	s3_key_prefix?: string
	sns_topic_arn?: string
	snapshot_delivery_properties?: [{
		delivery_frequency?: string
	}, ...]
}
#AwsConfigOrganizationCustomRuleResource: {
	lambda_function_arn: string
	name:                string
	trigger_types: [string, ...]
	description?: string
	excluded_accounts?: [string, ...]
	input_parameters?:            string
	maximum_execution_frequency?: string
	resource_id_scope?:           string
	resource_types_scope?: [string, ...]
	tag_key_scope?:   string
	tag_value_scope?: string
	timeouts?: {
		create?: string
		delete?: string
		update?: string
	}
}
#AwsConfigOrganizationManagedRuleResource: {
	name:            string
	rule_identifier: string
	description?:    string
	excluded_accounts?: [string, ...]
	input_parameters?:            string
	maximum_execution_frequency?: string
	resource_id_scope?:           string
	resource_types_scope?: [string, ...]
	tag_key_scope?:   string
	tag_value_scope?: string
	timeouts?: {
		create?: string
		delete?: string
		update?: string
	}
}
#AwsCurReportDefinitionResource: {
	additional_schema_elements: [string, ...]
	compression: string
	format:      string
	report_name: string
	s3_bucket:   string
	s3_region:   string
	time_unit:   string
	additional_artifacts?: [string, ...]
	s3_prefix?: string
}
#AwsCustomerGatewayResource: {
	bgp_asn:    number
	ip_address: string
	type:       string
	tags?: [_]: string
}
#AwsDatapipelinePipelineResource: {
	name:         string
	description?: string
	tags?: [_]: string
}
#AwsDatasyncAgentResource: {
	name?: string
	tags?: [_]:         string
	timeouts?: create?: string
}
#AwsDatasyncLocationEfsResource: {
	efs_file_system_arn: string
	subdirectory?:       string
	tags?: [_]: string
	ec2_config?: [{
		security_group_arns: [string, ...]
		subnet_arn: string
	}, ...]
}
#AwsDatasyncLocationNfsResource: {
	server_hostname: string
	subdirectory:    string
	tags?: [_]: string
	on_prem_config?: [{
		agent_arns: [string, ...]
	}, ...]
}
#AwsDatasyncLocationS3Resource: {
	s3_bucket_arn: string
	subdirectory:  string
	tags?: [_]: string
	s3_config?: [{
		bucket_access_role_arn: string
	}, ...]
}
#AwsDatasyncLocationSmbResource: {
	agent_arns: [string, ...]
	password:        string
	server_hostname: string
	subdirectory:    string
	user:            string
	tags?: [_]: string
	mount_options?: [{
		version?: string
	}, ...]
}
#AwsDatasyncTaskResource: {
	destination_location_arn:  string
	source_location_arn:       string
	cloudwatch_log_group_arn?: string
	name?:                     string
	tags?: [_]: string
	options?: [{
		atime?:                  string
		bytes_per_second?:       number
		gid?:                    string
		mtime?:                  string
		posix_permissions?:      string
		preserve_deleted_files?: string
		preserve_devices?:       string
		uid?:                    string
		verify_mode?:            string
	}, ...]
	timeouts?: create?: string
}
#AwsDaxClusterResource: {
	cluster_name:       string
	iam_role_arn:       string
	node_type:          string
	replication_factor: number
	availability_zones?: [string, ...]
	description?:            string
	notification_topic_arn?: string
	tags?: [_]: string
	server_side_encryption?: [{
		enabled?: bool
	}, ...]
	timeouts?: {
		create?: string
		delete?: string
		update?: string
	}
}
#AwsDaxParameterGroupResource: {
	name:         string
	description?: string
	parameters?: [{
		name:  string
		value: string
	}, ...]
}
#AwsDaxSubnetGroupResource: {
	name: string
	subnet_ids: [string, ...]
	description?: string
}
#AwsDbClusterSnapshotResource: {
	db_cluster_identifier:          string
	db_cluster_snapshot_identifier: string
	tags?: [_]:         string
	timeouts?: create?: string
}
#AwsDbEventSubscriptionResource: {
	sns_topic: string
	enabled?:  bool
	event_categories?: [string, ...]
	name_prefix?: string
	source_ids?: [string, ...]
	source_type?: string
	tags?: [_]: string
	timeouts?: {
		create?: string
		delete?: string
		update?: string
	}
}
#AwsDbInstanceResource: {
	instance_class:               string
	allow_major_version_upgrade?: bool
	auto_minor_version_upgrade?:  bool
	copy_tags_to_snapshot?:       bool
	delete_automated_backups?:    bool
	deletion_protection?:         bool
	domain?:                      string
	domain_iam_role_name?:        string
	enabled_cloudwatch_logs_exports?: [string, ...]
	final_snapshot_identifier?:           string
	iam_database_authentication_enabled?: bool
	iops?:                                number
	max_allocated_storage?:               number
	monitoring_interval?:                 number
	password?:                            string
	performance_insights_enabled?:        bool
	publicly_accessible?:                 bool
	replicate_source_db?:                 string
	security_group_names?: [string, ...]
	skip_final_snapshot?: bool
	snapshot_identifier?: string
	storage_encrypted?:   bool
	tags?: [_]: string
	s3_import?: [{
		bucket_name:           string
		ingestion_role:        string
		source_engine:         string
		source_engine_version: string
		bucket_prefix?:        string
	}, ...]
	timeouts?: {
		create?: string
		delete?: string
		update?: string
	}
}
#AwsDbInstanceRoleAssociationResource: {
	db_instance_identifier: string
	feature_name:           string
	role_arn:               string
}
#AwsDbOptionGroupResource: {
	engine_name:               string
	major_engine_version:      string
	option_group_description?: string
	tags?: [_]: string
	option?: [{
		option_name: string
		db_security_group_memberships?: [string, ...]
		port?:    number
		version?: string
		vpc_security_group_memberships?: [string, ...]
		option_settings?: [{
			name:  string
			value: string
		}, ...]
	}, ...]
	timeouts?: delete?: string
}
#AwsDbParameterGroupResource: {
	family:       string
	description?: string
	tags?: [_]: string
	parameter?: [{
		name:          string
		value:         string
		apply_method?: string
	}, ...]
}
#AwsDbSecurityGroupResource: {
	name:         string
	description?: string
	tags?: [_]: string
	ingress?: [{
		cidr?: string
	}, ...]
}
#AwsDbSnapshotResource: {
	db_instance_identifier: string
	db_snapshot_identifier: string
	tags?: [_]:       string
	timeouts?: read?: string
}
#AwsDbSubnetGroupResource: {
	subnet_ids: [string, ...]
	description?: string
	tags?: [_]: string
}
#AwsDefaultNetworkAclResource: {
	default_network_acl_id: string
	subnet_ids?: [string, ...]
	tags?: [_]: string
	egress?: [{
		action:           string
		from_port:        number
		protocol:         string
		rule_no:          number
		to_port:          number
		cidr_block?:      string
		icmp_code?:       number
		icmp_type?:       number
		ipv6_cidr_block?: string
	}, ...]
	ingress?: [{
		action:           string
		from_port:        number
		protocol:         string
		rule_no:          number
		to_port:          number
		cidr_block?:      string
		icmp_code?:       number
		icmp_type?:       number
		ipv6_cidr_block?: string
	}, ...]
}
#AwsDefaultRouteTableResource: {
	default_route_table_id: string
	propagating_vgws?: [string, ...]
	tags?: [_]: string
}
#AwsDefaultSecurityGroupResource: {
	egress?: [{
		cidr_blocks: [string, ...]
		description: string
		from_port:   number
		ipv6_cidr_blocks: [string, ...]
		prefix_list_ids: [string, ...]
		protocol: string
		security_groups: [string, ...]
		self:    bool
		to_port: number
	}, ...]
	ingress?: [{
		cidr_blocks: [string, ...]
		description: string
		from_port:   number
		ipv6_cidr_blocks: [string, ...]
		prefix_list_ids: [string, ...]
		protocol: string
		security_groups: [string, ...]
		self:    bool
		to_port: number
	}, ...]
	revoke_rules_on_delete?: bool
	tags?: [_]: string
	timeouts?: {
		create?: string
		delete?: string
	}
}
#AwsDefaultSubnetResource: {
	availability_zone: string
	outpost_arn?:      string
	tags?: [_]: string
	timeouts?: {
		create?: string
		delete?: string
	}
}
#AwsDefaultVpcResource: {
	enable_dns_support?: bool
	tags?: [_]: string
}
#AwsDefaultVpcDhcpOptionsResource: {
	netbios_name_servers?: [string, ...]
	netbios_node_type?: string
	tags?: [_]: string
}
#AwsDevicefarmProjectResource: name: string
#AwsDirectoryServiceConditionalForwarderResource: {
	directory_id: string
	dns_ips: [string, ...]
	remote_domain_name: string
}
#AwsDirectoryServiceDirectoryResource: {
	name:         string
	password:     string
	description?: string
	enable_sso?:  bool
	tags?: [_]: string
	type?: string
	connect_settings?: [{
		customer_dns_ips: [string, ...]
		customer_username: string
		subnet_ids: [string, ...]
		vpc_id: string
	}, ...]
	vpc_settings?: [{
		subnet_ids: [string, ...]
		vpc_id: string
	}, ...]
}
#AwsDirectoryServiceLogSubscriptionResource: {
	directory_id:   string
	log_group_name: string
}
#AwsDlmLifecyclePolicyResource: {
	description:        string
	execution_role_arn: string
	state?:             string
	tags?: [_]: string
	policy_details?: [{
		resource_types: [string, ...]
		target_tags: [_]: string
		schedule?: [{
			name: string
			tags_to_add?: [_]: string
			create_rule?: [{
				interval:       number
				interval_unit?: string
			}, ...]
			retain_rule?: [{
				count: number
			}, ...]
		}, ...]
	}, ...]
}
#AwsDmsCertificateResource: {
	certificate_id:      string
	certificate_pem?:    string
	certificate_wallet?: string
}
#AwsDmsEndpointResource: {
	endpoint_id:          string
	endpoint_type:        string
	engine_name:          string
	database_name?:       string
	password?:            string
	port?:                number
	server_name?:         string
	service_access_role?: string
	tags?: [_]: string
	username?: string
	elasticsearch_settings?: [{
		endpoint_uri:                string
		service_access_role_arn:     string
		error_retry_duration?:       number
		full_load_error_percentage?: number
	}, ...]
	kafka_settings?: [{
		broker: string
		topic?: string
	}, ...]
	kinesis_settings?: [{
		message_format?:          string
		service_access_role_arn?: string
		stream_arn?:              string
	}, ...]
	mongodb_settings?: [{
		auth_mechanism?:      string
		auth_source?:         string
		auth_type?:           string
		docs_to_investigate?: string
		extract_doc_id?:      string
		nesting_level?:       string
	}, ...]
	s3_settings?: [{
		bucket_folder?:             string
		bucket_name?:               string
		compression_type?:          string
		csv_delimiter?:             string
		csv_row_delimiter?:         string
		external_table_definition?: string
		service_access_role_arn?:   string
	}, ...]
}
#AwsDmsEventSubscriptionResource: {
	event_categories: [string, ...]
	name:          string
	sns_topic_arn: string
	enabled?:      bool
	source_ids?: [string, ...]
	source_type?: string
	tags?: [_]: string
	timeouts?: {
		create?: string
		delete?: string
		update?: string
	}
}
#AwsDmsReplicationInstanceResource: {
	replication_instance_class: string
	replication_instance_id:    string
	apply_immediately?:         bool
	tags?: [_]: string
	timeouts?: {
		create?: string
		delete?: string
		update?: string
	}
}
#AwsDmsReplicationSubnetGroupResource: {
	replication_subnet_group_description: string
	replication_subnet_group_id:          string
	subnet_ids: [string, ...]
	tags?: [_]: string
}
#AwsDmsReplicationTaskResource: {
	migration_type:             string
	replication_instance_arn:   string
	replication_task_id:        string
	source_endpoint_arn:        string
	table_mappings:             string
	target_endpoint_arn:        string
	cdc_start_time?:            string
	replication_task_settings?: string
	tags?: [_]: string
}
#AwsDocdbClusterResource: {
	backup_retention_period?: number
	deletion_protection?:     bool
	enabled_cloudwatch_logs_exports?: [string, ...]
	engine?:                    string
	final_snapshot_identifier?: string
	master_password?:           string
	port?:                      number
	skip_final_snapshot?:       bool
	snapshot_identifier?:       string
	storage_encrypted?:         bool
	tags?: [_]: string
	timeouts?: {
		create?: string
		delete?: string
		update?: string
	}
}
#AwsDocdbClusterInstanceResource: {
	cluster_identifier:          string
	instance_class:              string
	auto_minor_version_upgrade?: bool
	engine?:                     string
	promotion_tier?:             number
	tags?: [_]: string
	timeouts?: {
		create?: string
		delete?: string
		update?: string
	}
}
#AwsDocdbClusterParameterGroupResource: {
	family:       string
	description?: string
	tags?: [_]: string
	parameter?: [{
		name:          string
		value:         string
		apply_method?: string
	}, ...]
}
#AwsDocdbClusterSnapshotResource: {
	db_cluster_identifier:          string
	db_cluster_snapshot_identifier: string
	timeouts?: create?: string
}
#AwsDocdbSubnetGroupResource: {
	subnet_ids: [string, ...]
	description?: string
	tags?: [_]: string
}
#AwsDxBgpPeerResource: {
	address_family:       string
	bgp_asn:              number
	virtual_interface_id: string
	timeouts?: {
		create?: string
		delete?: string
	}
}
#AwsDxConnectionResource: {
	bandwidth: string
	location:  string
	name:      string
	tags?: [_]: string
}
#AwsDxConnectionAssociationResource: {
	connection_id: string
	lag_id:        string
}
#AwsDxGatewayResource: {
	amazon_side_asn: string
	name:            string
	timeouts?: {
		create?: string
		delete?: string
	}
}
#AwsDxGatewayAssociationResource: {
	dx_gateway_id:   string
	proposal_id?:    string
	vpn_gateway_id?: string
	timeouts?: {
		create?: string
		delete?: string
		update?: string
	}
}
#AwsDxGatewayAssociationProposalResource: {
	dx_gateway_id:               string
	dx_gateway_owner_account_id: string
	associated_gateway_id?:      string
	vpn_gateway_id?:             string
}
#AwsDxHostedPrivateVirtualInterfaceResource: {
	address_family:   string
	bgp_asn:          number
	connection_id:    string
	name:             string
	owner_account_id: string
	vlan:             number
	mtu?:             number
	timeouts?: {
		create?: string
		delete?: string
		update?: string
	}
}
#AwsDxHostedPrivateVirtualInterfaceAccepterResource: {
	virtual_interface_id: string
	dx_gateway_id?:       string
	tags?: [_]: string
	vpn_gateway_id?: string
	timeouts?: {
		create?: string
		delete?: string
	}
}
#AwsDxHostedPublicVirtualInterfaceResource: {
	address_family:   string
	bgp_asn:          number
	connection_id:    string
	name:             string
	owner_account_id: string
	route_filter_prefixes: [string, ...]
	vlan: number
	timeouts?: {
		create?: string
		delete?: string
	}
}
#AwsDxHostedPublicVirtualInterfaceAccepterResource: {
	virtual_interface_id: string
	tags?: [_]: string
	timeouts?: {
		create?: string
		delete?: string
	}
}
#AwsDxHostedTransitVirtualInterfaceResource: {
	address_family:   string
	bgp_asn:          number
	connection_id:    string
	name:             string
	owner_account_id: string
	vlan:             number
	mtu?:             number
	timeouts?: {
		create?: string
		delete?: string
		update?: string
	}
}
#AwsDxHostedTransitVirtualInterfaceAccepterResource: {
	dx_gateway_id:        string
	virtual_interface_id: string
	tags?: [_]: string
	timeouts?: {
		create?: string
		delete?: string
	}
}
#AwsDxLagResource: {
	connections_bandwidth: string
	location:              string
	name:                  string
	force_destroy?:        bool
	tags?: [_]: string
}
#AwsDxPrivateVirtualInterfaceResource: {
	address_family: string
	bgp_asn:        number
	connection_id:  string
	name:           string
	vlan:           number
	dx_gateway_id?: string
	mtu?:           number
	tags?: [_]: string
	vpn_gateway_id?: string
	timeouts?: {
		create?: string
		delete?: string
		update?: string
	}
}
#AwsDxPublicVirtualInterfaceResource: {
	address_family: string
	bgp_asn:        number
	connection_id:  string
	name:           string
	route_filter_prefixes: [string, ...]
	vlan: number
	tags?: [_]: string
	timeouts?: {
		create?: string
		delete?: string
	}
}
#AwsDxTransitVirtualInterfaceResource: {
	address_family: string
	bgp_asn:        number
	connection_id:  string
	dx_gateway_id:  string
	name:           string
	vlan:           number
	mtu?:           number
	tags?: [_]: string
	timeouts?: {
		create?: string
		delete?: string
		update?: string
	}
}
#AwsDynamodbGlobalTableResource: {
	name: string
	replica?: [{
		region_name: string
	}, ...]
	timeouts?: {
		create?: string
		delete?: string
		update?: string
	}
}
#AwsDynamodbTableResource: {
	hash_key:        string
	name:            string
	billing_mode?:   string
	range_key?:      string
	read_capacity?:  number
	stream_enabled?: bool
	tags?: [_]: string
	write_capacity?: number
	attribute?: [{
		name: string
		type: string
	}, ...]
	global_secondary_index?: [{
		hash_key:        string
		name:            string
		projection_type: string
		non_key_attributes?: [string, ...]
		range_key?:      string
		read_capacity?:  number
		write_capacity?: number
	}, ...]
	local_secondary_index?: [{
		name:            string
		projection_type: string
		range_key:       string
		non_key_attributes?: [string, ...]
	}, ...]
	point_in_time_recovery?: [{
		enabled: bool
	}, ...]
	replica?: [{
		region_name: string
	}, ...]
	server_side_encryption?: [{
		enabled: bool
	}, ...]
	timeouts?: {
		create?: string
		delete?: string
		update?: string
	}
	ttl?: [{
		attribute_name: string
		enabled?:       bool
	}, ...]
}
#AwsDynamodbTableItemResource: {
	hash_key:   string
	item:       string
	table_name: string
	range_key?: string
}
#AwsEbsDefaultKmsKeyResource: key_arn:        string
#AwsEbsEncryptionByDefaultResource: enabled?: bool
#AwsEbsSnapshotResource: {
	volume_id:    string
	description?: string
	tags?: [_]: string
	timeouts?: {
		create?: string
		delete?: string
	}
}
#AwsEbsSnapshotCopyResource: {
	source_region:      string
	source_snapshot_id: string
	description?:       string
	encrypted?:         bool
	kms_key_id?:        string
	tags?: [_]: string
}
#AwsEbsVolumeResource: {
	availability_zone:     string
	multi_attach_enabled?: bool
	outpost_arn?:          string
	tags?: [_]: string
}
#AwsEc2AvailabilityZoneGroupResource: {
	group_name:    string
	opt_in_status: string
}
#AwsEc2CapacityReservationResource: {
	availability_zone:        string
	instance_count:           number
	instance_platform:        string
	instance_type:            string
	ebs_optimized?:           bool
	end_date?:                string
	end_date_type?:           string
	ephemeral_storage?:       bool
	instance_match_criteria?: string
	tags?: [_]: string
	tenancy?: string
}
#AwsEc2ClientVpnEndpointResource: {
	client_cidr_block:      string
	server_certificate_arn: string
	description?:           string
	dns_servers?: [string, ...]
	split_tunnel?: bool
	tags?: [_]: string
	transport_protocol?: string
	authentication_options?: [{
		type:                        string
		active_directory_id?:        string
		root_certificate_chain_arn?: string
	}, ...]
	connection_log_options?: [{
		enabled:                bool
		cloudwatch_log_group?:  string
		cloudwatch_log_stream?: string
	}, ...]
}
#AwsEc2ClientVpnNetworkAssociationResource: {
	client_vpn_endpoint_id: string
	subnet_id:              string
}
#AwsEc2FleetResource: {
	excess_capacity_termination_policy?: string
	replace_unhealthy_instances?:        bool
	tags?: [_]: string
	terminate_instances?:                 bool
	terminate_instances_with_expiration?: bool
	type?:                                string
	launch_template_config?: [{
		launch_template_specification?: [{
			version:               string
			launch_template_id?:   string
			launch_template_name?: string
		}, ...]
		override?: [{
			availability_zone?: string
			instance_type?:     string
			max_price?:         string
			priority?:          number
			subnet_id?:         string
			weighted_capacity?: number
		}, ...]
	}, ...]
	on_demand_options?: [{
		allocation_strategy?: string
	}, ...]
	spot_options?: [{
		allocation_strategy?:            string
		instance_interruption_behavior?: string
		instance_pools_to_use_count?:    number
	}, ...]
	target_capacity_specification?: [{
		default_target_capacity_type: string
		total_target_capacity:        number
		on_demand_target_capacity?:   number
		spot_target_capacity?:        number
	}, ...]
	timeouts?: {
		create?: string
		delete?: string
		update?: string
	}
}
#AwsEc2TrafficMirrorFilterResource: {
	description?: string
	network_services?: [string, ...]
	tags?: [_]: string
}
#AwsEc2TrafficMirrorFilterRuleResource: {
	destination_cidr_block:   string
	rule_action:              string
	rule_number:              number
	source_cidr_block:        string
	traffic_direction:        string
	traffic_mirror_filter_id: string
	description?:             string
	protocol?:                number
	destination_port_range?: [{
		from_port?: number
		to_port?:   number
	}, ...]
	source_port_range?: [{
		from_port?: number
		to_port?:   number
	}, ...]
}
#AwsEc2TrafficMirrorSessionResource: {
	network_interface_id:     string
	session_number:           number
	traffic_mirror_filter_id: string
	traffic_mirror_target_id: string
	description?:             string
	packet_length?:           number
	tags?: [_]: string
}
#AwsEc2TrafficMirrorTargetResource: {
	description?:               string
	network_interface_id?:      string
	network_load_balancer_arn?: string
	tags?: [_]: string
}
#AwsEc2TransitGatewayResource: {
	amazon_side_asn?:                 number
	auto_accept_shared_attachments?:  string
	default_route_table_association?: string
	default_route_table_propagation?: string
	description?:                     string
	dns_support?:                     string
	tags?: [_]: string
	vpn_ecmp_support?: string
}
#AwsEc2TransitGatewayPeeringAttachmentResource: {
	peer_region:             string
	peer_transit_gateway_id: string
	transit_gateway_id:      string
	tags?: [_]: string
}
#AwsEc2TransitGatewayPeeringAttachmentAccepterResource: {
	transit_gateway_attachment_id: string
	tags?: [_]: string
}
#AwsEc2TransitGatewayRouteResource: {
	destination_cidr_block:         string
	transit_gateway_route_table_id: string
	blackhole?:                     bool
	transit_gateway_attachment_id?: string
}
#AwsEc2TransitGatewayRouteTableResource: {
	transit_gateway_id: string
	tags?: [_]: string
}
#AwsEc2TransitGatewayRouteTableAssociationResource: {
	transit_gateway_attachment_id:  string
	transit_gateway_route_table_id: string
}
#AwsEc2TransitGatewayRouteTablePropagationResource: {
	transit_gateway_attachment_id:  string
	transit_gateway_route_table_id: string
}
#AwsEc2TransitGatewayVpcAttachmentResource: {
	subnet_ids: [string, ...]
	transit_gateway_id: string
	vpc_id:             string
	dns_support?:       string
	ipv6_support?:      string
	tags?: [_]: string
	transit_gateway_default_route_table_association?: bool
	transit_gateway_default_route_table_propagation?: bool
}
#AwsEc2TransitGatewayVpcAttachmentAccepterResource: {
	transit_gateway_attachment_id: string
	tags?: [_]: string
	transit_gateway_default_route_table_association?: bool
	transit_gateway_default_route_table_propagation?: bool
}
#AwsEcrLifecyclePolicyResource: {
	policy:     string
	repository: string
}
#AwsEcrRepositoryResource: {
	name:                  string
	image_tag_mutability?: string
	tags?: [_]: string
	image_scanning_configuration?: [{
		scan_on_push: bool
	}, ...]
	timeouts?: delete?: string
}
#AwsEcrRepositoryPolicyResource: {
	policy:     string
	repository: string
}
#AwsEcsCapacityProviderResource: {
	name: string
	tags?: [_]: string
	auto_scaling_group_provider?: [{
		auto_scaling_group_arn: string
		managed_scaling?: [{}, ...]
	}, ...]
}
#AwsEcsClusterResource: {
	name: string
	capacity_providers?: [string, ...]
	tags?: [_]: string
	default_capacity_provider_strategy?: [{
		capacity_provider: string
		base?:             number
		weight?:           number
	}, ...]
	setting?: [{
		name:  string
		value: string
	}, ...]
}
#AwsEcsServiceResource: {
	name:                                string
	task_definition:                     string
	deployment_maximum_percent?:         number
	deployment_minimum_healthy_percent?: number
	desired_count?:                      number
	enable_ecs_managed_tags?:            bool
	force_new_deployment?:               bool
	health_check_grace_period_seconds?:  number
	propagate_tags?:                     string
	scheduling_strategy?:                string
	tags?: [_]: string
	capacity_provider_strategy?: [{
		capacity_provider: string
		base?:             number
		weight?:           number
	}, ...]
	deployment_controller?: [{
		type?: string
	}, ...]
	load_balancer?: [{
		container_name:    string
		container_port:    number
		elb_name?:         string
		target_group_arn?: string
	}, ...]
	network_configuration?: [{
		subnets: [string, ...]
		assign_public_ip?: bool
		security_groups?: [string, ...]
	}, ...]
	ordered_placement_strategy?: [{
		type:   string
		field?: string
	}, ...]
	placement_constraints?: [{
		type:        string
		expression?: string
	}, ...]
	placement_strategy?: [{
		type:   string
		field?: string
	}, ...]
	service_registries?: [{
		registry_arn:    string
		container_name?: string
		container_port?: number
		port?:           number
	}, ...]
}
#AwsEcsTaskDefinitionResource: {
	container_definitions: string
	family:                string
	cpu?:                  string
	execution_role_arn?:   string
	ipc_mode?:             string
	memory?:               string
	pid_mode?:             string
	requires_compatibilities?: [string, ...]
	tags?: [_]: string
	task_role_arn?: string
	inference_accelerator?: [{
		device_name: string
		device_type: string
	}, ...]
	placement_constraints?: [{
		type:        string
		expression?: string
	}, ...]
	proxy_configuration?: [{
		container_name: string
		properties?: [_]: string
		type?: string
	}, ...]
	volume?: [{
		name:       string
		host_path?: string
		docker_volume_configuration?: [{
			autoprovision?: bool
			driver?:        string
			driver_opts?: [_]: string
			labels?: [_]:      string
		}, ...]
		efs_volume_configuration?: [{
			file_system_id:  string
			root_directory?: string
		}, ...]
	}, ...]
}
#AwsEfsAccessPointResource: {
	file_system_id: string
	tags?: [_]: string
	posix_user?: [{
		gid: number
		uid: number
		secondary_gids?: [number, ...]
	}, ...]
	root_directory?: [{
		creation_info?: [{
			owner_gid:   number
			owner_uid:   number
			permissions: string
		}, ...]
	}, ...]
}
#AwsEfsFileSystemResource: {
	provisioned_throughput_in_mibps?: number
	tags?: [_]: string
	throughput_mode?: string
	lifecycle_policy?: [{
		transition_to_ia: string
	}, ...]
}
#AwsEfsFileSystemPolicyResource: {
	file_system_id: string
	policy:         string
}
#AwsEfsMountTargetResource: {
	file_system_id: string
	subnet_id:      string
}
#AwsEgressOnlyInternetGatewayResource: {
	vpc_id: string
	tags?: [_]: string
}
#AwsEipResource: {
	associate_with_private_ip?: string
	customer_owned_ipv4_pool?:  string
	tags?: [_]: string
	timeouts?: {
		delete?: string
		read?:   string
		update?: string
	}
}
#AwsEipAssociationResource: allow_reassociation?: bool
#AwsEksClusterResource: {
	name:     string
	role_arn: string
	enabled_cluster_log_types?: [string, ...]
	tags?: [_]: string
	encryption_config?: [{
		resources: [string, ...]
		provider?: [{
			key_arn: string
		}, ...]
	}, ...]
	timeouts?: {
		create?: string
		delete?: string
		update?: string
	}
	vpc_config?: [{
		subnet_ids: [string, ...]
		endpoint_private_access?: bool
		endpoint_public_access?:  bool
		security_group_ids?: [string, ...]
	}, ...]
}
#AwsEksFargateProfileResource: {
	cluster_name:           string
	fargate_profile_name:   string
	pod_execution_role_arn: string
	subnet_ids?: [string, ...]
	tags?: [_]: string
	selector?: [{
		namespace: string
		labels?: [_]: string
	}, ...]
	timeouts?: {
		create?: string
		delete?: string
	}
}
#AwsEksNodeGroupResource: {
	cluster_name:    string
	node_group_name: string
	node_role_arn:   string
	subnet_ids: [string, ...]
	force_update_version?: bool
	labels?: [_]: string
	tags?: [_]:   string
	remote_access?: [{
		ec2_ssh_key?: string
		source_security_group_ids?: [string, ...]
	}, ...]
	scaling_config?: [{
		desired_size: number
		max_size:     number
		min_size:     number
	}, ...]
	timeouts?: {
		create?: string
		delete?: string
		update?: string
	}
}
#AwsElasticBeanstalkApplicationResource: {
	name:         string
	description?: string
	tags?: [_]: string
	appversion_lifecycle?: [{
		service_role:           string
		delete_source_from_s3?: bool
		max_age_in_days?:       number
		max_count?:             number
	}, ...]
}
#AwsElasticBeanstalkApplicationVersionResource: {
	application:   string
	bucket:        string
	key:           string
	name:          string
	description?:  string
	force_delete?: bool
	tags?: [_]: string
}
#AwsElasticBeanstalkConfigurationTemplateResource: {
	application:          string
	name:                 string
	description?:         string
	environment_id?:      string
	solution_stack_name?: string
	setting?: [{
		name:      string
		namespace: string
		value:     string
		resource?: string
	}, ...]
}
#AwsElasticBeanstalkEnvironmentResource: {
	application:    string
	name:           string
	description?:   string
	poll_interval?: string
	tags?: [_]: string
	template_name?:          string
	tier?:                   string
	wait_for_ready_timeout?: string
	setting?: [{
		name:      string
		namespace: string
		value:     string
		resource?: string
	}, ...]
}
#AwsElasticacheClusterResource: {
	cluster_id: string
	availability_zones?: [string, ...]
	notification_topic_arn?: string
	preferred_availability_zones?: [string, ...]
	snapshot_arns?: [string, ...]
	snapshot_name?:            string
	snapshot_retention_limit?: number
	tags?: [_]: string
}
#AwsElasticacheParameterGroupResource: {
	family:       string
	name:         string
	description?: string
	parameter?: [{
		name:  string
		value: string
	}, ...]
}
#AwsElasticacheReplicationGroupResource: {
	replication_group_description: string
	replication_group_id:          string
	at_rest_encryption_enabled?:   bool
	auth_token?:                   string
	auto_minor_version_upgrade?:   bool
	automatic_failover_enabled?:   bool
	availability_zones?: [string, ...]
	engine?:                 string
	kms_key_id?:             string
	notification_topic_arn?: string
	port?:                   number
	snapshot_arns?: [string, ...]
	snapshot_name?:            string
	snapshot_retention_limit?: number
	tags?: [_]: string
	transit_encryption_enabled?: bool
	cluster_mode?: [{
		num_node_groups:         number
		replicas_per_node_group: number
	}, ...]
	timeouts?: {
		create?: string
		delete?: string
		update?: string
	}
}
#AwsElasticacheSecurityGroupResource: {
	name: string
	security_group_names: [string, ...]
	description?: string
}
#AwsElasticacheSubnetGroupResource: {
	name: string
	subnet_ids: [string, ...]
	description?: string
}
#AwsElasticsearchDomainResource: {
	domain_name:            string
	elasticsearch_version?: string
	tags?: [_]: string
	cluster_config?: [{
		dedicated_master_count?:   number
		dedicated_master_enabled?: bool
		dedicated_master_type?:    string
		instance_count?:           number
		instance_type?:            string
		zone_awareness_enabled?:   bool
		zone_awareness_config?: [{
			availability_zone_count?: number
		}, ...]
	}, ...]
	cognito_options?: [{
		identity_pool_id: string
		role_arn:         string
		user_pool_id:     string
		enabled?:         bool
	}, ...]
	domain_endpoint_options?: [{
		enforce_https: bool
	}, ...]
	ebs_options?: [{
		ebs_enabled:  bool
		iops?:        number
		volume_size?: number
	}, ...]
	encrypt_at_rest?: [{
		enabled: bool
	}, ...]
	log_publishing_options?: [{
		cloudwatch_log_group_arn: string
		log_type:                 string
		enabled?:                 bool
	}, ...]
	node_to_node_encryption?: [{
		enabled: bool
	}, ...]
	snapshot_options?: [{
		automated_snapshot_start_hour: number
	}, ...]
	timeouts?: update?: string
	vpc_options?: [{
		security_group_ids?: [string, ...]
		subnet_ids?: [string, ...]
	}, ...]
}
#AwsElasticsearchDomainPolicyResource: {
	access_policies: string
	domain_name:     string
}
#AwsElastictranscoderPipelineResource: {
	input_bucket:     string
	role:             string
	aws_kms_key_arn?: string
	content_config?: [{
		storage_class?: string
	}, ...]
	content_config_permissions?: [{
		access?: [string, ...]
		grantee?:      string
		grantee_type?: string
	}, ...]
	notifications?: [{
		completed?:   string
		error?:       string
		progressing?: string
		warning?:     string
	}, ...]
	thumbnail_config?: [{
		storage_class?: string
	}, ...]
	thumbnail_config_permissions?: [{
		access?: [string, ...]
		grantee?:      string
		grantee_type?: string
	}, ...]
}
#AwsElastictranscoderPresetResource: {
	container:    string
	description?: string
	video_codec_options?: [_]: string
	audio?: [{
		audio_packing_mode?: string
		bit_rate?:           string
		channels?:           string
		codec?:              string
		sample_rate?:        string
	}, ...]
	audio_codec_options?: [{
		bit_depth?: string
		bit_order?: string
		profile?:   string
		signed?:    string
	}, ...]
	thumbnails?: [{
		aspect_ratio?:   string
		format?:         string
		interval?:       string
		max_height?:     string
		max_width?:      string
		padding_policy?: string
		resolution?:     string
		sizing_policy?:  string
	}, ...]
	video?: [{
		aspect_ratio?:         string
		bit_rate?:             string
		codec?:                string
		display_aspect_ratio?: string
		fixed_gop?:            string
		frame_rate?:           string
		keyframes_max_dist?:   string
		max_frame_rate?:       string
		max_height?:           string
		max_width?:            string
		padding_policy?:       string
		resolution?:           string
		sizing_policy?:        string
	}, ...]
	video_watermarks?: [{
		horizontal_align?:  string
		horizontal_offset?: string
		id?:                string
		max_height?:        string
		max_width?:         string
		opacity?:           string
		sizing_policy?:     string
		target?:            string
		vertical_align?:    string
		vertical_offset?:   string
	}, ...]
}
#AwsElbResource: {
	connection_draining?:         bool
	connection_draining_timeout?: number
	cross_zone_load_balancing?:   bool
	idle_timeout?:                number
	name_prefix?:                 string
	tags?: [_]: string
	access_logs?: [{
		bucket:         string
		bucket_prefix?: string
		enabled?:       bool
		interval?:      number
	}, ...]
	health_check?: [{
		healthy_threshold:   number
		interval:            number
		target:              string
		timeout:             number
		unhealthy_threshold: number
	}, ...]
	listener?: [{
		instance_port:       number
		instance_protocol:   string
		lb_port:             number
		lb_protocol:         string
		ssl_certificate_id?: string
	}, ...]
}
#AwsElbAttachmentResource: {
	elb:      string
	instance: string
}
#AwsEmrClusterResource: {
	name:             string
	release_label:    string
	service_role:     string
	additional_info?: string
	applications?: [string, ...]
	autoscaling_role?:       string
	configurations?:         string
	configurations_json?:    string
	custom_ami_id?:          string
	ebs_root_volume_size?:   number
	log_uri?:                string
	security_configuration?: string
	step_concurrency_level?: number
	tags?: [_]: string
	visible_to_all_users?: bool
	bootstrap_action?: [{
		name: string
		path: string
		args?: [string, ...]
	}, ...]
	core_instance_group?: [{
		instance_type:       string
		autoscaling_policy?: string
		bid_price?:          string
		instance_count?:     number
		name?:               string
		ebs_config?: [{
			size:                  number
			type:                  string
			iops?:                 number
			volumes_per_instance?: number
		}, ...]
	}, ...]
	ec2_attributes?: [{
		instance_profile:                   string
		additional_master_security_groups?: string
		additional_slave_security_groups?:  string
		key_name?:                          string
		subnet_id?:                         string
	}, ...]
	instance_group?: [{
		instance_role:       string
		instance_type:       string
		autoscaling_policy?: string
		bid_price?:          string
		instance_count?:     number
		name?:               string
		ebs_config?: [{
			size:                  number
			type:                  string
			iops?:                 number
			volumes_per_instance?: number
		}, ...]
	}, ...]
	kerberos_attributes?: [{
		kdc_admin_password:                    string
		realm:                                 string
		ad_domain_join_password?:              string
		ad_domain_join_user?:                  string
		cross_realm_trust_principal_password?: string
	}, ...]
	master_instance_group?: [{
		instance_type:   string
		bid_price?:      string
		instance_count?: number
		name?:           string
		ebs_config?: [{
			size:                  number
			type:                  string
			iops?:                 number
			volumes_per_instance?: number
		}, ...]
	}, ...]
}
#AwsEmrInstanceGroupResource: {
	cluster_id:           string
	instance_type:        string
	autoscaling_policy?:  string
	bid_price?:           string
	configurations_json?: string
	ebs_optimized?:       bool
	instance_count?:      number
	name?:                string
	ebs_config?: [{
		size:                  number
		type:                  string
		iops?:                 number
		volumes_per_instance?: number
	}, ...]
}
#AwsEmrSecurityConfigurationResource: {
	configuration: string
	name_prefix?:  string
}
#AwsFlowLogResource: {
	traffic_type:              string
	eni_id?:                   string
	iam_role_arn?:             string
	log_destination_type?:     string
	max_aggregation_interval?: number
	subnet_id?:                string
	tags?: [_]: string
	vpc_id?: string
}
#AwsFmsAdminAccountResource: {}
#AwsFsxLustreFileSystemResource: {
	storage_capacity: number
	subnet_ids: [string, ...]
	import_path?: string
	security_group_ids?: [string, ...]
	tags?: [_]: string
	timeouts?: {
		create?: string
		delete?: string
	}
}
#AwsFsxWindowsFileSystemResource: {
	storage_capacity: number
	subnet_ids: [string, ...]
	throughput_capacity:              number
	active_directory_id?:             string
	automatic_backup_retention_days?: number
	copy_tags_to_backups?:            bool
	security_group_ids?: [string, ...]
	skip_final_backup?: bool
	tags?: [_]: string
	self_managed_active_directory?: [{
		dns_ips: [string, ...]
		domain_name:                             string
		password:                                string
		username:                                string
		file_system_administrators_group?:       string
		organizational_unit_distinguished_name?: string
	}, ...]
	timeouts?: {
		create?: string
		delete?: string
	}
}
#AwsGameliftAliasResource: {
	name:         string
	description?: string
	tags?: [_]: string
	routing_strategy?: [{
		type:      string
		fleet_id?: string
		message?:  string
	}, ...]
}
#AwsGameliftBuildResource: {
	name:             string
	operating_system: string
	tags?: [_]: string
	version?: string
	storage_location?: [{
		bucket:   string
		key:      string
		role_arn: string
	}, ...]
}
#AwsGameliftFleetResource: {
	build_id:                            string
	ec2_instance_type:                   string
	name:                                string
	description?:                        string
	fleet_type?:                         string
	instance_role_arn?:                  string
	new_game_session_protection_policy?: string
	tags?: [_]: string
	ec2_inbound_permission?: [{
		from_port: number
		ip_range:  string
		protocol:  string
		to_port:   number
	}, ...]
	resource_creation_limit_policy?: [{
		new_game_sessions_per_creator?: number
		policy_period_in_minutes?:      number
	}, ...]
	runtime_configuration?: [{
		game_session_activation_timeout_seconds?: number
		max_concurrent_game_session_activations?: number
		server_process?: [{
			concurrent_executions: number
			launch_path:           string
			parameters?:           string
		}, ...]
	}, ...]
	timeouts?: {
		create?: string
		delete?: string
	}
}
#AwsGameliftGameSessionQueueResource: {
	name: string
	destinations?: [string, ...]
	tags?: [_]: string
	timeout_in_seconds?: number
	player_latency_policy?: [{
		maximum_individual_player_latency_milliseconds: number
		policy_duration_seconds?:                       number
	}, ...]
}
#AwsGlacierVaultResource: {
	name:           string
	access_policy?: string
	tags?: [_]: string
	notification?: [{
		events: [string, ...]
		sns_topic: string
	}, ...]
}
#AwsGlacierVaultLockResource: {
	complete_lock:          bool
	policy:                 string
	vault_name:             string
	ignore_deletion_error?: bool
}
#AwsGlobalacceleratorAcceleratorResource: {
	name:             string
	enabled?:         bool
	ip_address_type?: string
	tags?: [_]: string
	attributes?: [{
		flow_logs_enabled?:   bool
		flow_logs_s3_bucket?: string
		flow_logs_s3_prefix?: string
	}, ...]
}
#AwsGlobalacceleratorEndpointGroupResource: {
	listener_arn:                   string
	health_check_interval_seconds?: number
	health_check_path?:             string
	health_check_port?:             number
	health_check_protocol?:         string
	threshold_count?:               number
	traffic_dial_percentage?:       number
	endpoint_configuration?: [{
		endpoint_id?: string
		weight?:      number
	}, ...]
}
#AwsGlobalacceleratorListenerResource: {
	accelerator_arn:  string
	protocol:         string
	client_affinity?: string
	port_range?: [{
		from_port?: number
		to_port?:   number
	}, ...]
}
#AwsGlueCatalogDatabaseResource: {
	name:          string
	description?:  string
	location_uri?: string
	parameters?: [_]: string
}
#AwsGlueCatalogTableResource: {
	database_name: string
	name:          string
	description?:  string
	owner?:        string
	parameters?: [_]: string
	retention?:          number
	table_type?:         string
	view_expanded_text?: string
	view_original_text?: string
	partition_keys?: [{
		name:     string
		comment?: string
		type?:    string
	}, ...]
	storage_descriptor?: [{
		bucket_columns?: [string, ...]
		compressed?:        bool
		input_format?:      string
		location?:          string
		number_of_buckets?: number
		output_format?:     string
		parameters?: [_]: string
		stored_as_sub_directories?: bool
		columns?: [{
			name:     string
			comment?: string
			type?:    string
		}, ...]
		ser_de_info?: [{
			name?: string
			parameters?: [_]: string
			serialization_library?: string
		}, ...]
		skewed_info?: [{
			skewed_column_names?: [string, ...]
			skewed_column_value_location_maps?: [_]: string
			skewed_column_values?: [string, ...]
		}, ...]
		sort_columns?: [{
			column:     string
			sort_order: number
		}, ...]
	}, ...]
}
#AwsGlueClassifierResource: {
	name: string
	csv_classifier?: [{
		allow_single_column?:    bool
		contains_header?:        string
		delimiter?:              string
		disable_value_trimming?: bool
		header?: [string, ...]
		quote_symbol?: string
	}, ...]
	grok_classifier?: [{
		classification:   string
		grok_pattern:     string
		custom_patterns?: string
	}, ...]
	json_classifier?: [{
		json_path: string
	}, ...]
	xml_classifier?: [{
		classification: string
		row_tag:        string
	}, ...]
}
#AwsGlueConnectionResource: {
	connection_properties: [_]: string
	name:             string
	connection_type?: string
	description?:     string
	match_criteria?: [string, ...]
	physical_connection_requirements?: [{
		availability_zone?: string
		security_group_id_list?: [string, ...]
		subnet_id?: string
	}, ...]
}
#AwsGlueCrawlerResource: {
	database_name: string
	name:          string
	role:          string
	classifiers?: [string, ...]
	configuration?:          string
	description?:            string
	schedule?:               string
	security_configuration?: string
	table_prefix?:           string
	tags?: [_]: string
	catalog_target?: [{
		database_name: string
		tables: [string, ...]
	}, ...]
	dynamodb_target?: [{
		path: string
	}, ...]
	jdbc_target?: [{
		connection_name: string
		path:            string
		exclusions?: [string, ...]
	}, ...]
	s3_target?: [{
		path: string
		exclusions?: [string, ...]
	}, ...]
	schema_change_policy?: [{
		delete_behavior?: string
		update_behavior?: string
	}, ...]
}
#AwsGlueJobResource: {
	name:     string
	role_arn: string
	connections?: [string, ...]
	default_arguments?: [_]: string
	description?:            string
	max_retries?:            number
	number_of_workers?:      number
	security_configuration?: string
	tags?: [_]: string
	timeout?:     number
	worker_type?: string
	command?: [{
		script_location: string
		name?:           string
	}, ...]
	execution_property?: [{
		max_concurrent_runs?: number
	}, ...]
	notification_property?: [{
		notify_delay_after?: number
	}, ...]
}
#AwsGlueSecurityConfigurationResource: {
	name: string
	encryption_configuration?: [{
		cloudwatch_encryption?: [{
			cloudwatch_encryption_mode?: string
			kms_key_arn?:                string
		}, ...]
		job_bookmarks_encryption?: [{
			job_bookmarks_encryption_mode?: string
			kms_key_arn?:                   string
		}, ...]
		s3_encryption?: [{
			kms_key_arn?:        string
			s3_encryption_mode?: string
		}, ...]
	}, ...]
}
#AwsGlueTriggerResource: {
	name:         string
	type:         string
	description?: string
	enabled?:     bool
	schedule?:    string
	tags?: [_]: string
	workflow_name?: string
	actions?: [{
		arguments?: [_]: string
		crawler_name?: string
		job_name?:     string
		timeout?:      number
	}, ...]
	predicate?: [{
		logical?: string
		conditions?: [{
			crawl_state?:      string
			crawler_name?:     string
			job_name?:         string
			logical_operator?: string
			state?:            string
		}, ...]
	}, ...]
	timeouts?: {
		create?: string
		delete?: string
	}
}
#AwsGlueWorkflowResource: {
	default_run_properties?: [_]: string
	description?: string
	name?:        string
}
#AwsGuarddutyDetectorResource: enable?: bool
#AwsGuarddutyInviteAccepterResource: {
	detector_id:       string
	master_account_id: string
	timeouts?: create?: string
}
#AwsGuarddutyIpsetResource: {
	activate:    bool
	detector_id: string
	format:      string
	location:    string
	name:        string
}
#AwsGuarddutyMemberResource: {
	account_id:                  string
	detector_id:                 string
	email:                       string
	disable_email_notification?: bool
	invitation_message?:         string
	invite?:                     bool
	timeouts?: {
		create?: string
		update?: string
	}
}
#AwsGuarddutyOrganizationAdminAccountResource: admin_account_id: string
#AwsGuarddutyOrganizationConfigurationResource: {
	auto_enable: bool
	detector_id: string
}
#AwsGuarddutyThreatintelsetResource: {
	activate:    bool
	detector_id: string
	format:      string
	location:    string
	name:        string
}
#AwsIamAccessKeyResource: {
	user:     string
	pgp_key?: string
}
#AwsIamAccountAliasResource: account_alias: string
#AwsIamAccountPasswordPolicyResource: {
	allow_users_to_change_password?: bool
	minimum_password_length?:        number
}
#AwsIamGroupResource: {
	name:  string
	path?: string
}
#AwsIamGroupMembershipResource: {
	group: string
	name:  string
	users: [string, ...]
}
#AwsIamGroupPolicyResource: {
	group:        string
	policy:       string
	name_prefix?: string
}
#AwsIamGroupPolicyAttachmentResource: {
	group:      string
	policy_arn: string
}
#AwsIamInstanceProfileResource: {
	name_prefix?: string
	path?:        string
}
#AwsIamOpenidConnectProviderResource: {
	client_id_list: [string, ...]
	thumbprint_list: [string, ...]
	url: string
}
#AwsIamPolicyResource: {
	policy:       string
	description?: string
	name_prefix?: string
	path?:        string
}
#AwsIamPolicyAttachmentResource: {
	name:       string
	policy_arn: string
	groups?: [string, ...]
	roles?: [string, ...]
	users?: [string, ...]
}
#AwsIamRoleResource: {
	assume_role_policy:     string
	description?:           string
	force_detach_policies?: bool
	max_session_duration?:  number
	name_prefix?:           string
	path?:                  string
	permissions_boundary?:  string
	tags?: [_]: string
}
#AwsIamRolePolicyResource: {
	policy:       string
	role:         string
	name_prefix?: string
}
#AwsIamRolePolicyAttachmentResource: {
	policy_arn: string
	role:       string
}
#AwsIamSamlProviderResource: {
	name:                   string
	saml_metadata_document: string
}
#AwsIamServerCertificateResource: {
	certificate_body:   string
	private_key:        string
	certificate_chain?: string
	name_prefix?:       string
	path?:              string
}
#AwsIamServiceLinkedRoleResource: {
	aws_service_name: string
	custom_suffix?:   string
	description?:     string
}
#AwsIamUserResource: {
	name:                  string
	force_destroy?:        bool
	path?:                 string
	permissions_boundary?: string
	tags?: [_]: string
}
#AwsIamUserGroupMembershipResource: {
	groups: [string, ...]
	user: string
}
#AwsIamUserLoginProfileResource: {
	pgp_key:                  string
	user:                     string
	password_length?:         number
	password_reset_required?: bool
}
#AwsIamUserPolicyResource: {
	policy:       string
	user:         string
	name_prefix?: string
}
#AwsIamUserPolicyAttachmentResource: {
	policy_arn: string
	user:       string
}
#AwsIamUserSshKeyResource: {
	encoding:   string
	public_key: string
	username:   string
}
#AwsInspectorAssessmentTargetResource: {
	name:                string
	resource_group_arn?: string
}
#AwsInspectorAssessmentTemplateResource: {
	duration: number
	name:     string
	rules_package_arns: [string, ...]
	target_arn: string
	tags?: [_]: string
}
#AwsInspectorResourceGroupResource: tags: [_]: string
#AwsInstanceResource: {
	ami:                                   string
	instance_type:                         string
	disable_api_termination?:              bool
	ebs_optimized?:                        bool
	get_password_data?:                    bool
	hibernation?:                          bool
	iam_instance_profile?:                 string
	instance_initiated_shutdown_behavior?: string
	monitoring?:                           bool
	source_dest_check?:                    bool
	tags?: [_]: string
	user_data?:        string
	user_data_base64?: string
	credit_specification?: [{
		cpu_credits?: string
	}, ...]
	ebs_block_device?: [{
		device_name:            string
		delete_on_termination?: bool
	}, ...]
	ephemeral_block_device?: [{
		device_name:   string
		no_device?:    bool
		virtual_name?: string
	}, ...]
	metadata_options?: [{}, ...]
	network_interface?: [{
		device_index:           number
		network_interface_id:   string
		delete_on_termination?: bool
	}, ...]
	root_block_device?: [{
		delete_on_termination?: bool
	}, ...]
	timeouts?: {
		create?: string
		delete?: string
		update?: string
	}
}
#AwsInternetGatewayResource: {
	tags?: [_]: string
	vpc_id?: string
}
#AwsIotCertificateResource: {
	active: bool
	csr?:   string
}
#AwsIotPolicyResource: {
	name:   string
	policy: string
}
#AwsIotPolicyAttachmentResource: {
	policy: string
	target: string
}
#AwsIotRoleAliasResource: {
	alias:                string
	role_arn:             string
	credential_duration?: number
}
#AwsIotThingResource: {
	name: string
	attributes?: [_]: string
	thing_type_name?: string
}
#AwsIotThingPrincipalAttachmentResource: {
	principal: string
	thing:     string
}
#AwsIotThingTypeResource: {
	name:        string
	deprecated?: bool
	properties?: [{
		description?: string
	}, ...]
}
#AwsIotTopicRuleResource: {
	enabled:      bool
	name:         string
	sql:          string
	sql_version:  string
	description?: string
	tags?: [_]: string
	cloudwatch_alarm?: [{
		alarm_name:   string
		role_arn:     string
		state_reason: string
		state_value:  string
	}, ...]
	cloudwatch_metric?: [{
		metric_name:       string
		metric_namespace:  string
		metric_unit:       string
		metric_value:      string
		role_arn:          string
		metric_timestamp?: string
	}, ...]
	dynamodb?: [{
		hash_key_field:   string
		hash_key_value:   string
		role_arn:         string
		table_name:       string
		hash_key_type?:   string
		operation?:       string
		payload_field?:   string
		range_key_field?: string
		range_key_type?:  string
		range_key_value?: string
	}, ...]
	dynamodbv2?: [{
		role_arn: string
		put_item?: [{
			table_name: string
		}, ...]
	}, ...]
	elasticsearch?: [{
		endpoint: string
		id:       string
		index:    string
		role_arn: string
		type:     string
	}, ...]
	firehose?: [{
		delivery_stream_name: string
		role_arn:             string
		separator?:           string
	}, ...]
	iot_analytics?: [{
		channel_name: string
		role_arn:     string
	}, ...]
	iot_events?: [{
		input_name:  string
		role_arn:    string
		message_id?: string
	}, ...]
	kinesis?: [{
		role_arn:       string
		stream_name:    string
		partition_key?: string
	}, ...]
	lambda?: [{
		function_arn: string
	}, ...]
	republish?: [{
		role_arn: string
		topic:    string
		qos?:     number
	}, ...]
	s3?: [{
		bucket_name: string
		key:         string
		role_arn:    string
	}, ...]
	sns?: [{
		role_arn:        string
		target_arn:      string
		message_format?: string
	}, ...]
	sqs?: [{
		queue_url:  string
		role_arn:   string
		use_base64: bool
	}, ...]
}
#AwsKeyPairResource: {
	public_key:       string
	key_name_prefix?: string
	tags?: [_]: string
}
#AwsKinesisAnalyticsApplicationResource: {
	name:         string
	code?:        string
	description?: string
	tags?: [_]: string
	cloudwatch_logging_options?: [{
		log_stream_arn: string
		role_arn:       string
	}, ...]
	inputs?: [{
		name_prefix: string
		kinesis_firehose?: [{
			resource_arn: string
			role_arn:     string
		}, ...]
		kinesis_stream?: [{
			resource_arn: string
			role_arn:     string
		}, ...]
		parallelism?: [{
			count: number
		}, ...]
		processing_configuration?: [{
			lambda?: [{
				resource_arn: string
				role_arn:     string
			}, ...]
		}, ...]
		schema?: [{
			record_encoding?: string
			record_columns?: [{
				name:     string
				sql_type: string
				mapping?: string
			}, ...]
			record_format?: [{
				mapping_parameters?: [{
					csv?: [{
						record_column_delimiter: string
						record_row_delimiter:    string
					}, ...]
					json?: [{
						record_row_path: string
					}, ...]
				}, ...]
			}, ...]
		}, ...]
	}, ...]
	outputs?: [{
		name: string
		kinesis_firehose?: [{
			resource_arn: string
			role_arn:     string
		}, ...]
		kinesis_stream?: [{
			resource_arn: string
			role_arn:     string
		}, ...]
		lambda?: [{
			resource_arn: string
			role_arn:     string
		}, ...]
		schema?: [{
			record_format_type?: string
		}, ...]
	}, ...]
	reference_data_sources?: [{
		table_name: string
		s3?: [{
			bucket_arn: string
			file_key:   string
			role_arn:   string
		}, ...]
		schema?: [{
			record_encoding?: string
			record_columns?: [{
				name:     string
				sql_type: string
				mapping?: string
			}, ...]
			record_format?: [{
				mapping_parameters?: [{
					csv?: [{
						record_column_delimiter: string
						record_row_delimiter:    string
					}, ...]
					json?: [{
						record_row_path: string
					}, ...]
				}, ...]
			}, ...]
		}, ...]
	}, ...]
}
#AwsKinesisFirehoseDeliveryStreamResource: {
	destination: string
	name:        string
	tags?: [_]: string
	elasticsearch_configuration?: [{
		domain_arn:             string
		index_name:             string
		role_arn:               string
		buffering_interval?:    number
		buffering_size?:        number
		index_rotation_period?: string
		retry_duration?:        number
		s3_backup_mode?:        string
		type_name?:             string
		cloudwatch_logging_options?: [{
			enabled?:         bool
			log_group_name?:  string
			log_stream_name?: string
		}, ...]
		processing_configuration?: [{
			enabled?: bool
			processors?: [{
				type: string
				parameters?: [{
					parameter_name:  string
					parameter_value: string
				}, ...]
			}, ...]
		}, ...]
	}, ...]
	extended_s3_configuration?: [{
		bucket_arn:           string
		role_arn:             string
		buffer_interval?:     number
		buffer_size?:         number
		compression_format?:  string
		error_output_prefix?: string
		kms_key_arn?:         string
		prefix?:              string
		s3_backup_mode?:      string
		cloudwatch_logging_options?: [{
			enabled?:         bool
			log_group_name?:  string
			log_stream_name?: string
		}, ...]
		data_format_conversion_configuration?: [{
			enabled?: bool
			input_format_configuration?: [{
				deserializer?: [{
					hive_json_ser_de?: [{
						timestamp_formats?: [string, ...]
					}, ...]
					open_x_json_ser_de?: [{
						case_insensitive?: bool
						column_to_json_key_mappings?: [_]: string
						convert_dots_in_json_keys_to_underscores?: bool
					}, ...]
				}, ...]
			}, ...]
			output_format_configuration?: [{
				serializer?: [{
					orc_ser_de?: [{
						block_size_bytes?: number
						bloom_filter_columns?: [string, ...]
						bloom_filter_false_positive_probability?: number
						compression?:                             string
						dictionary_key_threshold?:                number
						enable_padding?:                          bool
						format_version?:                          string
						padding_tolerance?:                       number
						row_index_stride?:                        number
						stripe_size_bytes?:                       number
					}, ...]
					parquet_ser_de?: [{
						block_size_bytes?:              number
						compression?:                   string
						enable_dictionary_compression?: bool
						max_padding_bytes?:             number
						page_size_bytes?:               number
						writer_version?:                string
					}, ...]
				}, ...]
			}, ...]
			schema_configuration?: [{
				database_name: string
				role_arn:      string
				table_name:    string
				version_id?:   string
			}, ...]
		}, ...]
		processing_configuration?: [{
			enabled?: bool
			processors?: [{
				type: string
				parameters?: [{
					parameter_name:  string
					parameter_value: string
				}, ...]
			}, ...]
		}, ...]
		s3_backup_configuration?: [{
			bucket_arn:          string
			role_arn:            string
			buffer_interval?:    number
			buffer_size?:        number
			compression_format?: string
			kms_key_arn?:        string
			prefix?:             string
			cloudwatch_logging_options?: [{
				enabled?:         bool
				log_group_name?:  string
				log_stream_name?: string
			}, ...]
		}, ...]
	}, ...]
	kinesis_source_configuration?: [{
		kinesis_stream_arn: string
		role_arn:           string
	}, ...]
	redshift_configuration?: [{
		cluster_jdbcurl:     string
		data_table_name:     string
		password:            string
		role_arn:            string
		username:            string
		copy_options?:       string
		data_table_columns?: string
		retry_duration?:     number
		s3_backup_mode?:     string
		cloudwatch_logging_options?: [{
			enabled?:         bool
			log_group_name?:  string
			log_stream_name?: string
		}, ...]
		processing_configuration?: [{
			enabled?: bool
			processors?: [{
				type: string
				parameters?: [{
					parameter_name:  string
					parameter_value: string
				}, ...]
			}, ...]
		}, ...]
		s3_backup_configuration?: [{
			bucket_arn:          string
			role_arn:            string
			buffer_interval?:    number
			buffer_size?:        number
			compression_format?: string
			kms_key_arn?:        string
			prefix?:             string
			cloudwatch_logging_options?: [{
				enabled?:         bool
				log_group_name?:  string
				log_stream_name?: string
			}, ...]
		}, ...]
	}, ...]
	s3_configuration?: [{
		bucket_arn:          string
		role_arn:            string
		buffer_interval?:    number
		buffer_size?:        number
		compression_format?: string
		kms_key_arn?:        string
		prefix?:             string
		cloudwatch_logging_options?: [{
			enabled?:         bool
			log_group_name?:  string
			log_stream_name?: string
		}, ...]
	}, ...]
	server_side_encryption?: [{
		enabled?: bool
	}, ...]
	splunk_configuration?: [{
		hec_endpoint:                string
		hec_token:                   string
		hec_acknowledgment_timeout?: number
		hec_endpoint_type?:          string
		retry_duration?:             number
		s3_backup_mode?:             string
		cloudwatch_logging_options?: [{
			enabled?:         bool
			log_group_name?:  string
			log_stream_name?: string
		}, ...]
		processing_configuration?: [{
			enabled?: bool
			processors?: [{
				type: string
				parameters?: [{
					parameter_name:  string
					parameter_value: string
				}, ...]
			}, ...]
		}, ...]
	}, ...]
}
#AwsKinesisStreamResource: {
	name:                       string
	shard_count:                number
	encryption_type?:           string
	enforce_consumer_deletion?: bool
	kms_key_id?:                string
	retention_period?:          number
	shard_level_metrics?: [string, ...]
	tags?: [_]: string
	timeouts?: {
		create?: string
		delete?: string
		update?: string
	}
}
#AwsKinesisVideoStreamResource: {
	name:                     string
	data_retention_in_hours?: number
	device_name?:             string
	media_type?:              string
	tags?: [_]: string
	timeouts?: {
		create?: string
		delete?: string
		update?: string
	}
}
#AwsKmsAliasResource: {
	target_key_id: string
	name?:         string
	name_prefix?:  string
}
#AwsKmsCiphertextResource: {
	key_id:    string
	plaintext: string
	context?: [_]: string
}
#AwsKmsExternalKeyResource: {
	deletion_window_in_days?: number
	description?:             string
	key_material_base64?:     string
	tags?: [_]: string
	valid_to?: string
}
#AwsKmsGrantResource: {
	grantee_principal: string
	key_id:            string
	operations: [string, ...]
	grant_creation_tokens?: [string, ...]
	name?:               string
	retire_on_delete?:   bool
	retiring_principal?: string
	constraints?: [{
		encryption_context_equals?: [_]: string
		encryption_context_subset?: [_]: string
	}, ...]
}
#AwsKmsKeyResource: {
	customer_master_key_spec?: string
	deletion_window_in_days?:  number
	enable_key_rotation?:      bool
	is_enabled?:               bool
	key_usage?:                string
	tags?: [_]: string
}
#AwsLambdaAliasResource: {
	function_name:    string
	function_version: string
	name:             string
	description?:     string
	routing_config?: [{
		additional_version_weights?: [_]: number
	}, ...]
}
#AwsLambdaEventSourceMappingResource: {
	event_source_arn:                    string
	function_name:                       string
	batch_size?:                         number
	bisect_batch_on_function_error?:     bool
	enabled?:                            bool
	maximum_batching_window_in_seconds?: number
	starting_position?:                  string
	starting_position_timestamp?:        string
	destination_config?: [{
		on_failure?: [{
			destination_arn: string
		}, ...]
	}, ...]
}
#AwsLambdaFunctionResource: {
	function_name: string
	handler:       string
	role:          string
	runtime:       string
	description?:  string
	filename?:     string
	kms_key_arn?:  string
	layers?: [string, ...]
	memory_size?:                    number
	publish?:                        bool
	reserved_concurrent_executions?: number
	s3_bucket?:                      string
	s3_key?:                         string
	s3_object_version?:              string
	tags?: [_]: string
	timeout?: number
	dead_letter_config?: [{
		target_arn: string
	}, ...]
	environment?: [{
		variables?: [_]: string
	}, ...]
	timeouts?: create?: string
	tracing_config?: [{
		mode: string
	}, ...]
	vpc_config?: [{
		security_group_ids: [string, ...]
		subnet_ids: [string, ...]
	}, ...]
}
#AwsLambdaFunctionEventInvokeConfigResource: {
	function_name:                 string
	maximum_event_age_in_seconds?: number
	maximum_retry_attempts?:       number
	qualifier?:                    string
	destination_config?: [{
		on_failure?: [{
			destination: string
		}, ...]
		on_success?: [{
			destination: string
		}, ...]
	}, ...]
}
#AwsLambdaLayerVersionResource: {
	layer_name: string
	compatible_runtimes?: [string, ...]
	description?:       string
	filename?:          string
	license_info?:      string
	s3_bucket?:         string
	s3_key?:            string
	s3_object_version?: string
}
#AwsLambdaPermissionResource: {
	action:               string
	function_name:        string
	principal:            string
	event_source_token?:  string
	qualifier?:           string
	source_account?:      string
	source_arn?:          string
	statement_id_prefix?: string
}
#AwsLambdaProvisionedConcurrencyConfigResource: {
	function_name:                     string
	provisioned_concurrent_executions: number
	qualifier:                         string
	timeouts?: {
		create?: string
		update?: string
	}
}
#AwsLaunchConfigurationResource: {
	image_id:                     string
	instance_type:                string
	associate_public_ip_address?: bool
	enable_monitoring?:           bool
	iam_instance_profile?:        string
	name_prefix?:                 string
	placement_tenancy?:           string
	security_groups?: [string, ...]
	spot_price?:          string
	user_data?:           string
	user_data_base64?:    string
	vpc_classic_link_id?: string
	vpc_classic_link_security_groups?: [string, ...]
	ebs_block_device?: [{
		device_name:            string
		delete_on_termination?: bool
		no_device?:             bool
	}, ...]
	ephemeral_block_device?: [{
		device_name:  string
		virtual_name: string
	}, ...]
	root_block_device?: [{
		delete_on_termination?: bool
	}, ...]
}
#AwsLaunchTemplateResource: {
	description?:                          string
	disable_api_termination?:              bool
	ebs_optimized?:                        string
	image_id?:                             string
	instance_initiated_shutdown_behavior?: string
	instance_type?:                        string
	kernel_id?:                            string
	key_name?:                             string
	name_prefix?:                          string
	ram_disk_id?:                          string
	security_group_names?: [string, ...]
	tags?: [_]: string
	user_data?: string
	vpc_security_group_ids?: [string, ...]
	block_device_mappings?: [{
		device_name?:  string
		no_device?:    string
		virtual_name?: string
		ebs?: [{
			delete_on_termination?: string
			encrypted?:             string
			kms_key_id?:            string
			snapshot_id?:           string
		}, ...]
	}, ...]
	capacity_reservation_specification?: [{
		capacity_reservation_preference?: string
		capacity_reservation_target?: [{
			capacity_reservation_id?: string
		}, ...]
	}, ...]
	cpu_options?: [{
		core_count?:       number
		threads_per_core?: number
	}, ...]
	credit_specification?: [{
		cpu_credits?: string
	}, ...]
	elastic_gpu_specifications?: [{
		type: string
	}, ...]
	elastic_inference_accelerator?: [{
		type: string
	}, ...]
	hibernation_options?: [{
		configured: bool
	}, ...]
	iam_instance_profile?: [{
		arn?:  string
		name?: string
	}, ...]
	instance_market_options?: [{
		market_type?: string
		spot_options?: [{
			block_duration_minutes?:         number
			instance_interruption_behavior?: string
			max_price?:                      string
			spot_instance_type?:             string
		}, ...]
	}, ...]
	license_specification?: [{
		license_configuration_arn: string
	}, ...]
	metadata_options?: [{}, ...]
	monitoring?: [{
		enabled?: bool
	}, ...]
	network_interfaces?: [{
		associate_public_ip_address?: string
		delete_on_termination?:       bool
		description?:                 string
		device_index?:                number
		ipv4_address_count?:          number
		ipv4_addresses?: [string, ...]
		ipv6_address_count?: number
		ipv6_addresses?: [string, ...]
		network_interface_id?: string
		private_ip_address?:   string
		security_groups?: [string, ...]
		subnet_id?: string
	}, ...]
	placement?: [{
		affinity?:          string
		availability_zone?: string
		group_name?:        string
		host_id?:           string
		partition_number?:  number
		spread_domain?:     string
		tenancy?:           string
	}, ...]
	tag_specifications?: [{
		resource_type?: string
		tags?: [_]: string
	}, ...]
}
#AwsLbResource: {
	drop_invalid_header_fields?:       bool
	enable_cross_zone_load_balancing?: bool
	enable_deletion_protection?:       bool
	enable_http2?:                     bool
	idle_timeout?:                     number
	load_balancer_type?:               string
	name_prefix?:                      string
	tags?: [_]: string
	access_logs?: [{
		bucket:   string
		enabled?: bool
		prefix?:  string
	}, ...]
	subnet_mapping?: [{
		subnet_id:      string
		allocation_id?: string
	}, ...]
	timeouts?: {
		create?: string
		delete?: string
		update?: string
	}
}
#AwsLbCookieStickinessPolicyResource: {
	lb_port:                   number
	load_balancer:             string
	name:                      string
	cookie_expiration_period?: number
}
#AwsLbListenerResource: {
	load_balancer_arn: string
	port:              number
	certificate_arn?:  string
	protocol?:         string
	default_action?: [{
		type:              string
		target_group_arn?: string
		authenticate_cognito?: [{
			user_pool_arn:       string
			user_pool_client_id: string
			user_pool_domain:    string
			authentication_request_extra_params?: [_]: string
		}, ...]
		authenticate_oidc?: [{
			authorization_endpoint: string
			client_id:              string
			client_secret:          string
			issuer:                 string
			token_endpoint:         string
			user_info_endpoint:     string
			authentication_request_extra_params?: [_]: string
		}, ...]
		fixed_response?: [{
			content_type:  string
			message_body?: string
		}, ...]
		redirect?: [{
			status_code: string
			host?:       string
			path?:       string
			port?:       string
			protocol?:   string
			query?:      string
		}, ...]
	}, ...]
	timeouts?: read?: string
}
#AwsLbListenerCertificateResource: {
	certificate_arn: string
	listener_arn:    string
}
#AwsLbListenerRuleResource: {
	listener_arn: string
	action?: [{
		type:              string
		target_group_arn?: string
		authenticate_cognito?: [{
			user_pool_arn:       string
			user_pool_client_id: string
			user_pool_domain:    string
			authentication_request_extra_params?: [_]: string
		}, ...]
		authenticate_oidc?: [{
			authorization_endpoint: string
			client_id:              string
			client_secret:          string
			issuer:                 string
			token_endpoint:         string
			user_info_endpoint:     string
			authentication_request_extra_params?: [_]: string
		}, ...]
		fixed_response?: [{
			content_type:  string
			message_body?: string
		}, ...]
		redirect?: [{
			status_code: string
			host?:       string
			path?:       string
			port?:       string
			protocol?:   string
			query?:      string
		}, ...]
	}, ...]
	condition?: [{
		host_header?: [{}, ...]
		http_header?: [{
			http_header_name: string
			values: [string, ...]
		}, ...]
		http_request_method?: [{
			values: [string, ...]
		}, ...]
		path_pattern?: [{}, ...]
		query_string?: [{
			value: string
			key?:  string
		}, ...]
		source_ip?: [{
			values: [string, ...]
		}, ...]
	}, ...]
}
#AwsLbSslNegotiationPolicyResource: {
	lb_port:       number
	load_balancer: string
	name:          string
	attribute?: [{
		name:  string
		value: string
	}, ...]
}
#AwsLbTargetGroupResource: {
	deregistration_delay?:               number
	lambda_multi_value_headers_enabled?: bool
	name_prefix?:                        string
	port?:                               number
	protocol?:                           string
	proxy_protocol_v2?:                  bool
	slow_start?:                         number
	tags?: [_]: string
	target_type?: string
	vpc_id?:      string
	health_check?: [{
		enabled?:             bool
		healthy_threshold?:   number
		interval?:            number
		port?:                string
		protocol?:            string
		unhealthy_threshold?: number
	}, ...]
	stickiness?: [{
		type:             string
		cookie_duration?: number
		enabled?:         bool
	}, ...]
}
#AwsLbTargetGroupAttachmentResource: {
	target_group_arn:   string
	target_id:          string
	availability_zone?: string
	port?:              number
}
#AwsLicensemanagerAssociationResource: {
	license_configuration_arn: string
	resource_arn:              string
}
#AwsLicensemanagerLicenseConfigurationResource: {
	license_counting_type:     string
	name:                      string
	description?:              string
	license_count?:            number
	license_count_hard_limit?: bool
	license_rules?: [string, ...]
	tags?: [_]: string
}
#AwsLightsailDomainResource: domain_name: string
#AwsLightsailInstanceResource: {
	availability_zone: string
	blueprint_id:      string
	bundle_id:         string
	name:              string
	key_pair_name?:    string
	tags?: [_]: string
	user_data?: string
}
#AwsLightsailKeyPairResource: {
	name_prefix?: string
	pgp_key?:     string
}
#AwsLightsailStaticIpResource: name: string
#AwsLightsailStaticIpAttachmentResource: {
	instance_name:  string
	static_ip_name: string
}
#AwsLoadBalancerBackendServerPolicyResource: {
	instance_port:      number
	load_balancer_name: string
	policy_names?: [string, ...]
}
#AwsLoadBalancerListenerPolicyResource: {
	load_balancer_name: string
	load_balancer_port: number
	policy_names?: [string, ...]
}
#AwsLoadBalancerPolicyResource: {
	load_balancer_name: string
	policy_name:        string
	policy_type_name:   string
	policy_attribute?: [{
		name?:  string
		value?: string
	}, ...]
}
#AwsMacieMemberAccountAssociationResource: member_account_id: string
#AwsMacieS3BucketAssociationResource: {
	bucket_name:        string
	member_account_id?: string
	prefix?:            string
	classification_type?: [{
		continuous?: string
		one_time?:   string
	}, ...]
}
#AwsMainRouteTableAssociationResource: {
	route_table_id: string
	vpc_id:         string
}
#AwsMediaConvertQueueResource: {
	name:          string
	description?:  string
	pricing_plan?: string
	status?:       string
	tags?: [_]: string
	reservation_plan_settings?: [{
		commitment:     string
		renewal_type:   string
		reserved_slots: number
	}, ...]
}
#AwsMediaPackageChannelResource: {
	channel_id:   string
	description?: string
	tags?: [_]: string
}
#AwsMediaStoreContainerResource: {
	name: string
	tags?: [_]: string
}
#AwsMediaStoreContainerPolicyResource: {
	container_name: string
	policy:         string
}
#AwsMqBrokerResource: {
	broker_name:        string
	engine_type:        string
	engine_version:     string
	host_instance_type: string
	security_groups: [string, ...]
	apply_immediately?:          bool
	auto_minor_version_upgrade?: bool
	deployment_mode?:            string
	publicly_accessible?:        bool
	tags?: [_]: string
	configuration?: [{}, ...]
	encryption_options?: [{
		use_aws_owned_key?: bool
	}, ...]
	logs?: [{
		audit?:   bool
		general?: bool
	}, ...]
	maintenance_window_start_time?: [{
		day_of_week: string
		time_of_day: string
		time_zone:   string
	}, ...]
	user?: [{
		password:        string
		username:        string
		console_access?: bool
		groups?: [string, ...]
	}, ...]
}
#AwsMqConfigurationResource: {
	data:           string
	engine_type:    string
	engine_version: string
	name:           string
	description?:   string
	tags?: [_]: string
}
#AwsMskClusterResource: {
	cluster_name:           string
	kafka_version:          string
	number_of_broker_nodes: number
	enhanced_monitoring?:   string
	tags?: [_]: string
	broker_node_group_info?: [{
		client_subnets: [string, ...]
		ebs_volume_size: number
		instance_type:   string
		security_groups: [string, ...]
		az_distribution?: string
	}, ...]
	client_authentication?: [{
		tls?: [{
			certificate_authority_arns?: [string, ...]
		}, ...]
	}, ...]
	configuration_info?: [{
		arn:      string
		revision: number
	}, ...]
	encryption_info?: [{
		encryption_in_transit?: [{
			client_broker?: string
			in_cluster?:    bool
		}, ...]
	}, ...]
	logging_info?: [{
		broker_logs?: [{
			cloudwatch_logs?: [{
				enabled:    bool
				log_group?: string
			}, ...]
			firehose?: [{
				enabled:          bool
				delivery_stream?: string
			}, ...]
			s3?: [{
				enabled: bool
				bucket?: string
				prefix?: string
			}, ...]
		}, ...]
	}, ...]
	open_monitoring?: [{
		prometheus?: [{
			jmx_exporter?: [{
				enabled_in_broker: bool
			}, ...]
			node_exporter?: [{
				enabled_in_broker: bool
			}, ...]
		}, ...]
	}, ...]
}
#AwsMskConfigurationResource: {
	kafka_versions: [string, ...]
	name:              string
	server_properties: string
	description?:      string
}
#AwsNatGatewayResource: {
	allocation_id: string
	subnet_id:     string
	tags?: [_]: string
}
#AwsNeptuneClusterResource: {
	backup_retention_period?: number
	deletion_protection?:     bool
	enable_cloudwatch_logs_exports?: [string, ...]
	engine?:                              string
	final_snapshot_identifier?:           string
	iam_database_authentication_enabled?: bool
	iam_roles?: [string, ...]
	neptune_cluster_parameter_group_name?: string
	port?:                                 number
	replication_source_identifier?:        string
	skip_final_snapshot?:                  bool
	snapshot_identifier?:                  string
	storage_encrypted?:                    bool
	tags?: [_]: string
	timeouts?: {
		create?: string
		delete?: string
		update?: string
	}
}
#AwsNeptuneClusterInstanceResource: {
	cluster_identifier:            string
	instance_class:                string
	auto_minor_version_upgrade?:   bool
	engine?:                       string
	neptune_parameter_group_name?: string
	port?:                         number
	promotion_tier?:               number
	publicly_accessible?:          bool
	tags?: [_]: string
	timeouts?: {
		create?: string
		delete?: string
		update?: string
	}
}
#AwsNeptuneClusterParameterGroupResource: {
	family:       string
	description?: string
	tags?: [_]: string
	parameter?: [{
		name:          string
		value:         string
		apply_method?: string
	}, ...]
}
#AwsNeptuneClusterSnapshotResource: {
	db_cluster_identifier:          string
	db_cluster_snapshot_identifier: string
	timeouts?: create?: string
}
#AwsNeptuneEventSubscriptionResource: {
	sns_topic_arn: string
	enabled?:      bool
	event_categories?: [string, ...]
	source_ids?: [string, ...]
	source_type?: string
	tags?: [_]: string
	timeouts?: {
		create?: string
		delete?: string
		update?: string
	}
}
#AwsNeptuneParameterGroupResource: {
	family:       string
	name:         string
	description?: string
	tags?: [_]: string
	parameter?: [{
		name:          string
		value:         string
		apply_method?: string
	}, ...]
}
#AwsNeptuneSubnetGroupResource: {
	subnet_ids: [string, ...]
	description?: string
	tags?: [_]: string
}
#AwsNetworkAclResource: {
	vpc_id:     string
	subnet_id?: string
	tags?: [_]: string
}
#AwsNetworkAclRuleResource: {
	network_acl_id:   string
	protocol:         string
	rule_action:      string
	rule_number:      number
	cidr_block?:      string
	egress?:          bool
	from_port?:       number
	icmp_code?:       string
	icmp_type?:       string
	ipv6_cidr_block?: string
	to_port?:         number
}
#AwsNetworkInterfaceResource: {
	subnet_id:          string
	description?:       string
	source_dest_check?: bool
	tags?: [_]: string
	attachment?: [{
		device_index: number
		instance:     string
	}, ...]
}
#AwsNetworkInterfaceAttachmentResource: {
	device_index:         number
	instance_id:          string
	network_interface_id: string
}
#AwsNetworkInterfaceSgAttachmentResource: {
	network_interface_id: string
	security_group_id:    string
}
#AwsOpsworksApplicationResource: {
	name:                       string
	stack_id:                   string
	type:                       string
	auto_bundle_on_deploy?:     string
	aws_flow_ruby_settings?:    string
	data_source_arn?:           string
	data_source_database_name?: string
	data_source_type?:          string
	description?:               string
	document_root?:             string
	domains?: [string, ...]
	enable_ssl?: bool
	rails_env?:  string
	app_source?: [{
		type:      string
		password?: string
		revision?: string
		ssh_key?:  string
		url?:      string
		username?: string
	}, ...]
	environment?: [{
		key:     string
		value:   string
		secure?: bool
	}, ...]
	ssl_configuration?: [{
		certificate: string
		private_key: string
		chain?:      string
	}, ...]
}
#AwsOpsworksCustomLayerResource: {
	name:                     string
	short_name:               string
	stack_id:                 string
	auto_assign_elastic_ips?: bool
	auto_assign_public_ips?:  bool
	auto_healing?:            bool
	custom_configure_recipes?: [string, ...]
	custom_deploy_recipes?: [string, ...]
	custom_instance_profile_arn?: string
	custom_json?:                 string
	custom_security_group_ids?: [string, ...]
	custom_setup_recipes?: [string, ...]
	custom_shutdown_recipes?: [string, ...]
	custom_undeploy_recipes?: [string, ...]
	drain_elb_on_shutdown?:     bool
	elastic_load_balancer?:     string
	install_updates_on_boot?:   bool
	instance_shutdown_timeout?: number
	system_packages?: [string, ...]
	tags?: [_]: string
	use_ebs_optimized_instances?: bool
	ebs_volume?: [{
		mount_point:     string
		number_of_disks: number
		size:            number
		encrypted?:      bool
		iops?:           number
		raid_level?:     string
		type?:           string
	}, ...]
}
#AwsOpsworksGangliaLayerResource: {
	password:                 string
	stack_id:                 string
	auto_assign_elastic_ips?: bool
	auto_assign_public_ips?:  bool
	auto_healing?:            bool
	custom_configure_recipes?: [string, ...]
	custom_deploy_recipes?: [string, ...]
	custom_instance_profile_arn?: string
	custom_json?:                 string
	custom_security_group_ids?: [string, ...]
	custom_setup_recipes?: [string, ...]
	custom_shutdown_recipes?: [string, ...]
	custom_undeploy_recipes?: [string, ...]
	drain_elb_on_shutdown?:     bool
	elastic_load_balancer?:     string
	install_updates_on_boot?:   bool
	instance_shutdown_timeout?: number
	name?:                      string
	system_packages?: [string, ...]
	tags?: [_]: string
	url?:                         string
	use_ebs_optimized_instances?: bool
	username?:                    string
	ebs_volume?: [{
		mount_point:     string
		number_of_disks: number
		size:            number
		encrypted?:      bool
		iops?:           number
		raid_level?:     string
		type?:           string
	}, ...]
}
#AwsOpsworksHaproxyLayerResource: {
	stack_id:                 string
	stats_password:           string
	auto_assign_elastic_ips?: bool
	auto_assign_public_ips?:  bool
	auto_healing?:            bool
	custom_configure_recipes?: [string, ...]
	custom_deploy_recipes?: [string, ...]
	custom_instance_profile_arn?: string
	custom_json?:                 string
	custom_security_group_ids?: [string, ...]
	custom_setup_recipes?: [string, ...]
	custom_shutdown_recipes?: [string, ...]
	custom_undeploy_recipes?: [string, ...]
	drain_elb_on_shutdown?:     bool
	elastic_load_balancer?:     string
	healthcheck_method?:        string
	healthcheck_url?:           string
	install_updates_on_boot?:   bool
	instance_shutdown_timeout?: number
	name?:                      string
	stats_enabled?:             bool
	stats_url?:                 string
	stats_user?:                string
	system_packages?: [string, ...]
	tags?: [_]: string
	use_ebs_optimized_instances?: bool
	ebs_volume?: [{
		mount_point:     string
		number_of_disks: number
		size:            number
		encrypted?:      bool
		iops?:           number
		raid_level?:     string
		type?:           string
	}, ...]
}
#AwsOpsworksInstanceResource: {
	layer_ids: [string, ...]
	stack_id:                 string
	agent_version?:           string
	architecture?:            string
	auto_scaling_type?:       string
	delete_ebs?:              bool
	delete_eip?:              bool
	ebs_optimized?:           bool
	install_updates_on_boot?: bool
	instance_type?:           string
	state?:                   string
	ebs_block_device?: [{
		device_name:            string
		delete_on_termination?: bool
	}, ...]
	ephemeral_block_device?: [{
		device_name:  string
		virtual_name: string
	}, ...]
	root_block_device?: [{
		delete_on_termination?: bool
	}, ...]
	timeouts?: {
		create?: string
		delete?: string
		update?: string
	}
}
#AwsOpsworksJavaAppLayerResource: {
	stack_id:                 string
	app_server?:              string
	app_server_version?:      string
	auto_assign_elastic_ips?: bool
	auto_assign_public_ips?:  bool
	auto_healing?:            bool
	custom_configure_recipes?: [string, ...]
	custom_deploy_recipes?: [string, ...]
	custom_instance_profile_arn?: string
	custom_json?:                 string
	custom_security_group_ids?: [string, ...]
	custom_setup_recipes?: [string, ...]
	custom_shutdown_recipes?: [string, ...]
	custom_undeploy_recipes?: [string, ...]
	drain_elb_on_shutdown?:     bool
	elastic_load_balancer?:     string
	install_updates_on_boot?:   bool
	instance_shutdown_timeout?: number
	jvm_options?:               string
	jvm_type?:                  string
	jvm_version?:               string
	name?:                      string
	system_packages?: [string, ...]
	tags?: [_]: string
	use_ebs_optimized_instances?: bool
	ebs_volume?: [{
		mount_point:     string
		number_of_disks: number
		size:            number
		encrypted?:      bool
		iops?:           number
		raid_level?:     string
		type?:           string
	}, ...]
}
#AwsOpsworksMemcachedLayerResource: {
	stack_id:                 string
	allocated_memory?:        number
	auto_assign_elastic_ips?: bool
	auto_assign_public_ips?:  bool
	auto_healing?:            bool
	custom_configure_recipes?: [string, ...]
	custom_deploy_recipes?: [string, ...]
	custom_instance_profile_arn?: string
	custom_json?:                 string
	custom_security_group_ids?: [string, ...]
	custom_setup_recipes?: [string, ...]
	custom_shutdown_recipes?: [string, ...]
	custom_undeploy_recipes?: [string, ...]
	drain_elb_on_shutdown?:     bool
	elastic_load_balancer?:     string
	install_updates_on_boot?:   bool
	instance_shutdown_timeout?: number
	name?:                      string
	system_packages?: [string, ...]
	tags?: [_]: string
	use_ebs_optimized_instances?: bool
	ebs_volume?: [{
		mount_point:     string
		number_of_disks: number
		size:            number
		encrypted?:      bool
		iops?:           number
		raid_level?:     string
		type?:           string
	}, ...]
}
#AwsOpsworksMysqlLayerResource: {
	stack_id:                 string
	auto_assign_elastic_ips?: bool
	auto_assign_public_ips?:  bool
	auto_healing?:            bool
	custom_configure_recipes?: [string, ...]
	custom_deploy_recipes?: [string, ...]
	custom_instance_profile_arn?: string
	custom_json?:                 string
	custom_security_group_ids?: [string, ...]
	custom_setup_recipes?: [string, ...]
	custom_shutdown_recipes?: [string, ...]
	custom_undeploy_recipes?: [string, ...]
	drain_elb_on_shutdown?:          bool
	elastic_load_balancer?:          string
	install_updates_on_boot?:        bool
	instance_shutdown_timeout?:      number
	name?:                           string
	root_password?:                  string
	root_password_on_all_instances?: bool
	system_packages?: [string, ...]
	tags?: [_]: string
	use_ebs_optimized_instances?: bool
	ebs_volume?: [{
		mount_point:     string
		number_of_disks: number
		size:            number
		encrypted?:      bool
		iops?:           number
		raid_level?:     string
		type?:           string
	}, ...]
}
#AwsOpsworksNodejsAppLayerResource: {
	stack_id:                 string
	auto_assign_elastic_ips?: bool
	auto_assign_public_ips?:  bool
	auto_healing?:            bool
	custom_configure_recipes?: [string, ...]
	custom_deploy_recipes?: [string, ...]
	custom_instance_profile_arn?: string
	custom_json?:                 string
	custom_security_group_ids?: [string, ...]
	custom_setup_recipes?: [string, ...]
	custom_shutdown_recipes?: [string, ...]
	custom_undeploy_recipes?: [string, ...]
	drain_elb_on_shutdown?:     bool
	elastic_load_balancer?:     string
	install_updates_on_boot?:   bool
	instance_shutdown_timeout?: number
	name?:                      string
	nodejs_version?:            string
	system_packages?: [string, ...]
	tags?: [_]: string
	use_ebs_optimized_instances?: bool
	ebs_volume?: [{
		mount_point:     string
		number_of_disks: number
		size:            number
		encrypted?:      bool
		iops?:           number
		raid_level?:     string
		type?:           string
	}, ...]
}
#AwsOpsworksPermissionResource: user_arn: string
#AwsOpsworksPhpAppLayerResource: {
	stack_id:                 string
	auto_assign_elastic_ips?: bool
	auto_assign_public_ips?:  bool
	auto_healing?:            bool
	custom_configure_recipes?: [string, ...]
	custom_deploy_recipes?: [string, ...]
	custom_instance_profile_arn?: string
	custom_json?:                 string
	custom_security_group_ids?: [string, ...]
	custom_setup_recipes?: [string, ...]
	custom_shutdown_recipes?: [string, ...]
	custom_undeploy_recipes?: [string, ...]
	drain_elb_on_shutdown?:     bool
	elastic_load_balancer?:     string
	install_updates_on_boot?:   bool
	instance_shutdown_timeout?: number
	name?:                      string
	system_packages?: [string, ...]
	tags?: [_]: string
	use_ebs_optimized_instances?: bool
	ebs_volume?: [{
		mount_point:     string
		number_of_disks: number
		size:            number
		encrypted?:      bool
		iops?:           number
		raid_level?:     string
		type?:           string
	}, ...]
}
#AwsOpsworksRailsAppLayerResource: {
	stack_id:                 string
	app_server?:              string
	auto_assign_elastic_ips?: bool
	auto_assign_public_ips?:  bool
	auto_healing?:            bool
	bundler_version?:         string
	custom_configure_recipes?: [string, ...]
	custom_deploy_recipes?: [string, ...]
	custom_instance_profile_arn?: string
	custom_json?:                 string
	custom_security_group_ids?: [string, ...]
	custom_setup_recipes?: [string, ...]
	custom_shutdown_recipes?: [string, ...]
	custom_undeploy_recipes?: [string, ...]
	drain_elb_on_shutdown?:     bool
	elastic_load_balancer?:     string
	install_updates_on_boot?:   bool
	instance_shutdown_timeout?: number
	manage_bundler?:            bool
	name?:                      string
	passenger_version?:         string
	ruby_version?:              string
	rubygems_version?:          string
	system_packages?: [string, ...]
	tags?: [_]: string
	use_ebs_optimized_instances?: bool
	ebs_volume?: [{
		mount_point:     string
		number_of_disks: number
		size:            number
		encrypted?:      bool
		iops?:           number
		raid_level?:     string
		type?:           string
	}, ...]
}
#AwsOpsworksRdsDbInstanceResource: {
	db_password:         string
	db_user:             string
	rds_db_instance_arn: string
	stack_id:            string
}
#AwsOpsworksStackResource: {
	default_instance_profile_arn:   string
	name:                           string
	region:                         string
	service_role_arn:               string
	berkshelf_version?:             string
	color?:                         string
	configuration_manager_name?:    string
	configuration_manager_version?: string
	custom_json?:                   string
	default_os?:                    string
	default_root_device_type?:      string
	default_ssh_key_name?:          string
	hostname_theme?:                string
	manage_berkshelf?:              bool
	tags?: [_]: string
	use_custom_cookbooks?:         bool
	use_opsworks_security_groups?: bool
	custom_cookbooks_source?: [{
		type:      string
		url:       string
		password?: string
		revision?: string
		ssh_key?:  string
		username?: string
	}, ...]
}
#AwsOpsworksStaticWebLayerResource: {
	stack_id:                 string
	auto_assign_elastic_ips?: bool
	auto_assign_public_ips?:  bool
	auto_healing?:            bool
	custom_configure_recipes?: [string, ...]
	custom_deploy_recipes?: [string, ...]
	custom_instance_profile_arn?: string
	custom_json?:                 string
	custom_security_group_ids?: [string, ...]
	custom_setup_recipes?: [string, ...]
	custom_shutdown_recipes?: [string, ...]
	custom_undeploy_recipes?: [string, ...]
	drain_elb_on_shutdown?:     bool
	elastic_load_balancer?:     string
	install_updates_on_boot?:   bool
	instance_shutdown_timeout?: number
	name?:                      string
	system_packages?: [string, ...]
	tags?: [_]: string
	use_ebs_optimized_instances?: bool
	ebs_volume?: [{
		mount_point:     string
		number_of_disks: number
		size:            number
		encrypted?:      bool
		iops?:           number
		raid_level?:     string
		type?:           string
	}, ...]
}
#AwsOpsworksUserProfileResource: {
	ssh_username:           string
	user_arn:               string
	allow_self_management?: bool
	ssh_public_key?:        string
}
#AwsOrganizationsAccountResource: {
	email:                       string
	name:                        string
	iam_user_access_to_billing?: string
	role_name?:                  string
	tags?: [_]: string
}
#AwsOrganizationsOrganizationResource: {
	aws_service_access_principals?: [string, ...]
	enabled_policy_types?: [string, ...]
	feature_set?: string
}
#AwsOrganizationsOrganizationalUnitResource: {
	name:      string
	parent_id: string
}
#AwsOrganizationsPolicyResource: {
	content:      string
	name:         string
	description?: string
	type?:        string
}
#AwsOrganizationsPolicyAttachmentResource: {
	policy_id: string
	target_id: string
}
#AwsPinpointAdmChannelResource: {
	application_id: string
	client_id:      string
	client_secret:  string
	enabled?:       bool
}
#AwsPinpointApnsChannelResource: {
	application_id:                 string
	bundle_id?:                     string
	certificate?:                   string
	default_authentication_method?: string
	enabled?:                       bool
	private_key?:                   string
	team_id?:                       string
	token_key?:                     string
	token_key_id?:                  string
}
#AwsPinpointApnsSandboxChannelResource: {
	application_id:                 string
	bundle_id?:                     string
	certificate?:                   string
	default_authentication_method?: string
	enabled?:                       bool
	private_key?:                   string
	team_id?:                       string
	token_key?:                     string
	token_key_id?:                  string
}
#AwsPinpointApnsVoipChannelResource: {
	application_id:                 string
	bundle_id?:                     string
	certificate?:                   string
	default_authentication_method?: string
	enabled?:                       bool
	private_key?:                   string
	team_id?:                       string
	token_key?:                     string
	token_key_id?:                  string
}
#AwsPinpointApnsVoipSandboxChannelResource: {
	application_id:                 string
	bundle_id?:                     string
	certificate?:                   string
	default_authentication_method?: string
	enabled?:                       bool
	private_key?:                   string
	team_id?:                       string
	token_key?:                     string
	token_key_id?:                  string
}
#AwsPinpointAppResource: {
	name_prefix?: string
	tags?: [_]: string
	campaign_hook?: [{
		lambda_function_name?: string
		mode?:                 string
		web_url?:              string
	}, ...]
	limits?: [{
		daily?:               number
		maximum_duration?:    number
		messages_per_second?: number
		total?:               number
	}, ...]
	quiet_time?: [{
		end?:   string
		start?: string
	}, ...]
}
#AwsPinpointBaiduChannelResource: {
	api_key:        string
	application_id: string
	secret_key:     string
	enabled?:       bool
}
#AwsPinpointEmailChannelResource: {
	application_id: string
	from_address:   string
	identity:       string
	role_arn:       string
	enabled?:       bool
}
#AwsPinpointEventStreamResource: {
	application_id:         string
	destination_stream_arn: string
	role_arn:               string
}
#AwsPinpointGcmChannelResource: {
	api_key:        string
	application_id: string
	enabled?:       bool
}
#AwsPinpointSmsChannelResource: {
	application_id: string
	enabled?:       bool
	sender_id?:     string
	short_code?:    string
}
#AwsPlacementGroupResource: {
	name:     string
	strategy: string
	tags?: [_]: string
}
#AwsProxyProtocolPolicyResource: {
	instance_ports: [string, ...]
	load_balancer: string
}
#AwsQldbLedgerResource: {
	deletion_protection?: bool
	tags?: [_]: string
}
#AwsQuicksightGroupResource: {
	group_name:   string
	description?: string
	namespace?:   string
}
#AwsQuicksightUserResource: {
	email:         string
	identity_type: string
	user_role:     string
	iam_arn?:      string
	namespace?:    string
	session_name?: string
	user_name?:    string
}
#AwsRamPrincipalAssociationResource: {
	principal:          string
	resource_share_arn: string
}
#AwsRamResourceAssociationResource: {
	resource_arn:       string
	resource_share_arn: string
}
#AwsRamResourceShareResource: {
	name:                       string
	allow_external_principals?: bool
	tags?: [_]: string
	timeouts?: {
		create?: string
		delete?: string
	}
}
#AwsRamResourceShareAccepterResource: {
	share_arn: string
	timeouts?: {
		create?: string
		delete?: string
	}
}
#AwsRdsClusterResource: {
	backtrack_window?:        number
	backup_retention_period?: number
	copy_tags_to_snapshot?:   bool
	deletion_protection?:     bool
	enable_http_endpoint?:    bool
	enabled_cloudwatch_logs_exports?: [string, ...]
	engine?:                              string
	engine_mode?:                         string
	final_snapshot_identifier?:           string
	global_cluster_identifier?:           string
	iam_database_authentication_enabled?: bool
	iam_roles?: [string, ...]
	master_password?:               string
	replication_source_identifier?: string
	skip_final_snapshot?:           bool
	snapshot_identifier?:           string
	source_region?:                 string
	storage_encrypted?:             bool
	tags?: [_]: string
	s3_import?: [{
		bucket_name:           string
		ingestion_role:        string
		source_engine:         string
		source_engine_version: string
		bucket_prefix?:        string
	}, ...]
	scaling_configuration?: [{
		auto_pause?:               bool
		max_capacity?:             number
		min_capacity?:             number
		seconds_until_auto_pause?: number
		timeout_action?:           string
	}, ...]
	timeouts?: {
		create?: string
		delete?: string
		update?: string
	}
}
#AwsRdsClusterEndpointResource: {
	cluster_endpoint_identifier: string
	cluster_identifier:          string
	custom_endpoint_type:        string
	excluded_members?: [string, ...]
	static_members?: [string, ...]
	tags?: [_]: string
}
#AwsRdsClusterInstanceResource: {
	cluster_identifier:          string
	instance_class:              string
	auto_minor_version_upgrade?: bool
	copy_tags_to_snapshot?:      bool
	engine?:                     string
	monitoring_interval?:        number
	promotion_tier?:             number
	publicly_accessible?:        bool
	tags?: [_]: string
	timeouts?: {
		create?: string
		delete?: string
		update?: string
	}
}
#AwsRdsClusterParameterGroupResource: {
	family:       string
	description?: string
	tags?: [_]: string
	parameter?: [{
		name:          string
		value:         string
		apply_method?: string
	}, ...]
}
#AwsRdsGlobalClusterResource: {
	global_cluster_identifier: string
	database_name?:            string
	deletion_protection?:      bool
	engine?:                   string
	storage_encrypted?:        bool
}
#AwsRedshiftClusterResource: {
	cluster_identifier:                   string
	node_type:                            string
	allow_version_upgrade?:               bool
	automated_snapshot_retention_period?: number
	cluster_version?:                     string
	elastic_ip?:                          string
	encrypted?:                           bool
	final_snapshot_identifier?:           string
	master_password?:                     string
	master_username?:                     string
	number_of_nodes?:                     number
	owner_account?:                       string
	port?:                                number
	publicly_accessible?:                 bool
	skip_final_snapshot?:                 bool
	snapshot_cluster_identifier?:         string
	snapshot_identifier?:                 string
	tags?: [_]: string
	logging?: [{
		enable: bool
	}, ...]
	snapshot_copy?: [{
		destination_region: string
		grant_name?:        string
		retention_period?:  number
	}, ...]
	timeouts?: {
		create?: string
		delete?: string
		update?: string
	}
}
#AwsRedshiftEventSubscriptionResource: {
	name:          string
	sns_topic_arn: string
	enabled?:      bool
	event_categories?: [string, ...]
	severity?: string
	source_ids?: [string, ...]
	source_type?: string
	tags?: [_]: string
	timeouts?: {
		create?: string
		delete?: string
		update?: string
	}
}
#AwsRedshiftParameterGroupResource: {
	family:       string
	name:         string
	description?: string
	tags?: [_]: string
	parameter?: [{
		name:  string
		value: string
	}, ...]
}
#AwsRedshiftSecurityGroupResource: {
	name:         string
	description?: string
	ingress?: [{
		cidr?: string
	}, ...]
}
#AwsRedshiftSnapshotCopyGrantResource: {
	snapshot_copy_grant_name: string
	tags?: [_]: string
}
#AwsRedshiftSnapshotScheduleResource: {
	definitions: [string, ...]
	description?:   string
	force_destroy?: bool
	tags?: [_]: string
}
#AwsRedshiftSnapshotScheduleAssociationResource: {
	cluster_identifier:  string
	schedule_identifier: string
}
#AwsRedshiftSubnetGroupResource: {
	name: string
	subnet_ids: [string, ...]
	description?: string
	tags?: [_]: string
}
#AwsResourcegroupsGroupResource: {
	name:         string
	description?: string
	tags?: [_]: string
	resource_query?: [{
		query: string
		type?: string
	}, ...]
}
#AwsRouteResource: {
	route_table_id:               string
	destination_cidr_block?:      string
	destination_ipv6_cidr_block?: string
	transit_gateway_id?:          string
	vpc_peering_connection_id?:   string
	timeouts?: {
		create?: string
		delete?: string
	}
}
#AwsRoute53DelegationSetResource: reference_name?: string
#AwsRoute53HealthCheckResource: {
	type:                    string
	child_health_threshold?: number
	child_healthchecks?: [string, ...]
	cloudwatch_alarm_name?:           string
	cloudwatch_alarm_region?:         string
	failure_threshold?:               number
	fqdn?:                            string
	insufficient_data_health_status?: string
	invert_healthcheck?:              bool
	ip_address?:                      string
	measure_latency?:                 bool
	port?:                            number
	reference_name?:                  string
	regions?: [string, ...]
	request_interval?: number
	resource_path?:    string
	search_string?:    string
	tags?: [_]: string
}
#AwsRoute53QueryLogResource: {
	cloudwatch_log_group_arn: string
	zone_id:                  string
}
#AwsRoute53RecordResource: {
	name:                              string
	type:                              string
	zone_id:                           string
	health_check_id?:                  string
	multivalue_answer_routing_policy?: bool
	records?: [string, ...]
	set_identifier?: string
	ttl?:            number
	alias?: [{
		evaluate_target_health: bool
		name:                   string
		zone_id:                string
	}, ...]
	failover_routing_policy?: [{
		type: string
	}, ...]
	geolocation_routing_policy?: [{
		continent?:   string
		country?:     string
		subdivision?: string
	}, ...]
	latency_routing_policy?: [{
		region: string
	}, ...]
	weighted_routing_policy?: [{
		weight: number
	}, ...]
}
#AwsRoute53ResolverEndpointResource: {
	direction: string
	security_group_ids: [string, ...]
	name?: string
	tags?: [_]: string
	ip_address?: [{
		subnet_id: string
	}, ...]
	timeouts?: {
		create?: string
		delete?: string
		update?: string
	}
}
#AwsRoute53ResolverRuleResource: {
	domain_name:           string
	rule_type:             string
	name?:                 string
	resolver_endpoint_id?: string
	tags?: [_]: string
	target_ip?: [{
		ip:    string
		port?: number
	}, ...]
	timeouts?: {
		create?: string
		delete?: string
		update?: string
	}
}
#AwsRoute53ResolverRuleAssociationResource: {
	resolver_rule_id: string
	vpc_id:           string
	name?:            string
	timeouts?: {
		create?: string
		delete?: string
	}
}
#AwsRoute53ZoneResource: {
	name:               string
	comment?:           string
	delegation_set_id?: string
	force_destroy?:     bool
	tags?: [_]: string
	vpc?: [{
		vpc_id: string
	}, ...]
}
#AwsRoute53ZoneAssociationResource: {
	vpc_id:  string
	zone_id: string
}
#AwsRouteTableResource: {
	vpc_id: string
	tags?: [_]: string
}
#AwsRouteTableAssociationResource: {
	route_table_id: string
	gateway_id?:    string
	subnet_id?:     string
}
#AwsS3AccessPointResource: {
	bucket:  string
	name:    string
	policy?: string
	public_access_block_configuration?: [{
		block_public_acls?:       bool
		block_public_policy?:     bool
		ignore_public_acls?:      bool
		restrict_public_buckets?: bool
	}, ...]
	vpc_configuration?: [{
		vpc_id: string
	}, ...]
}
#AwsS3AccountPublicAccessBlockResource: {
	block_public_acls?:       bool
	block_public_policy?:     bool
	ignore_public_acls?:      bool
	restrict_public_buckets?: bool
}
#AwsS3BucketResource: {
	acl?:           string
	bucket_prefix?: string
	force_destroy?: bool
	policy?:        string
	tags?: [_]: string
	cors_rule?: [{
		allowed_methods: [string, ...]
		allowed_origins: [string, ...]
		allowed_headers?: [string, ...]
		expose_headers?: [string, ...]
		max_age_seconds?: number
	}, ...]
	grant?: [{
		permissions: [string, ...]
		type: string
		id?:  string
		uri?: string
	}, ...]
	lifecycle_rule?: [{
		enabled:                                 bool
		abort_incomplete_multipart_upload_days?: number
		prefix?:                                 string
		tags?: [_]: string
		expiration?: [{
			date?:                         string
			days?:                         number
			expired_object_delete_marker?: bool
		}, ...]
		noncurrent_version_expiration?: [{
			days?: number
		}, ...]
		noncurrent_version_transition?: [{
			storage_class: string
			days?:         number
		}, ...]
		transition?: [{
			storage_class: string
			date?:         string
			days?:         number
		}, ...]
	}, ...]
	logging?: [{
		target_bucket:  string
		target_prefix?: string
	}, ...]
	object_lock_configuration?: [{
		object_lock_enabled: string
		rule?: [{
			default_retention?: [{
				mode:   string
				days?:  number
				years?: number
			}, ...]
		}, ...]
	}, ...]
	replication_configuration?: [{
		role: string
		rules?: [{
			status:    string
			id?:       string
			prefix?:   string
			priority?: number
			destination?: [{
				bucket:              string
				account_id?:         string
				replica_kms_key_id?: string
				storage_class?:      string
				access_control_translation?: [{
					owner: string
				}, ...]
			}, ...]
			filter?: [{
				prefix?: string
				tags?: [_]: string
			}, ...]
			source_selection_criteria?: [{
				sse_kms_encrypted_objects?: [{
					enabled: bool
				}, ...]
			}, ...]
		}, ...]
	}, ...]
	server_side_encryption_configuration?: [{
		rule?: [{
			apply_server_side_encryption_by_default?: [{
				sse_algorithm:      string
				kms_master_key_id?: string
			}, ...]
		}, ...]
	}, ...]
	versioning?: [{
		enabled?:    bool
		mfa_delete?: bool
	}, ...]
	website?: [{
		error_document?:           string
		index_document?:           string
		redirect_all_requests_to?: string
		routing_rules?:            string
	}, ...]
}
#AwsS3BucketAnalyticsConfigurationResource: {
	bucket: string
	name:   string
	filter?: [{
		prefix?: string
		tags?: [_]: string
	}, ...]
	storage_class_analysis?: [{
		data_export?: [{
			output_schema_version?: string
			destination?: [{
				s3_bucket_destination?: [{
					bucket_arn:         string
					bucket_account_id?: string
					format?:            string
					prefix?:            string
				}, ...]
			}, ...]
		}, ...]
	}, ...]
}
#AwsS3BucketInventoryResource: {
	bucket:                   string
	included_object_versions: string
	name:                     string
	enabled?:                 bool
	optional_fields?: [string, ...]
	destination?: [{
		bucket?: [{
			bucket_arn:  string
			format:      string
			account_id?: string
			prefix?:     string
			encryption?: [{
				sse_kms?: [{
					key_id: string
				}, ...]
				sse_s3?: [{}, ...]
			}, ...]
		}, ...]
	}, ...]
	filter?: [{
		prefix?: string
	}, ...]
	schedule?: [{
		frequency: string
	}, ...]
}
#AwsS3BucketMetricResource: {
	bucket: string
	name:   string
	filter?: [{
		prefix?: string
		tags?: [_]: string
	}, ...]
}
#AwsS3BucketNotificationResource: {
	bucket: string
	lambda_function?: [{
		events: [string, ...]
		filter_prefix?:       string
		filter_suffix?:       string
		lambda_function_arn?: string
	}, ...]
	queue?: [{
		events: [string, ...]
		queue_arn:      string
		filter_prefix?: string
		filter_suffix?: string
	}, ...]
	topic?: [{
		events: [string, ...]
		topic_arn:      string
		filter_prefix?: string
		filter_suffix?: string
	}, ...]
}
#AwsS3BucketObjectResource: {
	bucket:               string
	key:                  string
	acl?:                 string
	cache_control?:       string
	content?:             string
	content_base64?:      string
	content_disposition?: string
	content_encoding?:    string
	content_language?:    string
	force_destroy?:       bool
	kms_key_id?:          string
	metadata?: [_]: string
	object_lock_legal_hold_status?: string
	object_lock_mode?:              string
	object_lock_retain_until_date?: string
	source?:                        string
	tags?: [_]: string
	website_redirect?: string
}
#AwsS3BucketPolicyResource: {
	bucket: string
	policy: string
}
#AwsS3BucketPublicAccessBlockResource: {
	bucket:                   string
	block_public_acls?:       bool
	block_public_policy?:     bool
	ignore_public_acls?:      bool
	restrict_public_buckets?: bool
}
#AwsSagemakerEndpointResource: {
	endpoint_config_name: string
	tags?: [_]: string
}
#AwsSagemakerEndpointConfigurationResource: {
	kms_key_arn?: string
	tags?: [_]: string
	production_variants?: [{
		initial_instance_count:  number
		instance_type:           string
		model_name:              string
		accelerator_type?:       string
		initial_variant_weight?: number
	}, ...]
}
#AwsSagemakerModelResource: {
	execution_role_arn:        string
	enable_network_isolation?: bool
	tags?: [_]: string
	container?: [{
		image:               string
		container_hostname?: string
		environment?: [_]: string
		model_data_url?: string
	}, ...]
	primary_container?: [{
		image:               string
		container_hostname?: string
		environment?: [_]: string
		model_data_url?: string
	}, ...]
	vpc_config?: [{
		security_group_ids: [string, ...]
		subnets: [string, ...]
	}, ...]
}
#AwsSagemakerNotebookInstanceResource: {
	instance_type:           string
	name:                    string
	role_arn:                string
	direct_internet_access?: string
	kms_key_id?:             string
	lifecycle_config_name?:  string
	subnet_id?:              string
	tags?: [_]: string
}
#AwsSagemakerNotebookInstanceLifecycleConfigurationResource: {
	name?:      string
	on_create?: string
	on_start?:  string
}
#AwsSecretsmanagerSecretResource: {
	description?:             string
	kms_key_id?:              string
	policy?:                  string
	recovery_window_in_days?: number
	rotation_lambda_arn?:     string
	tags?: [_]: string
	rotation_rules?: [{
		automatically_after_days: number
	}, ...]
}
#AwsSecretsmanagerSecretVersionResource: {
	secret_id:      string
	secret_binary?: string
	secret_string?: string
}
#AwsSecurityGroupResource: {
	description?:            string
	name_prefix?:            string
	revoke_rules_on_delete?: bool
	tags?: [_]: string
	timeouts?: {
		create?: string
		delete?: string
	}
}
#AwsSecurityGroupRuleResource: {
	from_port:         number
	protocol:          string
	security_group_id: string
	to_port:           number
	type:              string
	cidr_blocks?: [string, ...]
	description?: string
	ipv6_cidr_blocks?: [string, ...]
	prefix_list_ids?: [string, ...]
	self?: bool
}
#AwsSecurityhubAccountResource: {}
#AwsSecurityhubMemberResource: {
	account_id: string
	email:      string
	invite?:    bool
}
#AwsSecurityhubProductSubscriptionResource: product_arn:     string
#AwsSecurityhubStandardsSubscriptionResource: standards_arn: string
#AwsServiceDiscoveryHttpNamespaceResource: {
	name:         string
	description?: string
}
#AwsServiceDiscoveryPrivateDnsNamespaceResource: {
	name:         string
	vpc:          string
	description?: string
}
#AwsServiceDiscoveryPublicDnsNamespaceResource: {
	name:         string
	description?: string
}
#AwsServiceDiscoveryServiceResource: {
	name:         string
	description?: string
	dns_config?: [{
		namespace_id:    string
		routing_policy?: string
		dns_records?: [{
			ttl:  number
			type: string
		}, ...]
	}, ...]
	health_check_config?: [{
		failure_threshold?: number
		resource_path?:     string
		type?:              string
	}, ...]
	health_check_custom_config?: [{
		failure_threshold?: number
	}, ...]
}
#AwsServicecatalogPortfolioResource: {
	name:           string
	provider_name?: string
	tags?: [_]: string
	timeouts?: {
		create?: string
		delete?: string
		update?: string
	}
}
#AwsServicequotasServiceQuotaResource: {
	quota_code:   string
	service_code: string
	value:        number
}
#AwsSesActiveReceiptRuleSetResource: rule_set_name: string
#AwsSesConfigurationSetResource: name:              string
#AwsSesDomainDkimResource: domain:                  string
#AwsSesDomainIdentityResource: domain:              string
#AwsSesDomainIdentityVerificationResource: {
	domain: string
	timeouts?: create?: string
}
#AwsSesDomainMailFromResource: {
	domain:                  string
	mail_from_domain:        string
	behavior_on_mx_failure?: string
}
#AwsSesEmailIdentityResource: email: string
#AwsSesEventDestinationResource: {
	configuration_set_name: string
	matching_types: [string, ...]
	name:     string
	enabled?: bool
	cloudwatch_destination?: [{
		default_value:  string
		dimension_name: string
		value_source:   string
	}, ...]
	kinesis_destination?: [{
		role_arn:   string
		stream_arn: string
	}, ...]
	sns_destination?: [{
		topic_arn: string
	}, ...]
}
#AwsSesIdentityNotificationTopicResource: {
	identity:                  string
	notification_type:         string
	include_original_headers?: bool
	topic_arn?:                string
}
#AwsSesIdentityPolicyResource: {
	identity: string
	name:     string
	policy:   string
}
#AwsSesReceiptFilterResource: {
	cidr:   string
	name:   string
	policy: string
}
#AwsSesReceiptRuleResource: {
	name:          string
	rule_set_name: string
	after?:        string
	recipients?: [string, ...]
	add_header_action?: [{
		header_name:  string
		header_value: string
		position:     number
	}, ...]
	bounce_action?: [{
		message:         string
		position:        number
		sender:          string
		smtp_reply_code: string
		status_code?:    string
		topic_arn?:      string
	}, ...]
	lambda_action?: [{
		function_arn: string
		position:     number
		topic_arn?:   string
	}, ...]
	s3_action?: [{
		bucket_name:        string
		position:           number
		kms_key_arn?:       string
		object_key_prefix?: string
		topic_arn?:         string
	}, ...]
	sns_action?: [{
		position:  number
		topic_arn: string
	}, ...]
	stop_action?: [{
		position:   number
		scope:      string
		topic_arn?: string
	}, ...]
	workmail_action?: [{
		organization_arn: string
		position:         number
		topic_arn?:       string
	}, ...]
}
#AwsSesReceiptRuleSetResource: rule_set_name: string
#AwsSesTemplateResource: {
	name:     string
	html?:    string
	subject?: string
	text?:    string
}
#AwsSfnActivityResource: {
	name: string
	tags?: [_]: string
}
#AwsSfnStateMachineResource: {
	definition: string
	name:       string
	role_arn:   string
	tags?: [_]: string
}
#AwsShieldProtectionResource: {
	name:         string
	resource_arn: string
}
#AwsSimpledbDomainResource: name: string
#AwsSnapshotCreateVolumePermissionResource: {
	account_id:  string
	snapshot_id: string
}
#AwsSnsPlatformApplicationResource: {
	name:                              string
	platform:                          string
	platform_credential:               string
	event_delivery_failure_topic_arn?: string
	event_endpoint_created_topic_arn?: string
	event_endpoint_deleted_topic_arn?: string
	event_endpoint_updated_topic_arn?: string
	failure_feedback_role_arn?:        string
	platform_principal?:               string
	success_feedback_role_arn?:        string
	success_feedback_sample_rate?:     string
}
#AwsSnsSmsPreferencesResource: {
	default_sender_id?:                     string
	default_sms_type?:                      string
	delivery_status_iam_role_arn?:          string
	delivery_status_success_sampling_rate?: string
	monthly_spend_limit?:                   string
	usage_report_s3_bucket?:                string
}
#AwsSnsTopicResource: {
	application_failure_feedback_role_arn?:    string
	application_success_feedback_role_arn?:    string
	application_success_feedback_sample_rate?: number
	delivery_policy?:                          string
	display_name?:                             string
	http_failure_feedback_role_arn?:           string
	http_success_feedback_role_arn?:           string
	http_success_feedback_sample_rate?:        number
	kms_master_key_id?:                        string
	lambda_failure_feedback_role_arn?:         string
	lambda_success_feedback_role_arn?:         string
	lambda_success_feedback_sample_rate?:      number
	name_prefix?:                              string
	sqs_failure_feedback_role_arn?:            string
	sqs_success_feedback_role_arn?:            string
	sqs_success_feedback_sample_rate?:         number
	tags?: [_]: string
}
#AwsSnsTopicPolicyResource: {
	arn:    string
	policy: string
}
#AwsSnsTopicSubscriptionResource: {
	endpoint:                         string
	protocol:                         string
	topic_arn:                        string
	confirmation_timeout_in_minutes?: number
	delivery_policy?:                 string
	endpoint_auto_confirms?:          bool
	filter_policy?:                   string
	raw_message_delivery?:            bool
}
#AwsSpotDatafeedSubscriptionResource: {
	bucket:  string
	prefix?: string
}
#AwsSpotFleetRequestResource: {
	iam_fleet_role:                      string
	target_capacity:                     number
	allocation_strategy?:                string
	excess_capacity_termination_policy?: string
	fleet_type?:                         string
	instance_interruption_behaviour?:    string
	instance_pools_to_use_count?:        number
	replace_unhealthy_instances?:        bool
	spot_price?:                         string
	tags?: [_]: string
	terminate_instances_with_expiration?: bool
	valid_from?:                          string
	valid_until?:                         string
	wait_for_fulfillment?:                bool
	launch_specification?: [{
		ami:                          string
		instance_type:                string
		associate_public_ip_address?: bool
		ebs_optimized?:               bool
		iam_instance_profile?:        string
		iam_instance_profile_arn?:    string
		monitoring?:                  bool
		placement_tenancy?:           string
		spot_price?:                  string
		tags?: [_]: string
		user_data?:         string
		weighted_capacity?: string
		ebs_block_device?: [{
			device_name:            string
			delete_on_termination?: bool
		}, ...]
		ephemeral_block_device?: [{
			device_name:  string
			virtual_name: string
		}, ...]
		root_block_device?: [{
			delete_on_termination?: bool
		}, ...]
	}, ...]
	launch_template_config?: [{
		launch_template_specification?: [{
			id?:      string
			name?:    string
			version?: string
		}, ...]
		overrides?: [{
			availability_zone?: string
			instance_type?:     string
		}, ...]
	}, ...]
	timeouts?: {
		create?: string
		delete?: string
	}
}
#AwsSpotInstanceRequestResource: {
	ami:                                   string
	instance_type:                         string
	block_duration_minutes?:               number
	disable_api_termination?:              bool
	ebs_optimized?:                        bool
	get_password_data?:                    bool
	hibernation?:                          bool
	iam_instance_profile?:                 string
	instance_initiated_shutdown_behavior?: string
	instance_interruption_behaviour?:      string
	launch_group?:                         string
	monitoring?:                           bool
	source_dest_check?:                    bool
	spot_price?:                           string
	spot_type?:                            string
	tags?: [_]: string
	user_data?:        string
	user_data_base64?: string
	volume_tags?: [_]: string
	wait_for_fulfillment?: bool
	credit_specification?: [{
		cpu_credits?: string
	}, ...]
	ebs_block_device?: [{
		device_name:            string
		delete_on_termination?: bool
	}, ...]
	ephemeral_block_device?: [{
		device_name:   string
		no_device?:    bool
		virtual_name?: string
	}, ...]
	metadata_options?: [{}, ...]
	network_interface?: [{
		device_index:           number
		network_interface_id:   string
		delete_on_termination?: bool
	}, ...]
	root_block_device?: [{
		delete_on_termination?: bool
	}, ...]
	timeouts?: {
		create?: string
		delete?: string
	}
}
#AwsSqsQueueResource: {
	content_based_deduplication?: bool
	delay_seconds?:               number
	fifo_queue?:                  bool
	kms_master_key_id?:           string
	max_message_size?:            number
	message_retention_seconds?:   number
	name_prefix?:                 string
	receive_wait_time_seconds?:   number
	redrive_policy?:              string
	tags?: [_]: string
	visibility_timeout_seconds?: number
}
#AwsSqsQueuePolicyResource: {
	policy:    string
	queue_url: string
}
#AwsSsmActivationResource: {
	iam_role:            string
	description?:        string
	name?:               string
	registration_limit?: number
	tags?: [_]: string
}
#AwsSsmAssociationResource: {
	name:                              string
	association_name?:                 string
	automation_target_parameter_name?: string
	compliance_severity?:              string
	instance_id?:                      string
	max_concurrency?:                  string
	max_errors?:                       string
	schedule_expression?:              string
	output_location?: [{
		s3_bucket_name: string
		s3_key_prefix?: string
	}, ...]
	targets?: [{
		key: string
		values: [string, ...]
	}, ...]
}
#AwsSsmDocumentResource: {
	content:          string
	document_type:    string
	name:             string
	document_format?: string
	permissions?: [_]: string
	tags?: [_]:        string
	target_type?: string
	attachments_source?: [{
		key: string
		values: [string, ...]
		name?: string
	}, ...]
}
#AwsSsmMaintenanceWindowResource: {
	cutoff:                      number
	duration:                    number
	name:                        string
	schedule:                    string
	allow_unassociated_targets?: bool
	description?:                string
	enabled?:                    bool
	end_date?:                   string
	schedule_timezone?:          string
	start_date?:                 string
	tags?: [_]: string
}
#AwsSsmMaintenanceWindowTargetResource: {
	resource_type:      string
	window_id:          string
	description?:       string
	name?:              string
	owner_information?: string
	targets?: [{
		key: string
		values: [string, ...]
	}, ...]
}
#AwsSsmMaintenanceWindowTaskResource: {
	max_concurrency:  string
	max_errors:       string
	service_role_arn: string
	task_arn:         string
	task_type:        string
	window_id:        string
	description?:     string
	name?:            string
	priority?:        number
	logging_info?: [{
		s3_bucket_name:    string
		s3_region:         string
		s3_bucket_prefix?: string
	}, ...]
	targets?: [{
		key: string
		values: [string, ...]
	}, ...]
	task_invocation_parameters?: [{
		automation_parameters?: [{
			document_version?: string
			parameter?: [{
				name: string
				values: [string, ...]
			}, ...]
		}, ...]
		lambda_parameters?: [{
			client_context?: string
			payload?:        string
			qualifier?:      string
		}, ...]
		run_command_parameters?: [{
			comment?:              string
			document_hash?:        string
			document_hash_type?:   string
			output_s3_bucket?:     string
			output_s3_key_prefix?: string
			service_role_arn?:     string
			timeout_seconds?:      number
			notification_config?: [{
				notification_arn?: string
				notification_events?: [string, ...]
				notification_type?: string
			}, ...]
			parameter?: [{
				name: string
				values: [string, ...]
			}, ...]
		}, ...]
		step_functions_parameters?: [{
			input?: string
			name?:  string
		}, ...]
	}, ...]
	task_parameters?: [{
		name: string
		values: [string, ...]
	}, ...]
}
#AwsSsmParameterResource: {
	name:             string
	type:             string
	value:            string
	allowed_pattern?: string
	description?:     string
	overwrite?:       bool
	tags?: [_]: string
	tier?: string
}
#AwsSsmPatchBaselineResource: {
	name: string
	approved_patches?: [string, ...]
	approved_patches_compliance_level?: string
	description?:                       string
	operating_system?:                  string
	rejected_patches?: [string, ...]
	tags?: [_]: string
	approval_rule?: [{
		approve_after_days:   number
		compliance_level?:    string
		enable_non_security?: bool
		patch_filter?: [{
			key: string
			values: [string, ...]
		}, ...]
	}, ...]
	global_filter?: [{
		key: string
		values: [string, ...]
	}, ...]
}
#AwsSsmPatchGroupResource: {
	baseline_id: string
	patch_group: string
}
#AwsSsmResourceDataSyncResource: {
	name: string
	s3_destination?: [{
		bucket_name:  string
		region:       string
		kms_key_arn?: string
		prefix?:      string
		sync_format?: string
	}, ...]
}
#AwsStoragegatewayCacheResource: {
	disk_id:     string
	gateway_arn: string
}
#AwsStoragegatewayCachedIscsiVolumeResource: {
	gateway_arn:          string
	network_interface_id: string
	target_name:          string
	volume_size_in_bytes: number
	snapshot_id?:         string
	source_volume_arn?:   string
	tags?: [_]: string
}
#AwsStoragegatewayGatewayResource: {
	gateway_name:              string
	gateway_timezone:          string
	cloudwatch_log_group_arn?: string
	gateway_type?:             string
	gateway_vpc_endpoint?:     string
	medium_changer_type?:      string
	smb_guest_password?:       string
	tags?: [_]: string
	tape_drive_type?: string
	smb_active_directory_settings?: [{
		domain_name: string
		password:    string
		username:    string
	}, ...]
	timeouts?: create?: string
}
#AwsStoragegatewayNfsFileShareResource: {
	client_list: [string, ...]
	gateway_arn:              string
	location_arn:             string
	role_arn:                 string
	default_storage_class?:   string
	guess_mime_type_enabled?: bool
	kms_encrypted?:           bool
	kms_key_arn?:             string
	object_acl?:              string
	read_only?:               bool
	requester_pays?:          bool
	squash?:                  string
	tags?: [_]: string
	nfs_file_share_defaults?: [{
		directory_mode?: string
		file_mode?:      string
		group_id?:       number
		owner_id?:       number
	}, ...]
	timeouts?: {
		create?: string
		delete?: string
		update?: string
	}
}
#AwsStoragegatewaySmbFileShareResource: {
	gateway_arn:              string
	location_arn:             string
	role_arn:                 string
	authentication?:          string
	default_storage_class?:   string
	guess_mime_type_enabled?: bool
	invalid_user_list?: [string, ...]
	kms_encrypted?:  bool
	kms_key_arn?:    string
	object_acl?:     string
	read_only?:      bool
	requester_pays?: bool
	tags?: [_]: string
	valid_user_list?: [string, ...]
	timeouts?: {
		create?: string
		delete?: string
		update?: string
	}
}
#AwsStoragegatewayUploadBufferResource: {
	disk_id:     string
	gateway_arn: string
}
#AwsStoragegatewayWorkingStorageResource: {
	disk_id:     string
	gateway_arn: string
}
#AwsSubnetResource: {
	cidr_block:                       string
	vpc_id:                           string
	assign_ipv6_address_on_creation?: bool
	map_public_ip_on_launch?:         bool
	outpost_arn?:                     string
	tags?: [_]: string
	timeouts?: {
		create?: string
		delete?: string
	}
}
#AwsSwfDomainResource: {
	workflow_execution_retention_period_in_days: string
	description?:                                string
	name_prefix?:                                string
	tags?: [_]: string
}
#AwsTransferServerResource: {
	endpoint_type?:          string
	force_destroy?:          bool
	host_key?:               string
	identity_provider_type?: string
	invocation_role?:        string
	logging_role?:           string
	tags?: [_]: string
	url?: string
	endpoint_details?: [{
		vpc_endpoint_id: string
	}, ...]
}
#AwsTransferSshKeyResource: {
	body:      string
	server_id: string
	user_name: string
}
#AwsTransferUserResource: {
	role:            string
	server_id:       string
	user_name:       string
	home_directory?: string
	policy?:         string
	tags?: [_]: string
}
#AwsVolumeAttachmentResource: {
	device_name:   string
	instance_id:   string
	volume_id:     string
	force_detach?: bool
	skip_destroy?: bool
}
#AwsVpcResource: {
	cidr_block:                        string
	assign_generated_ipv6_cidr_block?: bool
	enable_dns_support?:               bool
	instance_tenancy?:                 string
	tags?: [_]: string
}
#AwsVpcDhcpOptionsResource: {
	domain_name?: string
	domain_name_servers?: [string, ...]
	netbios_name_servers?: [string, ...]
	netbios_node_type?: string
	ntp_servers?: [string, ...]
	tags?: [_]: string
}
#AwsVpcDhcpOptionsAssociationResource: {
	dhcp_options_id: string
	vpc_id:          string
}
#AwsVpcEndpointResource: {
	service_name:         string
	vpc_id:               string
	auto_accept?:         bool
	private_dns_enabled?: bool
	tags?: [_]: string
	vpc_endpoint_type?: string
	timeouts?: {
		create?: string
		delete?: string
		update?: string
	}
}
#AwsVpcEndpointConnectionNotificationResource: {
	connection_events: [string, ...]
	connection_notification_arn: string
	vpc_endpoint_id?:            string
	vpc_endpoint_service_id?:    string
}
#AwsVpcEndpointRouteTableAssociationResource: {
	route_table_id:  string
	vpc_endpoint_id: string
}
#AwsVpcEndpointServiceResource: {
	acceptance_required: bool
	network_load_balancer_arns: [string, ...]
	tags?: [_]: string
}
#AwsVpcEndpointServiceAllowedPrincipalResource: {
	principal_arn:           string
	vpc_endpoint_service_id: string
}
#AwsVpcEndpointSubnetAssociationResource: {
	subnet_id:       string
	vpc_endpoint_id: string
	timeouts?: {
		create?: string
		delete?: string
	}
}
#AwsVpcIpv4CidrBlockAssociationResource: {
	cidr_block: string
	vpc_id:     string
	timeouts?: {
		create?: string
		delete?: string
	}
}
#AwsVpcPeeringConnectionResource: {
	peer_vpc_id:  string
	vpc_id:       string
	auto_accept?: bool
	tags?: [_]: string
	accepter?: [{
		allow_classic_link_to_remote_vpc?: bool
		allow_remote_vpc_dns_resolution?:  bool
		allow_vpc_to_remote_classic_link?: bool
	}, ...]
	requester?: [{
		allow_classic_link_to_remote_vpc?: bool
		allow_remote_vpc_dns_resolution?:  bool
		allow_vpc_to_remote_classic_link?: bool
	}, ...]
	timeouts?: {
		create?: string
		delete?: string
		update?: string
	}
}
#AwsVpcPeeringConnectionAccepterResource: {
	vpc_peering_connection_id: string
	auto_accept?:              bool
	tags?: [_]: string
	accepter?: [{
		allow_classic_link_to_remote_vpc?: bool
		allow_remote_vpc_dns_resolution?:  bool
		allow_vpc_to_remote_classic_link?: bool
	}, ...]
	requester?: [{
		allow_classic_link_to_remote_vpc?: bool
		allow_remote_vpc_dns_resolution?:  bool
		allow_vpc_to_remote_classic_link?: bool
	}, ...]
}
#AwsVpcPeeringConnectionOptionsResource: {
	vpc_peering_connection_id: string
	accepter?: [{
		allow_classic_link_to_remote_vpc?: bool
		allow_remote_vpc_dns_resolution?:  bool
		allow_vpc_to_remote_classic_link?: bool
	}, ...]
	requester?: [{
		allow_classic_link_to_remote_vpc?: bool
		allow_remote_vpc_dns_resolution?:  bool
		allow_vpc_to_remote_classic_link?: bool
	}, ...]
}
#AwsVpnConnectionResource: {
	customer_gateway_id: string
	type:                string
	tags?: [_]: string
	transit_gateway_id?: string
	vpn_gateway_id?:     string
}
#AwsVpnConnectionRouteResource: {
	destination_cidr_block: string
	vpn_connection_id:      string
}
#AwsVpnGatewayResource: {
	availability_zone?: string
	tags?: [_]: string
}
#AwsVpnGatewayAttachmentResource: {
	vpc_id:         string
	vpn_gateway_id: string
}
#AwsVpnGatewayRoutePropagationResource: {
	route_table_id: string
	vpn_gateway_id: string
}
#AwsWafByteMatchSetResource: {
	name: string
	byte_match_tuples?: [{
		positional_constraint: string
		text_transformation:   string
		target_string?:        string
		field_to_match?: [{
			type:  string
			data?: string
		}, ...]
	}, ...]
}
#AwsWafGeoMatchSetResource: {
	name: string
	geo_match_constraint?: [{
		type:  string
		value: string
	}, ...]
}
#AwsWafIpsetResource: {
	name: string
	ip_set_descriptors?: [{
		type:  string
		value: string
	}, ...]
}
#AwsWafRateBasedRuleResource: {
	metric_name: string
	name:        string
	rate_key:    string
	rate_limit:  number
	tags?: [_]: string
	predicates?: [{
		data_id: string
		negated: bool
		type:    string
	}, ...]
}
#AwsWafRegexMatchSetResource: {
	name: string
	regex_match_tuple?: [{
		regex_pattern_set_id: string
		text_transformation:  string
		field_to_match?: [{
			type:  string
			data?: string
		}, ...]
	}, ...]
}
#AwsWafRegexPatternSetResource: {
	name: string
	regex_pattern_strings?: [string, ...]
}
#AwsWafRuleResource: {
	metric_name: string
	name:        string
	tags?: [_]: string
	predicates?: [{
		data_id: string
		negated: bool
		type:    string
	}, ...]
}
#AwsWafRuleGroupResource: {
	metric_name: string
	name:        string
	tags?: [_]: string
	activated_rule?: [{
		priority: number
		rule_id:  string
		type?:    string
		action?: [{
			type: string
		}, ...]
	}, ...]
}
#AwsWafSizeConstraintSetResource: {
	name: string
	size_constraints?: [{
		comparison_operator: string
		size:                number
		text_transformation: string
		field_to_match?: [{
			type:  string
			data?: string
		}, ...]
	}, ...]
}
#AwsWafSqlInjectionMatchSetResource: {
	name: string
	sql_injection_match_tuples?: [{
		text_transformation: string
		field_to_match?: [{
			type:  string
			data?: string
		}, ...]
	}, ...]
}
#AwsWafWebAclResource: {
	metric_name: string
	name:        string
	tags?: [_]: string
	default_action?: [{
		type: string
	}, ...]
	logging_configuration?: [{
		log_destination: string
		redacted_fields?: [{
			field_to_match?: [{
				type:  string
				data?: string
			}, ...]
		}, ...]
	}, ...]
	rules?: [{
		priority: number
		rule_id:  string
		type?:    string
		action?: [{
			type: string
		}, ...]
		override_action?: [{
			type: string
		}, ...]
	}, ...]
}
#AwsWafXssMatchSetResource: {
	name: string
	xss_match_tuples?: [{
		text_transformation: string
		field_to_match?: [{
			type:  string
			data?: string
		}, ...]
	}, ...]
}
#AwsWafregionalByteMatchSetResource: {
	name: string
	byte_match_tuple?: [{
		positional_constraint: string
		text_transformation:   string
		target_string?:        string
		field_to_match?: [{
			type:  string
			data?: string
		}, ...]
	}, ...]
	byte_match_tuples?: [{
		positional_constraint: string
		text_transformation:   string
		target_string?:        string
		field_to_match?: [{
			type:  string
			data?: string
		}, ...]
	}, ...]
}
#AwsWafregionalGeoMatchSetResource: {
	name: string
	geo_match_constraint?: [{
		type:  string
		value: string
	}, ...]
}
#AwsWafregionalIpsetResource: {
	name: string
	ip_set_descriptor?: [{
		type:  string
		value: string
	}, ...]
}
#AwsWafregionalRateBasedRuleResource: {
	metric_name: string
	name:        string
	rate_key:    string
	rate_limit:  number
	tags?: [_]: string
	predicate?: [{
		data_id: string
		negated: bool
		type:    string
	}, ...]
}
#AwsWafregionalRegexMatchSetResource: {
	name: string
	regex_match_tuple?: [{
		regex_pattern_set_id: string
		text_transformation:  string
		field_to_match?: [{
			type:  string
			data?: string
		}, ...]
	}, ...]
}
#AwsWafregionalRegexPatternSetResource: {
	name: string
	regex_pattern_strings?: [string, ...]
}
#AwsWafregionalRuleResource: {
	metric_name: string
	name:        string
	tags?: [_]: string
	predicate?: [{
		data_id: string
		negated: bool
		type:    string
	}, ...]
}
#AwsWafregionalRuleGroupResource: {
	metric_name: string
	name:        string
	tags?: [_]: string
	activated_rule?: [{
		priority: number
		rule_id:  string
		type?:    string
		action?: [{
			type: string
		}, ...]
	}, ...]
}
#AwsWafregionalSizeConstraintSetResource: {
	name: string
	size_constraints?: [{
		comparison_operator: string
		size:                number
		text_transformation: string
		field_to_match?: [{
			type:  string
			data?: string
		}, ...]
	}, ...]
}
#AwsWafregionalSqlInjectionMatchSetResource: {
	name: string
	sql_injection_match_tuple?: [{
		text_transformation: string
		field_to_match?: [{
			type:  string
			data?: string
		}, ...]
	}, ...]
}
#AwsWafregionalWebAclResource: {
	metric_name: string
	name:        string
	tags?: [_]: string
	default_action?: [{
		type: string
	}, ...]
	logging_configuration?: [{
		log_destination: string
		redacted_fields?: [{
			field_to_match?: [{
				type:  string
				data?: string
			}, ...]
		}, ...]
	}, ...]
	rule?: [{
		priority: number
		rule_id:  string
		type?:    string
		action?: [{
			type: string
		}, ...]
		override_action?: [{
			type: string
		}, ...]
	}, ...]
}
#AwsWafregionalWebAclAssociationResource: {
	resource_arn: string
	web_acl_id:   string
}
#AwsWafregionalXssMatchSetResource: {
	name: string
	xss_match_tuple?: [{
		text_transformation: string
		field_to_match?: [{
			type:  string
			data?: string
		}, ...]
	}, ...]
}
#AwsWafv2IpSetResource: {
	ip_address_version: string
	name:               string
	scope:              string
	addresses?: [string, ...]
	description?: string
	tags?: [_]: string
}
#AwsWafv2RegexPatternSetResource: {
	name:         string
	scope:        string
	description?: string
	tags?: [_]: string
	regular_expression?: [{
		regex_string: string
	}, ...]
}
#AwsWorklinkFleetResource: {
	name:                            string
	audit_stream_arn?:               string
	device_ca_certificate?:          string
	display_name?:                   string
	optimize_for_end_user_location?: bool
	identity_provider?: [{
		saml_metadata: string
		type:          string
	}, ...]
	network?: [{
		security_group_ids: [string, ...]
		subnet_ids: [string, ...]
		vpc_id: string
	}, ...]
}
#AwsWorklinkWebsiteCertificateAuthorityAssociationResource: {
	certificate:   string
	fleet_arn:     string
	display_name?: string
}
#AwsWorkspacesDirectoryResource: {
	directory_id: string
	tags?: [_]: string
	self_service_permissions?: [{
		change_compute_type?:  bool
		increase_volume_size?: bool
		rebuild_workspace?:    bool
		restart_workspace?:    bool
		switch_running_mode?:  bool
	}, ...]
}
#AwsWorkspacesIpGroupResource: {
	name:         string
	description?: string
	tags?: [_]: string
	rules?: [{
		source:       string
		description?: string
	}, ...]
}
#AwsWorkspacesWorkspaceResource: {
	bundle_id:                       string
	directory_id:                    string
	user_name:                       string
	root_volume_encryption_enabled?: bool
	tags?: [_]: string
	user_volume_encryption_enabled?: bool
	volume_encryption_key?:          string
	workspace_properties?: [{
		compute_type_name?:    string
		root_volume_size_gib?: number
		running_mode?:         string
		user_volume_size_gib?: number
	}, ...]
}
#AwsXraySamplingRuleResource: {
	fixed_rate:     number
	host:           string
	http_method:    string
	priority:       number
	reservoir_size: number
	resource_arn:   string
	service_name:   string
	service_type:   string
	url_path:       string
	version:        number
	attributes?: [_]: string
	rule_name?: string
}
#Resources: {
	aws_accessanalyzer_analyzer?: [_]:                             #AwsAccessanalyzerAnalyzerResource
	aws_acm_certificate?: [_]:                                     #AwsAcmCertificateResource
	aws_acm_certificate_validation?: [_]:                          #AwsAcmCertificateValidationResource
	aws_acmpca_certificate_authority?: [_]:                        #AwsAcmpcaCertificateAuthorityResource
	aws_alb?: [_]:                                                 #AwsAlbResource
	aws_alb_listener?: [_]:                                        #AwsAlbListenerResource
	aws_alb_listener_certificate?: [_]:                            #AwsAlbListenerCertificateResource
	aws_alb_listener_rule?: [_]:                                   #AwsAlbListenerRuleResource
	aws_alb_target_group?: [_]:                                    #AwsAlbTargetGroupResource
	aws_alb_target_group_attachment?: [_]:                         #AwsAlbTargetGroupAttachmentResource
	aws_ami?: [_]:                                                 #AwsAmiResource
	aws_ami_copy?: [_]:                                            #AwsAmiCopyResource
	aws_ami_from_instance?: [_]:                                   #AwsAmiFromInstanceResource
	aws_ami_launch_permission?: [_]:                               #AwsAmiLaunchPermissionResource
	aws_api_gateway_account?: [_]:                                 #AwsApiGatewayAccountResource
	aws_api_gateway_api_key?: [_]:                                 #AwsApiGatewayApiKeyResource
	aws_api_gateway_authorizer?: [_]:                              #AwsApiGatewayAuthorizerResource
	aws_api_gateway_base_path_mapping?: [_]:                       #AwsApiGatewayBasePathMappingResource
	aws_api_gateway_client_certificate?: [_]:                      #AwsApiGatewayClientCertificateResource
	aws_api_gateway_deployment?: [_]:                              #AwsApiGatewayDeploymentResource
	aws_api_gateway_documentation_part?: [_]:                      #AwsApiGatewayDocumentationPartResource
	aws_api_gateway_documentation_version?: [_]:                   #AwsApiGatewayDocumentationVersionResource
	aws_api_gateway_domain_name?: [_]:                             #AwsApiGatewayDomainNameResource
	aws_api_gateway_gateway_response?: [_]:                        #AwsApiGatewayGatewayResponseResource
	aws_api_gateway_integration?: [_]:                             #AwsApiGatewayIntegrationResource
	aws_api_gateway_integration_response?: [_]:                    #AwsApiGatewayIntegrationResponseResource
	aws_api_gateway_method?: [_]:                                  #AwsApiGatewayMethodResource
	aws_api_gateway_method_response?: [_]:                         #AwsApiGatewayMethodResponseResource
	aws_api_gateway_method_settings?: [_]:                         #AwsApiGatewayMethodSettingsResource
	aws_api_gateway_model?: [_]:                                   #AwsApiGatewayModelResource
	aws_api_gateway_request_validator?: [_]:                       #AwsApiGatewayRequestValidatorResource
	aws_api_gateway_resource?: [_]:                                #AwsApiGatewayResourceResource
	aws_api_gateway_rest_api?: [_]:                                #AwsApiGatewayRestApiResource
	aws_api_gateway_stage?: [_]:                                   #AwsApiGatewayStageResource
	aws_api_gateway_usage_plan?: [_]:                              #AwsApiGatewayUsagePlanResource
	aws_api_gateway_usage_plan_key?: [_]:                          #AwsApiGatewayUsagePlanKeyResource
	aws_api_gateway_vpc_link?: [_]:                                #AwsApiGatewayVpcLinkResource
	aws_apigatewayv2_api?: [_]:                                    #AwsApigatewayv2ApiResource
	aws_apigatewayv2_api_mapping?: [_]:                            #AwsApigatewayv2ApiMappingResource
	aws_apigatewayv2_authorizer?: [_]:                             #AwsApigatewayv2AuthorizerResource
	aws_apigatewayv2_deployment?: [_]:                             #AwsApigatewayv2DeploymentResource
	aws_apigatewayv2_domain_name?: [_]:                            #AwsApigatewayv2DomainNameResource
	aws_apigatewayv2_integration?: [_]:                            #AwsApigatewayv2IntegrationResource
	aws_apigatewayv2_integration_response?: [_]:                   #AwsApigatewayv2IntegrationResponseResource
	aws_apigatewayv2_model?: [_]:                                  #AwsApigatewayv2ModelResource
	aws_apigatewayv2_route?: [_]:                                  #AwsApigatewayv2RouteResource
	aws_apigatewayv2_route_response?: [_]:                         #AwsApigatewayv2RouteResponseResource
	aws_apigatewayv2_stage?: [_]:                                  #AwsApigatewayv2StageResource
	aws_apigatewayv2_vpc_link?: [_]:                               #AwsApigatewayv2VpcLinkResource
	aws_app_cookie_stickiness_policy?: [_]:                        #AwsAppCookieStickinessPolicyResource
	aws_appautoscaling_policy?: [_]:                               #AwsAppautoscalingPolicyResource
	aws_appautoscaling_scheduled_action?: [_]:                     #AwsAppautoscalingScheduledActionResource
	aws_appautoscaling_target?: [_]:                               #AwsAppautoscalingTargetResource
	aws_appmesh_mesh?: [_]:                                        #AwsAppmeshMeshResource
	aws_appmesh_route?: [_]:                                       #AwsAppmeshRouteResource
	aws_appmesh_virtual_node?: [_]:                                #AwsAppmeshVirtualNodeResource
	aws_appmesh_virtual_router?: [_]:                              #AwsAppmeshVirtualRouterResource
	aws_appmesh_virtual_service?: [_]:                             #AwsAppmeshVirtualServiceResource
	aws_appsync_api_key?: [_]:                                     #AwsAppsyncApiKeyResource
	aws_appsync_datasource?: [_]:                                  #AwsAppsyncDatasourceResource
	aws_appsync_function?: [_]:                                    #AwsAppsyncFunctionResource
	aws_appsync_graphql_api?: [_]:                                 #AwsAppsyncGraphqlApiResource
	aws_appsync_resolver?: [_]:                                    #AwsAppsyncResolverResource
	aws_athena_database?: [_]:                                     #AwsAthenaDatabaseResource
	aws_athena_named_query?: [_]:                                  #AwsAthenaNamedQueryResource
	aws_athena_workgroup?: [_]:                                    #AwsAthenaWorkgroupResource
	aws_autoscaling_attachment?: [_]:                              #AwsAutoscalingAttachmentResource
	aws_autoscaling_group?: [_]:                                   #AwsAutoscalingGroupResource
	aws_autoscaling_lifecycle_hook?: [_]:                          #AwsAutoscalingLifecycleHookResource
	aws_autoscaling_notification?: [_]:                            #AwsAutoscalingNotificationResource
	aws_autoscaling_policy?: [_]:                                  #AwsAutoscalingPolicyResource
	aws_autoscaling_schedule?: [_]:                                #AwsAutoscalingScheduleResource
	aws_backup_plan?: [_]:                                         #AwsBackupPlanResource
	aws_backup_selection?: [_]:                                    #AwsBackupSelectionResource
	aws_backup_vault?: [_]:                                        #AwsBackupVaultResource
	aws_batch_compute_environment?: [_]:                           #AwsBatchComputeEnvironmentResource
	aws_batch_job_definition?: [_]:                                #AwsBatchJobDefinitionResource
	aws_batch_job_queue?: [_]:                                     #AwsBatchJobQueueResource
	aws_budgets_budget?: [_]:                                      #AwsBudgetsBudgetResource
	aws_cloud9_environment_ec2?: [_]:                              #AwsCloud9EnvironmentEc2Resource
	aws_cloudformation_stack?: [_]:                                #AwsCloudformationStackResource
	aws_cloudformation_stack_set?: [_]:                            #AwsCloudformationStackSetResource
	aws_cloudformation_stack_set_instance?: [_]:                   #AwsCloudformationStackSetInstanceResource
	aws_cloudfront_distribution?: [_]:                             #AwsCloudfrontDistributionResource
	aws_cloudfront_origin_access_identity?: [_]:                   #AwsCloudfrontOriginAccessIdentityResource
	aws_cloudfront_public_key?: [_]:                               #AwsCloudfrontPublicKeyResource
	aws_cloudhsm_v2_cluster?: [_]:                                 #AwsCloudhsmV2ClusterResource
	aws_cloudhsm_v2_hsm?: [_]:                                     #AwsCloudhsmV2HsmResource
	aws_cloudtrail?: [_]:                                          #AwsCloudtrailResource
	aws_cloudwatch_dashboard?: [_]:                                #AwsCloudwatchDashboardResource
	aws_cloudwatch_event_permission?: [_]:                         #AwsCloudwatchEventPermissionResource
	aws_cloudwatch_event_rule?: [_]:                               #AwsCloudwatchEventRuleResource
	aws_cloudwatch_event_target?: [_]:                             #AwsCloudwatchEventTargetResource
	aws_cloudwatch_log_destination?: [_]:                          #AwsCloudwatchLogDestinationResource
	aws_cloudwatch_log_destination_policy?: [_]:                   #AwsCloudwatchLogDestinationPolicyResource
	aws_cloudwatch_log_group?: [_]:                                #AwsCloudwatchLogGroupResource
	aws_cloudwatch_log_metric_filter?: [_]:                        #AwsCloudwatchLogMetricFilterResource
	aws_cloudwatch_log_resource_policy?: [_]:                      #AwsCloudwatchLogResourcePolicyResource
	aws_cloudwatch_log_stream?: [_]:                               #AwsCloudwatchLogStreamResource
	aws_cloudwatch_log_subscription_filter?: [_]:                  #AwsCloudwatchLogSubscriptionFilterResource
	aws_cloudwatch_metric_alarm?: [_]:                             #AwsCloudwatchMetricAlarmResource
	aws_codebuild_project?: [_]:                                   #AwsCodebuildProjectResource
	aws_codebuild_source_credential?: [_]:                         #AwsCodebuildSourceCredentialResource
	aws_codebuild_webhook?: [_]:                                   #AwsCodebuildWebhookResource
	aws_codecommit_repository?: [_]:                               #AwsCodecommitRepositoryResource
	aws_codecommit_trigger?: [_]:                                  #AwsCodecommitTriggerResource
	aws_codedeploy_app?: [_]:                                      #AwsCodedeployAppResource
	aws_codedeploy_deployment_config?: [_]:                        #AwsCodedeployDeploymentConfigResource
	aws_codedeploy_deployment_group?: [_]:                         #AwsCodedeployDeploymentGroupResource
	aws_codepipeline?: [_]:                                        #AwsCodepipelineResource
	aws_codepipeline_webhook?: [_]:                                #AwsCodepipelineWebhookResource
	aws_codestarnotifications_notification_rule?: [_]:             #AwsCodestarnotificationsNotificationRuleResource
	aws_cognito_identity_pool?: [_]:                               #AwsCognitoIdentityPoolResource
	aws_cognito_identity_pool_roles_attachment?: [_]:              #AwsCognitoIdentityPoolRolesAttachmentResource
	aws_cognito_identity_provider?: [_]:                           #AwsCognitoIdentityProviderResource
	aws_cognito_resource_server?: [_]:                             #AwsCognitoResourceServerResource
	aws_cognito_user_group?: [_]:                                  #AwsCognitoUserGroupResource
	aws_cognito_user_pool?: [_]:                                   #AwsCognitoUserPoolResource
	aws_cognito_user_pool_client?: [_]:                            #AwsCognitoUserPoolClientResource
	aws_cognito_user_pool_domain?: [_]:                            #AwsCognitoUserPoolDomainResource
	aws_config_aggregate_authorization?: [_]:                      #AwsConfigAggregateAuthorizationResource
	aws_config_config_rule?: [_]:                                  #AwsConfigConfigRuleResource
	aws_config_configuration_aggregator?: [_]:                     #AwsConfigConfigurationAggregatorResource
	aws_config_configuration_recorder?: [_]:                       #AwsConfigConfigurationRecorderResource
	aws_config_configuration_recorder_status?: [_]:                #AwsConfigConfigurationRecorderStatusResource
	aws_config_delivery_channel?: [_]:                             #AwsConfigDeliveryChannelResource
	aws_config_organization_custom_rule?: [_]:                     #AwsConfigOrganizationCustomRuleResource
	aws_config_organization_managed_rule?: [_]:                    #AwsConfigOrganizationManagedRuleResource
	aws_cur_report_definition?: [_]:                               #AwsCurReportDefinitionResource
	aws_customer_gateway?: [_]:                                    #AwsCustomerGatewayResource
	aws_datapipeline_pipeline?: [_]:                               #AwsDatapipelinePipelineResource
	aws_datasync_agent?: [_]:                                      #AwsDatasyncAgentResource
	aws_datasync_location_efs?: [_]:                               #AwsDatasyncLocationEfsResource
	aws_datasync_location_nfs?: [_]:                               #AwsDatasyncLocationNfsResource
	aws_datasync_location_s3?: [_]:                                #AwsDatasyncLocationS3Resource
	aws_datasync_location_smb?: [_]:                               #AwsDatasyncLocationSmbResource
	aws_datasync_task?: [_]:                                       #AwsDatasyncTaskResource
	aws_dax_cluster?: [_]:                                         #AwsDaxClusterResource
	aws_dax_parameter_group?: [_]:                                 #AwsDaxParameterGroupResource
	aws_dax_subnet_group?: [_]:                                    #AwsDaxSubnetGroupResource
	aws_db_cluster_snapshot?: [_]:                                 #AwsDbClusterSnapshotResource
	aws_db_event_subscription?: [_]:                               #AwsDbEventSubscriptionResource
	aws_db_instance?: [_]:                                         #AwsDbInstanceResource
	aws_db_instance_role_association?: [_]:                        #AwsDbInstanceRoleAssociationResource
	aws_db_option_group?: [_]:                                     #AwsDbOptionGroupResource
	aws_db_parameter_group?: [_]:                                  #AwsDbParameterGroupResource
	aws_db_security_group?: [_]:                                   #AwsDbSecurityGroupResource
	aws_db_snapshot?: [_]:                                         #AwsDbSnapshotResource
	aws_db_subnet_group?: [_]:                                     #AwsDbSubnetGroupResource
	aws_default_network_acl?: [_]:                                 #AwsDefaultNetworkAclResource
	aws_default_route_table?: [_]:                                 #AwsDefaultRouteTableResource
	aws_default_security_group?: [_]:                              #AwsDefaultSecurityGroupResource
	aws_default_subnet?: [_]:                                      #AwsDefaultSubnetResource
	aws_default_vpc?: [_]:                                         #AwsDefaultVpcResource
	aws_default_vpc_dhcp_options?: [_]:                            #AwsDefaultVpcDhcpOptionsResource
	aws_devicefarm_project?: [_]:                                  #AwsDevicefarmProjectResource
	aws_directory_service_conditional_forwarder?: [_]:             #AwsDirectoryServiceConditionalForwarderResource
	aws_directory_service_directory?: [_]:                         #AwsDirectoryServiceDirectoryResource
	aws_directory_service_log_subscription?: [_]:                  #AwsDirectoryServiceLogSubscriptionResource
	aws_dlm_lifecycle_policy?: [_]:                                #AwsDlmLifecyclePolicyResource
	aws_dms_certificate?: [_]:                                     #AwsDmsCertificateResource
	aws_dms_endpoint?: [_]:                                        #AwsDmsEndpointResource
	aws_dms_event_subscription?: [_]:                              #AwsDmsEventSubscriptionResource
	aws_dms_replication_instance?: [_]:                            #AwsDmsReplicationInstanceResource
	aws_dms_replication_subnet_group?: [_]:                        #AwsDmsReplicationSubnetGroupResource
	aws_dms_replication_task?: [_]:                                #AwsDmsReplicationTaskResource
	aws_docdb_cluster?: [_]:                                       #AwsDocdbClusterResource
	aws_docdb_cluster_instance?: [_]:                              #AwsDocdbClusterInstanceResource
	aws_docdb_cluster_parameter_group?: [_]:                       #AwsDocdbClusterParameterGroupResource
	aws_docdb_cluster_snapshot?: [_]:                              #AwsDocdbClusterSnapshotResource
	aws_docdb_subnet_group?: [_]:                                  #AwsDocdbSubnetGroupResource
	aws_dx_bgp_peer?: [_]:                                         #AwsDxBgpPeerResource
	aws_dx_connection?: [_]:                                       #AwsDxConnectionResource
	aws_dx_connection_association?: [_]:                           #AwsDxConnectionAssociationResource
	aws_dx_gateway?: [_]:                                          #AwsDxGatewayResource
	aws_dx_gateway_association?: [_]:                              #AwsDxGatewayAssociationResource
	aws_dx_gateway_association_proposal?: [_]:                     #AwsDxGatewayAssociationProposalResource
	aws_dx_hosted_private_virtual_interface?: [_]:                 #AwsDxHostedPrivateVirtualInterfaceResource
	aws_dx_hosted_private_virtual_interface_accepter?: [_]:        #AwsDxHostedPrivateVirtualInterfaceAccepterResource
	aws_dx_hosted_public_virtual_interface?: [_]:                  #AwsDxHostedPublicVirtualInterfaceResource
	aws_dx_hosted_public_virtual_interface_accepter?: [_]:         #AwsDxHostedPublicVirtualInterfaceAccepterResource
	aws_dx_hosted_transit_virtual_interface?: [_]:                 #AwsDxHostedTransitVirtualInterfaceResource
	aws_dx_hosted_transit_virtual_interface_accepter?: [_]:        #AwsDxHostedTransitVirtualInterfaceAccepterResource
	aws_dx_lag?: [_]:                                              #AwsDxLagResource
	aws_dx_private_virtual_interface?: [_]:                        #AwsDxPrivateVirtualInterfaceResource
	aws_dx_public_virtual_interface?: [_]:                         #AwsDxPublicVirtualInterfaceResource
	aws_dx_transit_virtual_interface?: [_]:                        #AwsDxTransitVirtualInterfaceResource
	aws_dynamodb_global_table?: [_]:                               #AwsDynamodbGlobalTableResource
	aws_dynamodb_table?: [_]:                                      #AwsDynamodbTableResource
	aws_dynamodb_table_item?: [_]:                                 #AwsDynamodbTableItemResource
	aws_ebs_default_kms_key?: [_]:                                 #AwsEbsDefaultKmsKeyResource
	aws_ebs_encryption_by_default?: [_]:                           #AwsEbsEncryptionByDefaultResource
	aws_ebs_snapshot?: [_]:                                        #AwsEbsSnapshotResource
	aws_ebs_snapshot_copy?: [_]:                                   #AwsEbsSnapshotCopyResource
	aws_ebs_volume?: [_]:                                          #AwsEbsVolumeResource
	aws_ec2_availability_zone_group?: [_]:                         #AwsEc2AvailabilityZoneGroupResource
	aws_ec2_capacity_reservation?: [_]:                            #AwsEc2CapacityReservationResource
	aws_ec2_client_vpn_endpoint?: [_]:                             #AwsEc2ClientVpnEndpointResource
	aws_ec2_client_vpn_network_association?: [_]:                  #AwsEc2ClientVpnNetworkAssociationResource
	aws_ec2_fleet?: [_]:                                           #AwsEc2FleetResource
	aws_ec2_traffic_mirror_filter?: [_]:                           #AwsEc2TrafficMirrorFilterResource
	aws_ec2_traffic_mirror_filter_rule?: [_]:                      #AwsEc2TrafficMirrorFilterRuleResource
	aws_ec2_traffic_mirror_session?: [_]:                          #AwsEc2TrafficMirrorSessionResource
	aws_ec2_traffic_mirror_target?: [_]:                           #AwsEc2TrafficMirrorTargetResource
	aws_ec2_transit_gateway?: [_]:                                 #AwsEc2TransitGatewayResource
	aws_ec2_transit_gateway_peering_attachment?: [_]:              #AwsEc2TransitGatewayPeeringAttachmentResource
	aws_ec2_transit_gateway_peering_attachment_accepter?: [_]:     #AwsEc2TransitGatewayPeeringAttachmentAccepterResource
	aws_ec2_transit_gateway_route?: [_]:                           #AwsEc2TransitGatewayRouteResource
	aws_ec2_transit_gateway_route_table?: [_]:                     #AwsEc2TransitGatewayRouteTableResource
	aws_ec2_transit_gateway_route_table_association?: [_]:         #AwsEc2TransitGatewayRouteTableAssociationResource
	aws_ec2_transit_gateway_route_table_propagation?: [_]:         #AwsEc2TransitGatewayRouteTablePropagationResource
	aws_ec2_transit_gateway_vpc_attachment?: [_]:                  #AwsEc2TransitGatewayVpcAttachmentResource
	aws_ec2_transit_gateway_vpc_attachment_accepter?: [_]:         #AwsEc2TransitGatewayVpcAttachmentAccepterResource
	aws_ecr_lifecycle_policy?: [_]:                                #AwsEcrLifecyclePolicyResource
	aws_ecr_repository?: [_]:                                      #AwsEcrRepositoryResource
	aws_ecr_repository_policy?: [_]:                               #AwsEcrRepositoryPolicyResource
	aws_ecs_capacity_provider?: [_]:                               #AwsEcsCapacityProviderResource
	aws_ecs_cluster?: [_]:                                         #AwsEcsClusterResource
	aws_ecs_service?: [_]:                                         #AwsEcsServiceResource
	aws_ecs_task_definition?: [_]:                                 #AwsEcsTaskDefinitionResource
	aws_efs_access_point?: [_]:                                    #AwsEfsAccessPointResource
	aws_efs_file_system?: [_]:                                     #AwsEfsFileSystemResource
	aws_efs_file_system_policy?: [_]:                              #AwsEfsFileSystemPolicyResource
	aws_efs_mount_target?: [_]:                                    #AwsEfsMountTargetResource
	aws_egress_only_internet_gateway?: [_]:                        #AwsEgressOnlyInternetGatewayResource
	aws_eip?: [_]:                                                 #AwsEipResource
	aws_eip_association?: [_]:                                     #AwsEipAssociationResource
	aws_eks_cluster?: [_]:                                         #AwsEksClusterResource
	aws_eks_fargate_profile?: [_]:                                 #AwsEksFargateProfileResource
	aws_eks_node_group?: [_]:                                      #AwsEksNodeGroupResource
	aws_elastic_beanstalk_application?: [_]:                       #AwsElasticBeanstalkApplicationResource
	aws_elastic_beanstalk_application_version?: [_]:               #AwsElasticBeanstalkApplicationVersionResource
	aws_elastic_beanstalk_configuration_template?: [_]:            #AwsElasticBeanstalkConfigurationTemplateResource
	aws_elastic_beanstalk_environment?: [_]:                       #AwsElasticBeanstalkEnvironmentResource
	aws_elasticache_cluster?: [_]:                                 #AwsElasticacheClusterResource
	aws_elasticache_parameter_group?: [_]:                         #AwsElasticacheParameterGroupResource
	aws_elasticache_replication_group?: [_]:                       #AwsElasticacheReplicationGroupResource
	aws_elasticache_security_group?: [_]:                          #AwsElasticacheSecurityGroupResource
	aws_elasticache_subnet_group?: [_]:                            #AwsElasticacheSubnetGroupResource
	aws_elasticsearch_domain?: [_]:                                #AwsElasticsearchDomainResource
	aws_elasticsearch_domain_policy?: [_]:                         #AwsElasticsearchDomainPolicyResource
	aws_elastictranscoder_pipeline?: [_]:                          #AwsElastictranscoderPipelineResource
	aws_elastictranscoder_preset?: [_]:                            #AwsElastictranscoderPresetResource
	aws_elb?: [_]:                                                 #AwsElbResource
	aws_elb_attachment?: [_]:                                      #AwsElbAttachmentResource
	aws_emr_cluster?: [_]:                                         #AwsEmrClusterResource
	aws_emr_instance_group?: [_]:                                  #AwsEmrInstanceGroupResource
	aws_emr_security_configuration?: [_]:                          #AwsEmrSecurityConfigurationResource
	aws_flow_log?: [_]:                                            #AwsFlowLogResource
	aws_fms_admin_account?: [_]:                                   #AwsFmsAdminAccountResource
	aws_fsx_lustre_file_system?: [_]:                              #AwsFsxLustreFileSystemResource
	aws_fsx_windows_file_system?: [_]:                             #AwsFsxWindowsFileSystemResource
	aws_gamelift_alias?: [_]:                                      #AwsGameliftAliasResource
	aws_gamelift_build?: [_]:                                      #AwsGameliftBuildResource
	aws_gamelift_fleet?: [_]:                                      #AwsGameliftFleetResource
	aws_gamelift_game_session_queue?: [_]:                         #AwsGameliftGameSessionQueueResource
	aws_glacier_vault?: [_]:                                       #AwsGlacierVaultResource
	aws_glacier_vault_lock?: [_]:                                  #AwsGlacierVaultLockResource
	aws_globalaccelerator_accelerator?: [_]:                       #AwsGlobalacceleratorAcceleratorResource
	aws_globalaccelerator_endpoint_group?: [_]:                    #AwsGlobalacceleratorEndpointGroupResource
	aws_globalaccelerator_listener?: [_]:                          #AwsGlobalacceleratorListenerResource
	aws_glue_catalog_database?: [_]:                               #AwsGlueCatalogDatabaseResource
	aws_glue_catalog_table?: [_]:                                  #AwsGlueCatalogTableResource
	aws_glue_classifier?: [_]:                                     #AwsGlueClassifierResource
	aws_glue_connection?: [_]:                                     #AwsGlueConnectionResource
	aws_glue_crawler?: [_]:                                        #AwsGlueCrawlerResource
	aws_glue_job?: [_]:                                            #AwsGlueJobResource
	aws_glue_security_configuration?: [_]:                         #AwsGlueSecurityConfigurationResource
	aws_glue_trigger?: [_]:                                        #AwsGlueTriggerResource
	aws_glue_workflow?: [_]:                                       #AwsGlueWorkflowResource
	aws_guardduty_detector?: [_]:                                  #AwsGuarddutyDetectorResource
	aws_guardduty_invite_accepter?: [_]:                           #AwsGuarddutyInviteAccepterResource
	aws_guardduty_ipset?: [_]:                                     #AwsGuarddutyIpsetResource
	aws_guardduty_member?: [_]:                                    #AwsGuarddutyMemberResource
	aws_guardduty_organization_admin_account?: [_]:                #AwsGuarddutyOrganizationAdminAccountResource
	aws_guardduty_organization_configuration?: [_]:                #AwsGuarddutyOrganizationConfigurationResource
	aws_guardduty_threatintelset?: [_]:                            #AwsGuarddutyThreatintelsetResource
	aws_iam_access_key?: [_]:                                      #AwsIamAccessKeyResource
	aws_iam_account_alias?: [_]:                                   #AwsIamAccountAliasResource
	aws_iam_account_password_policy?: [_]:                         #AwsIamAccountPasswordPolicyResource
	aws_iam_group?: [_]:                                           #AwsIamGroupResource
	aws_iam_group_membership?: [_]:                                #AwsIamGroupMembershipResource
	aws_iam_group_policy?: [_]:                                    #AwsIamGroupPolicyResource
	aws_iam_group_policy_attachment?: [_]:                         #AwsIamGroupPolicyAttachmentResource
	aws_iam_instance_profile?: [_]:                                #AwsIamInstanceProfileResource
	aws_iam_openid_connect_provider?: [_]:                         #AwsIamOpenidConnectProviderResource
	aws_iam_policy?: [_]:                                          #AwsIamPolicyResource
	aws_iam_policy_attachment?: [_]:                               #AwsIamPolicyAttachmentResource
	aws_iam_role?: [_]:                                            #AwsIamRoleResource
	aws_iam_role_policy?: [_]:                                     #AwsIamRolePolicyResource
	aws_iam_role_policy_attachment?: [_]:                          #AwsIamRolePolicyAttachmentResource
	aws_iam_saml_provider?: [_]:                                   #AwsIamSamlProviderResource
	aws_iam_server_certificate?: [_]:                              #AwsIamServerCertificateResource
	aws_iam_service_linked_role?: [_]:                             #AwsIamServiceLinkedRoleResource
	aws_iam_user?: [_]:                                            #AwsIamUserResource
	aws_iam_user_group_membership?: [_]:                           #AwsIamUserGroupMembershipResource
	aws_iam_user_login_profile?: [_]:                              #AwsIamUserLoginProfileResource
	aws_iam_user_policy?: [_]:                                     #AwsIamUserPolicyResource
	aws_iam_user_policy_attachment?: [_]:                          #AwsIamUserPolicyAttachmentResource
	aws_iam_user_ssh_key?: [_]:                                    #AwsIamUserSshKeyResource
	aws_inspector_assessment_target?: [_]:                         #AwsInspectorAssessmentTargetResource
	aws_inspector_assessment_template?: [_]:                       #AwsInspectorAssessmentTemplateResource
	aws_inspector_resource_group?: [_]:                            #AwsInspectorResourceGroupResource
	aws_instance?: [_]:                                            #AwsInstanceResource
	aws_internet_gateway?: [_]:                                    #AwsInternetGatewayResource
	aws_iot_certificate?: [_]:                                     #AwsIotCertificateResource
	aws_iot_policy?: [_]:                                          #AwsIotPolicyResource
	aws_iot_policy_attachment?: [_]:                               #AwsIotPolicyAttachmentResource
	aws_iot_role_alias?: [_]:                                      #AwsIotRoleAliasResource
	aws_iot_thing?: [_]:                                           #AwsIotThingResource
	aws_iot_thing_principal_attachment?: [_]:                      #AwsIotThingPrincipalAttachmentResource
	aws_iot_thing_type?: [_]:                                      #AwsIotThingTypeResource
	aws_iot_topic_rule?: [_]:                                      #AwsIotTopicRuleResource
	aws_key_pair?: [_]:                                            #AwsKeyPairResource
	aws_kinesis_analytics_application?: [_]:                       #AwsKinesisAnalyticsApplicationResource
	aws_kinesis_firehose_delivery_stream?: [_]:                    #AwsKinesisFirehoseDeliveryStreamResource
	aws_kinesis_stream?: [_]:                                      #AwsKinesisStreamResource
	aws_kinesis_video_stream?: [_]:                                #AwsKinesisVideoStreamResource
	aws_kms_alias?: [_]:                                           #AwsKmsAliasResource
	aws_kms_ciphertext?: [_]:                                      #AwsKmsCiphertextResource
	aws_kms_external_key?: [_]:                                    #AwsKmsExternalKeyResource
	aws_kms_grant?: [_]:                                           #AwsKmsGrantResource
	aws_kms_key?: [_]:                                             #AwsKmsKeyResource
	aws_lambda_alias?: [_]:                                        #AwsLambdaAliasResource
	aws_lambda_event_source_mapping?: [_]:                         #AwsLambdaEventSourceMappingResource
	aws_lambda_function?: [_]:                                     #AwsLambdaFunctionResource
	aws_lambda_function_event_invoke_config?: [_]:                 #AwsLambdaFunctionEventInvokeConfigResource
	aws_lambda_layer_version?: [_]:                                #AwsLambdaLayerVersionResource
	aws_lambda_permission?: [_]:                                   #AwsLambdaPermissionResource
	aws_lambda_provisioned_concurrency_config?: [_]:               #AwsLambdaProvisionedConcurrencyConfigResource
	aws_launch_configuration?: [_]:                                #AwsLaunchConfigurationResource
	aws_launch_template?: [_]:                                     #AwsLaunchTemplateResource
	aws_lb?: [_]:                                                  #AwsLbResource
	aws_lb_cookie_stickiness_policy?: [_]:                         #AwsLbCookieStickinessPolicyResource
	aws_lb_listener?: [_]:                                         #AwsLbListenerResource
	aws_lb_listener_certificate?: [_]:                             #AwsLbListenerCertificateResource
	aws_lb_listener_rule?: [_]:                                    #AwsLbListenerRuleResource
	aws_lb_ssl_negotiation_policy?: [_]:                           #AwsLbSslNegotiationPolicyResource
	aws_lb_target_group?: [_]:                                     #AwsLbTargetGroupResource
	aws_lb_target_group_attachment?: [_]:                          #AwsLbTargetGroupAttachmentResource
	aws_licensemanager_association?: [_]:                          #AwsLicensemanagerAssociationResource
	aws_licensemanager_license_configuration?: [_]:                #AwsLicensemanagerLicenseConfigurationResource
	aws_lightsail_domain?: [_]:                                    #AwsLightsailDomainResource
	aws_lightsail_instance?: [_]:                                  #AwsLightsailInstanceResource
	aws_lightsail_key_pair?: [_]:                                  #AwsLightsailKeyPairResource
	aws_lightsail_static_ip?: [_]:                                 #AwsLightsailStaticIpResource
	aws_lightsail_static_ip_attachment?: [_]:                      #AwsLightsailStaticIpAttachmentResource
	aws_load_balancer_backend_server_policy?: [_]:                 #AwsLoadBalancerBackendServerPolicyResource
	aws_load_balancer_listener_policy?: [_]:                       #AwsLoadBalancerListenerPolicyResource
	aws_load_balancer_policy?: [_]:                                #AwsLoadBalancerPolicyResource
	aws_macie_member_account_association?: [_]:                    #AwsMacieMemberAccountAssociationResource
	aws_macie_s3_bucket_association?: [_]:                         #AwsMacieS3BucketAssociationResource
	aws_main_route_table_association?: [_]:                        #AwsMainRouteTableAssociationResource
	aws_media_convert_queue?: [_]:                                 #AwsMediaConvertQueueResource
	aws_media_package_channel?: [_]:                               #AwsMediaPackageChannelResource
	aws_media_store_container?: [_]:                               #AwsMediaStoreContainerResource
	aws_media_store_container_policy?: [_]:                        #AwsMediaStoreContainerPolicyResource
	aws_mq_broker?: [_]:                                           #AwsMqBrokerResource
	aws_mq_configuration?: [_]:                                    #AwsMqConfigurationResource
	aws_msk_cluster?: [_]:                                         #AwsMskClusterResource
	aws_msk_configuration?: [_]:                                   #AwsMskConfigurationResource
	aws_nat_gateway?: [_]:                                         #AwsNatGatewayResource
	aws_neptune_cluster?: [_]:                                     #AwsNeptuneClusterResource
	aws_neptune_cluster_instance?: [_]:                            #AwsNeptuneClusterInstanceResource
	aws_neptune_cluster_parameter_group?: [_]:                     #AwsNeptuneClusterParameterGroupResource
	aws_neptune_cluster_snapshot?: [_]:                            #AwsNeptuneClusterSnapshotResource
	aws_neptune_event_subscription?: [_]:                          #AwsNeptuneEventSubscriptionResource
	aws_neptune_parameter_group?: [_]:                             #AwsNeptuneParameterGroupResource
	aws_neptune_subnet_group?: [_]:                                #AwsNeptuneSubnetGroupResource
	aws_network_acl?: [_]:                                         #AwsNetworkAclResource
	aws_network_acl_rule?: [_]:                                    #AwsNetworkAclRuleResource
	aws_network_interface?: [_]:                                   #AwsNetworkInterfaceResource
	aws_network_interface_attachment?: [_]:                        #AwsNetworkInterfaceAttachmentResource
	aws_network_interface_sg_attachment?: [_]:                     #AwsNetworkInterfaceSgAttachmentResource
	aws_opsworks_application?: [_]:                                #AwsOpsworksApplicationResource
	aws_opsworks_custom_layer?: [_]:                               #AwsOpsworksCustomLayerResource
	aws_opsworks_ganglia_layer?: [_]:                              #AwsOpsworksGangliaLayerResource
	aws_opsworks_haproxy_layer?: [_]:                              #AwsOpsworksHaproxyLayerResource
	aws_opsworks_instance?: [_]:                                   #AwsOpsworksInstanceResource
	aws_opsworks_java_app_layer?: [_]:                             #AwsOpsworksJavaAppLayerResource
	aws_opsworks_memcached_layer?: [_]:                            #AwsOpsworksMemcachedLayerResource
	aws_opsworks_mysql_layer?: [_]:                                #AwsOpsworksMysqlLayerResource
	aws_opsworks_nodejs_app_layer?: [_]:                           #AwsOpsworksNodejsAppLayerResource
	aws_opsworks_permission?: [_]:                                 #AwsOpsworksPermissionResource
	aws_opsworks_php_app_layer?: [_]:                              #AwsOpsworksPhpAppLayerResource
	aws_opsworks_rails_app_layer?: [_]:                            #AwsOpsworksRailsAppLayerResource
	aws_opsworks_rds_db_instance?: [_]:                            #AwsOpsworksRdsDbInstanceResource
	aws_opsworks_stack?: [_]:                                      #AwsOpsworksStackResource
	aws_opsworks_static_web_layer?: [_]:                           #AwsOpsworksStaticWebLayerResource
	aws_opsworks_user_profile?: [_]:                               #AwsOpsworksUserProfileResource
	aws_organizations_account?: [_]:                               #AwsOrganizationsAccountResource
	aws_organizations_organization?: [_]:                          #AwsOrganizationsOrganizationResource
	aws_organizations_organizational_unit?: [_]:                   #AwsOrganizationsOrganizationalUnitResource
	aws_organizations_policy?: [_]:                                #AwsOrganizationsPolicyResource
	aws_organizations_policy_attachment?: [_]:                     #AwsOrganizationsPolicyAttachmentResource
	aws_pinpoint_adm_channel?: [_]:                                #AwsPinpointAdmChannelResource
	aws_pinpoint_apns_channel?: [_]:                               #AwsPinpointApnsChannelResource
	aws_pinpoint_apns_sandbox_channel?: [_]:                       #AwsPinpointApnsSandboxChannelResource
	aws_pinpoint_apns_voip_channel?: [_]:                          #AwsPinpointApnsVoipChannelResource
	aws_pinpoint_apns_voip_sandbox_channel?: [_]:                  #AwsPinpointApnsVoipSandboxChannelResource
	aws_pinpoint_app?: [_]:                                        #AwsPinpointAppResource
	aws_pinpoint_baidu_channel?: [_]:                              #AwsPinpointBaiduChannelResource
	aws_pinpoint_email_channel?: [_]:                              #AwsPinpointEmailChannelResource
	aws_pinpoint_event_stream?: [_]:                               #AwsPinpointEventStreamResource
	aws_pinpoint_gcm_channel?: [_]:                                #AwsPinpointGcmChannelResource
	aws_pinpoint_sms_channel?: [_]:                                #AwsPinpointSmsChannelResource
	aws_placement_group?: [_]:                                     #AwsPlacementGroupResource
	aws_proxy_protocol_policy?: [_]:                               #AwsProxyProtocolPolicyResource
	aws_qldb_ledger?: [_]:                                         #AwsQldbLedgerResource
	aws_quicksight_group?: [_]:                                    #AwsQuicksightGroupResource
	aws_quicksight_user?: [_]:                                     #AwsQuicksightUserResource
	aws_ram_principal_association?: [_]:                           #AwsRamPrincipalAssociationResource
	aws_ram_resource_association?: [_]:                            #AwsRamResourceAssociationResource
	aws_ram_resource_share?: [_]:                                  #AwsRamResourceShareResource
	aws_ram_resource_share_accepter?: [_]:                         #AwsRamResourceShareAccepterResource
	aws_rds_cluster?: [_]:                                         #AwsRdsClusterResource
	aws_rds_cluster_endpoint?: [_]:                                #AwsRdsClusterEndpointResource
	aws_rds_cluster_instance?: [_]:                                #AwsRdsClusterInstanceResource
	aws_rds_cluster_parameter_group?: [_]:                         #AwsRdsClusterParameterGroupResource
	aws_rds_global_cluster?: [_]:                                  #AwsRdsGlobalClusterResource
	aws_redshift_cluster?: [_]:                                    #AwsRedshiftClusterResource
	aws_redshift_event_subscription?: [_]:                         #AwsRedshiftEventSubscriptionResource
	aws_redshift_parameter_group?: [_]:                            #AwsRedshiftParameterGroupResource
	aws_redshift_security_group?: [_]:                             #AwsRedshiftSecurityGroupResource
	aws_redshift_snapshot_copy_grant?: [_]:                        #AwsRedshiftSnapshotCopyGrantResource
	aws_redshift_snapshot_schedule?: [_]:                          #AwsRedshiftSnapshotScheduleResource
	aws_redshift_snapshot_schedule_association?: [_]:              #AwsRedshiftSnapshotScheduleAssociationResource
	aws_redshift_subnet_group?: [_]:                               #AwsRedshiftSubnetGroupResource
	aws_resourcegroups_group?: [_]:                                #AwsResourcegroupsGroupResource
	aws_route53_delegation_set?: [_]:                              #AwsRoute53DelegationSetResource
	aws_route53_health_check?: [_]:                                #AwsRoute53HealthCheckResource
	aws_route53_query_log?: [_]:                                   #AwsRoute53QueryLogResource
	aws_route53_record?: [_]:                                      #AwsRoute53RecordResource
	aws_route53_resolver_endpoint?: [_]:                           #AwsRoute53ResolverEndpointResource
	aws_route53_resolver_rule?: [_]:                               #AwsRoute53ResolverRuleResource
	aws_route53_resolver_rule_association?: [_]:                   #AwsRoute53ResolverRuleAssociationResource
	aws_route53_zone?: [_]:                                        #AwsRoute53ZoneResource
	aws_route53_zone_association?: [_]:                            #AwsRoute53ZoneAssociationResource
	aws_route?: [_]:                                               #AwsRouteResource
	aws_route_table?: [_]:                                         #AwsRouteTableResource
	aws_route_table_association?: [_]:                             #AwsRouteTableAssociationResource
	aws_s3_access_point?: [_]:                                     #AwsS3AccessPointResource
	aws_s3_account_public_access_block?: [_]:                      #AwsS3AccountPublicAccessBlockResource
	aws_s3_bucket?: [_]:                                           #AwsS3BucketResource
	aws_s3_bucket_analytics_configuration?: [_]:                   #AwsS3BucketAnalyticsConfigurationResource
	aws_s3_bucket_inventory?: [_]:                                 #AwsS3BucketInventoryResource
	aws_s3_bucket_metric?: [_]:                                    #AwsS3BucketMetricResource
	aws_s3_bucket_notification?: [_]:                              #AwsS3BucketNotificationResource
	aws_s3_bucket_object?: [_]:                                    #AwsS3BucketObjectResource
	aws_s3_bucket_policy?: [_]:                                    #AwsS3BucketPolicyResource
	aws_s3_bucket_public_access_block?: [_]:                       #AwsS3BucketPublicAccessBlockResource
	aws_sagemaker_endpoint?: [_]:                                  #AwsSagemakerEndpointResource
	aws_sagemaker_endpoint_configuration?: [_]:                    #AwsSagemakerEndpointConfigurationResource
	aws_sagemaker_model?: [_]:                                     #AwsSagemakerModelResource
	aws_sagemaker_notebook_instance?: [_]:                         #AwsSagemakerNotebookInstanceResource
	aws_sagemaker_notebook_instance_lifecycle_configuration?: [_]: #AwsSagemakerNotebookInstanceLifecycleConfigurationResource
	aws_secretsmanager_secret?: [_]:                               #AwsSecretsmanagerSecretResource
	aws_secretsmanager_secret_version?: [_]:                       #AwsSecretsmanagerSecretVersionResource
	aws_security_group?: [_]:                                      #AwsSecurityGroupResource
	aws_security_group_rule?: [_]:                                 #AwsSecurityGroupRuleResource
	aws_securityhub_account?: [_]:                                 #AwsSecurityhubAccountResource
	aws_securityhub_member?: [_]:                                  #AwsSecurityhubMemberResource
	aws_securityhub_product_subscription?: [_]:                    #AwsSecurityhubProductSubscriptionResource
	aws_securityhub_standards_subscription?: [_]:                  #AwsSecurityhubStandardsSubscriptionResource
	aws_service_discovery_http_namespace?: [_]:                    #AwsServiceDiscoveryHttpNamespaceResource
	aws_service_discovery_private_dns_namespace?: [_]:             #AwsServiceDiscoveryPrivateDnsNamespaceResource
	aws_service_discovery_public_dns_namespace?: [_]:              #AwsServiceDiscoveryPublicDnsNamespaceResource
	aws_service_discovery_service?: [_]:                           #AwsServiceDiscoveryServiceResource
	aws_servicecatalog_portfolio?: [_]:                            #AwsServicecatalogPortfolioResource
	aws_servicequotas_service_quota?: [_]:                         #AwsServicequotasServiceQuotaResource
	aws_ses_active_receipt_rule_set?: [_]:                         #AwsSesActiveReceiptRuleSetResource
	aws_ses_configuration_set?: [_]:                               #AwsSesConfigurationSetResource
	aws_ses_domain_dkim?: [_]:                                     #AwsSesDomainDkimResource
	aws_ses_domain_identity?: [_]:                                 #AwsSesDomainIdentityResource
	aws_ses_domain_identity_verification?: [_]:                    #AwsSesDomainIdentityVerificationResource
	aws_ses_domain_mail_from?: [_]:                                #AwsSesDomainMailFromResource
	aws_ses_email_identity?: [_]:                                  #AwsSesEmailIdentityResource
	aws_ses_event_destination?: [_]:                               #AwsSesEventDestinationResource
	aws_ses_identity_notification_topic?: [_]:                     #AwsSesIdentityNotificationTopicResource
	aws_ses_identity_policy?: [_]:                                 #AwsSesIdentityPolicyResource
	aws_ses_receipt_filter?: [_]:                                  #AwsSesReceiptFilterResource
	aws_ses_receipt_rule?: [_]:                                    #AwsSesReceiptRuleResource
	aws_ses_receipt_rule_set?: [_]:                                #AwsSesReceiptRuleSetResource
	aws_ses_template?: [_]:                                        #AwsSesTemplateResource
	aws_sfn_activity?: [_]:                                        #AwsSfnActivityResource
	aws_sfn_state_machine?: [_]:                                   #AwsSfnStateMachineResource
	aws_shield_protection?: [_]:                                   #AwsShieldProtectionResource
	aws_simpledb_domain?: [_]:                                     #AwsSimpledbDomainResource
	aws_snapshot_create_volume_permission?: [_]:                   #AwsSnapshotCreateVolumePermissionResource
	aws_sns_platform_application?: [_]:                            #AwsSnsPlatformApplicationResource
	aws_sns_sms_preferences?: [_]:                                 #AwsSnsSmsPreferencesResource
	aws_sns_topic?: [_]:                                           #AwsSnsTopicResource
	aws_sns_topic_policy?: [_]:                                    #AwsSnsTopicPolicyResource
	aws_sns_topic_subscription?: [_]:                              #AwsSnsTopicSubscriptionResource
	aws_spot_datafeed_subscription?: [_]:                          #AwsSpotDatafeedSubscriptionResource
	aws_spot_fleet_request?: [_]:                                  #AwsSpotFleetRequestResource
	aws_spot_instance_request?: [_]:                               #AwsSpotInstanceRequestResource
	aws_sqs_queue?: [_]:                                           #AwsSqsQueueResource
	aws_sqs_queue_policy?: [_]:                                    #AwsSqsQueuePolicyResource
	aws_ssm_activation?: [_]:                                      #AwsSsmActivationResource
	aws_ssm_association?: [_]:                                     #AwsSsmAssociationResource
	aws_ssm_document?: [_]:                                        #AwsSsmDocumentResource
	aws_ssm_maintenance_window?: [_]:                              #AwsSsmMaintenanceWindowResource
	aws_ssm_maintenance_window_target?: [_]:                       #AwsSsmMaintenanceWindowTargetResource
	aws_ssm_maintenance_window_task?: [_]:                         #AwsSsmMaintenanceWindowTaskResource
	aws_ssm_parameter?: [_]:                                       #AwsSsmParameterResource
	aws_ssm_patch_baseline?: [_]:                                  #AwsSsmPatchBaselineResource
	aws_ssm_patch_group?: [_]:                                     #AwsSsmPatchGroupResource
	aws_ssm_resource_data_sync?: [_]:                              #AwsSsmResourceDataSyncResource
	aws_storagegateway_cache?: [_]:                                #AwsStoragegatewayCacheResource
	aws_storagegateway_cached_iscsi_volume?: [_]:                  #AwsStoragegatewayCachedIscsiVolumeResource
	aws_storagegateway_gateway?: [_]:                              #AwsStoragegatewayGatewayResource
	aws_storagegateway_nfs_file_share?: [_]:                       #AwsStoragegatewayNfsFileShareResource
	aws_storagegateway_smb_file_share?: [_]:                       #AwsStoragegatewaySmbFileShareResource
	aws_storagegateway_upload_buffer?: [_]:                        #AwsStoragegatewayUploadBufferResource
	aws_storagegateway_working_storage?: [_]:                      #AwsStoragegatewayWorkingStorageResource
	aws_subnet?: [_]:                                              #AwsSubnetResource
	aws_swf_domain?: [_]:                                          #AwsSwfDomainResource
	aws_transfer_server?: [_]:                                     #AwsTransferServerResource
	aws_transfer_ssh_key?: [_]:                                    #AwsTransferSshKeyResource
	aws_transfer_user?: [_]:                                       #AwsTransferUserResource
	aws_volume_attachment?: [_]:                                   #AwsVolumeAttachmentResource
	aws_vpc?: [_]:                                                 #AwsVpcResource
	aws_vpc_dhcp_options?: [_]:                                    #AwsVpcDhcpOptionsResource
	aws_vpc_dhcp_options_association?: [_]:                        #AwsVpcDhcpOptionsAssociationResource
	aws_vpc_endpoint?: [_]:                                        #AwsVpcEndpointResource
	aws_vpc_endpoint_connection_notification?: [_]:                #AwsVpcEndpointConnectionNotificationResource
	aws_vpc_endpoint_route_table_association?: [_]:                #AwsVpcEndpointRouteTableAssociationResource
	aws_vpc_endpoint_service?: [_]:                                #AwsVpcEndpointServiceResource
	aws_vpc_endpoint_service_allowed_principal?: [_]:              #AwsVpcEndpointServiceAllowedPrincipalResource
	aws_vpc_endpoint_subnet_association?: [_]:                     #AwsVpcEndpointSubnetAssociationResource
	aws_vpc_ipv4_cidr_block_association?: [_]:                     #AwsVpcIpv4CidrBlockAssociationResource
	aws_vpc_peering_connection?: [_]:                              #AwsVpcPeeringConnectionResource
	aws_vpc_peering_connection_accepter?: [_]:                     #AwsVpcPeeringConnectionAccepterResource
	aws_vpc_peering_connection_options?: [_]:                      #AwsVpcPeeringConnectionOptionsResource
	aws_vpn_connection?: [_]:                                      #AwsVpnConnectionResource
	aws_vpn_connection_route?: [_]:                                #AwsVpnConnectionRouteResource
	aws_vpn_gateway?: [_]:                                         #AwsVpnGatewayResource
	aws_vpn_gateway_attachment?: [_]:                              #AwsVpnGatewayAttachmentResource
	aws_vpn_gateway_route_propagation?: [_]:                       #AwsVpnGatewayRoutePropagationResource
	aws_waf_byte_match_set?: [_]:                                  #AwsWafByteMatchSetResource
	aws_waf_geo_match_set?: [_]:                                   #AwsWafGeoMatchSetResource
	aws_waf_ipset?: [_]:                                           #AwsWafIpsetResource
	aws_waf_rate_based_rule?: [_]:                                 #AwsWafRateBasedRuleResource
	aws_waf_regex_match_set?: [_]:                                 #AwsWafRegexMatchSetResource
	aws_waf_regex_pattern_set?: [_]:                               #AwsWafRegexPatternSetResource
	aws_waf_rule?: [_]:                                            #AwsWafRuleResource
	aws_waf_rule_group?: [_]:                                      #AwsWafRuleGroupResource
	aws_waf_size_constraint_set?: [_]:                             #AwsWafSizeConstraintSetResource
	aws_waf_sql_injection_match_set?: [_]:                         #AwsWafSqlInjectionMatchSetResource
	aws_waf_web_acl?: [_]:                                         #AwsWafWebAclResource
	aws_waf_xss_match_set?: [_]:                                   #AwsWafXssMatchSetResource
	aws_wafregional_byte_match_set?: [_]:                          #AwsWafregionalByteMatchSetResource
	aws_wafregional_geo_match_set?: [_]:                           #AwsWafregionalGeoMatchSetResource
	aws_wafregional_ipset?: [_]:                                   #AwsWafregionalIpsetResource
	aws_wafregional_rate_based_rule?: [_]:                         #AwsWafregionalRateBasedRuleResource
	aws_wafregional_regex_match_set?: [_]:                         #AwsWafregionalRegexMatchSetResource
	aws_wafregional_regex_pattern_set?: [_]:                       #AwsWafregionalRegexPatternSetResource
	aws_wafregional_rule?: [_]:                                    #AwsWafregionalRuleResource
	aws_wafregional_rule_group?: [_]:                              #AwsWafregionalRuleGroupResource
	aws_wafregional_size_constraint_set?: [_]:                     #AwsWafregionalSizeConstraintSetResource
	aws_wafregional_sql_injection_match_set?: [_]:                 #AwsWafregionalSqlInjectionMatchSetResource
	aws_wafregional_web_acl?: [_]:                                 #AwsWafregionalWebAclResource
	aws_wafregional_web_acl_association?: [_]:                     #AwsWafregionalWebAclAssociationResource
	aws_wafregional_xss_match_set?: [_]:                           #AwsWafregionalXssMatchSetResource
	aws_wafv2_ip_set?: [_]:                                        #AwsWafv2IpSetResource
	aws_wafv2_regex_pattern_set?: [_]:                             #AwsWafv2RegexPatternSetResource
	aws_worklink_fleet?: [_]:                                      #AwsWorklinkFleetResource
	aws_worklink_website_certificate_authority_association?: [_]:  #AwsWorklinkWebsiteCertificateAuthorityAssociationResource
	aws_workspaces_directory?: [_]:                                #AwsWorkspacesDirectoryResource
	aws_workspaces_ip_group?: [_]:                                 #AwsWorkspacesIpGroupResource
	aws_workspaces_workspace?: [_]:                                #AwsWorkspacesWorkspaceResource
	aws_xray_sampling_rule?: [_]:                                  #AwsXraySamplingRuleResource
}
