// Generated by cue-terraform-gen (https://github.com/tnarg/cue_terraform_gen). DO NOT EDIT.
package yandex

#YandexComputeDiskResource: {
	description?: string
	image_id?:    string
	labels?: [_]: string
	name?:        string
	size?:        number
	snapshot_id?: string
	type?:        string
	timeouts?: {
		create?: string
		delete?: string
		update?: string
	}
}
#YandexComputeImageResource: {
	description?: string
	family?:      string
	labels?: [_]: string
	name?: string
	timeouts?: {
		create?: string
		delete?: string
		update?: string
	}
}
#YandexComputeInstanceResource: {
	allow_stopping_for_update?: bool
	description?:               string
	labels?: [_]:   string
	metadata?: [_]: string
	name?:                      string
	network_acceleration_type?: string
	platform_id?:               string
	boot_disk?: [{
		auto_delete?: bool
		initialize_params?: [{
			type?: string
		}, ...]
	}, ...]
	network_interface?: [{
		subnet_id: string
		ipv4?:     bool
	}, ...]
	resources?: [{
		cores:          number
		memory:         number
		core_fraction?: number
		gpus?:          number
	}, ...]
	scheduling_policy?: [{
		preemptible?: bool
	}, ...]
	secondary_disk?: [{
		disk_id:      string
		auto_delete?: bool
		mode?:        string
	}, ...]
	timeouts?: {
		create?: string
		delete?: string
		update?: string
	}
}
#YandexComputeInstanceGroupResource: {
	service_account_id: string
	description?:       string
	labels?: [_]: string
	name?: string
	variables?: [_]: string
	allocation_policy?: [{
		zones: [string, ...]
	}, ...]
	deploy_policy?: [{
		max_expansion:     number
		max_unavailable:   number
		max_creating?:     number
		max_deleting?:     number
		startup_duration?: number
	}, ...]
	health_check?: [{
		healthy_threshold?:   number
		interval?:            number
		timeout?:             number
		unhealthy_threshold?: number
		http_options?: [{
			path: string
			port: number
		}, ...]
		tcp_options?: [{
			port: number
		}, ...]
	}, ...]
	instance_template?: [{
		description?: string
		hostname?:    string
		labels?: [_]:   string
		metadata?: [_]: string
		name?:               string
		platform_id?:        string
		service_account_id?: string
		boot_disk?: [{
			mode?: string
			initialize_params?: [{
				description?: string
				type?:        string
			}, ...]
		}, ...]
		network_interface?: [{
			ipv4?:       bool
			network_id?: string
			subnet_ids?: [string, ...]
		}, ...]
		network_settings?: [{
			type?: string
		}, ...]
		resources?: [{
			cores:          number
			memory:         number
			core_fraction?: number
			gpus?:          number
		}, ...]
		scheduling_policy?: [{
			preemptible?: bool
		}, ...]
		secondary_disk?: [{
			device_name?: string
			mode?:        string
			initialize_params?: [{
				description?: string
				image_id?:    string
				size?:        number
				snapshot_id?: string
				type?:        string
			}, ...]
		}, ...]
	}, ...]
	load_balancer?: [{
		target_group_description?: string
		target_group_labels?: [_]: string
		target_group_name?: string
	}, ...]
	scale_policy?: [{
		auto_scale?: [{
			initial_size:            number
			measurement_duration:    number
			cpu_utilization_target?: number
			max_size?:               number
			min_zone_size?:          number
			custom_rule?: [{
				metric_name: string
				metric_type: string
				rule_type:   string
				target:      number
				labels?: [_]: string
			}, ...]
		}, ...]
		fixed_scale?: [{
			size: number
		}, ...]
	}, ...]
	timeouts?: {
		create?: string
		delete?: string
		update?: string
	}
}
#YandexComputeSnapshotResource: {
	source_disk_id: string
	description?:   string
	labels?: [_]: string
	name?: string
	timeouts?: {
		create?: string
		delete?: string
		update?: string
	}
}
#YandexContainerRegistryResource: {
	labels?: [_]: string
	timeouts?: {
		create?: string
		delete?: string
		update?: string
	}
}
#YandexDataprocClusterResource: {
	name:               string
	service_account_id: string
	bucket?:            string
	description?:       string
	labels?: [_]: string
	cluster_config?: [{
		hadoop?: [{
			properties?: [_]: string
			services?: [string, ...]
			ssh_public_keys?: [string, ...]
		}, ...]
		subcluster_spec?: [{
			hosts_count: number
			name:        string
			role:        string
			subnet_id:   string
			resources?: [{
				disk_size:          number
				resource_preset_id: string
				disk_type_id?:      string
			}, ...]
		}, ...]
	}, ...]
	timeouts?: {
		create?: string
		delete?: string
		update?: string
	}
}
#YandexFunctionResource: {
	entrypoint:   string
	memory:       number
	name:         string
	runtime:      string
	user_hash:    string
	description?: string
	environment?: [_]: string
	execution_timeout?: string
	labels?: [_]: string
	service_account_id?: string
	content?: [{
		zip_filename: string
	}, ...]
	package?: [{
		bucket_name: string
		object_name: string
		sha_256?:    string
	}, ...]
	timeouts?: {
		create?: string
		delete?: string
		update?: string
	}
}
#YandexFunctionIamBindingResource: {
	function_id: string
	members: [string, ...]
	role:         string
	sleep_after?: number
}
#YandexFunctionTriggerResource: {
	name:         string
	description?: string
	labels?: [_]: string
	dlq?: [{
		queue_id:           string
		service_account_id: string
	}, ...]
	function?: [{
		id:                  string
		retry_attempts?:     string
		retry_interval?:     string
		service_account_id?: string
		tag?:                string
	}, ...]
	iot?: [{
		registry_id: string
		device_id?:  string
		topic?:      string
	}, ...]
	message_queue?: [{
		batch_cutoff:        string
		queue_id:            string
		service_account_id:  string
		batch_size?:         string
		visibility_timeout?: string
	}, ...]
	object_storage?: [{
		bucket_id: string
		create?:   bool
		delete?:   bool
		prefix?:   string
		suffix?:   string
		update?:   bool
	}, ...]
	timeouts?: {
		create?: string
		delete?: string
		update?: string
	}
	timer?: [{
		cron_expression: string
	}, ...]
}
#YandexIamServiceAccountResource: {
	description?: string
	name?:        string
	timeouts?: {
		create?: string
		delete?: string
		update?: string
	}
}
#YandexIamServiceAccountApiKeyResource: {
	service_account_id: string
	description?:       string
	pgp_key?:           string
}
#YandexIamServiceAccountIamBindingResource: {
	members: [string, ...]
	role:               string
	service_account_id: string
	sleep_after?:       number
}
#YandexIamServiceAccountIamMemberResource: {
	member:             string
	role:               string
	service_account_id: string
	sleep_after?:       number
}
#YandexIamServiceAccountIamPolicyResource: {
	policy_data:        string
	service_account_id: string
}
#YandexIamServiceAccountKeyResource: {
	service_account_id: string
	description?:       string
	format?:            string
	key_algorithm?:     string
	pgp_key?:           string
}
#YandexIamServiceAccountStaticAccessKeyResource: {
	service_account_id: string
	description?:       string
	pgp_key?:           string
}
#YandexIotCoreDeviceResource: {
	name:        string
	registry_id: string
	aliases?: [_]: string
	certificates?: [string, ...]
	description?: string
	passwords?: [string, ...]
	timeouts?: {
		create?: string
		delete?: string
		update?: string
	}
}
#YandexIotCoreRegistryResource: {
	name: string
	certificates?: [string, ...]
	description?: string
	labels?: [_]: string
	passwords?: [string, ...]
	timeouts?: {
		create?: string
		delete?: string
		update?: string
	}
}
#YandexKmsSecretCiphertextResource: {
	key_id:       string
	plaintext:    string
	aad_context?: string
	timeouts?: {
		create?: string
		delete?: string
		read?:   string
	}
}
#YandexKmsSymmetricKeyResource: {
	default_algorithm?: string
	description?:       string
	labels?: [_]: string
	name?:            string
	rotation_period?: string
	timeouts?: {
		create?: string
		delete?: string
		read?:   string
		update?: string
	}
}
#YandexKubernetesClusterResource: {
	network_id:                string
	node_service_account_id:   string
	service_account_id:        string
	network_policy_provider?:  string
	node_ipv4_cidr_mask_size?: number
	kms_provider?: [{
		key_id?: string
	}, ...]
	master?: [{
		maintenance_policy?: [{
			auto_upgrade: bool
			maintenance_window?: [{
				duration:   string
				start_time: string
			}, ...]
		}, ...]
		regional?: [{
			region: string
			location?: [{
				subnet_id?: string
				zone?:      string
			}, ...]
		}, ...]
		zonal?: [{
			subnet_id?: string
		}, ...]
	}, ...]
	timeouts?: {
		create?: string
		delete?: string
		read?:   string
		update?: string
	}
}
#YandexKubernetesNodeGroupResource: {
	cluster_id: string
	allowed_unsafe_sysctls?: [string, ...]
	node_labels?: [_]: string
	node_taints?: [string, ...]
	allocation_policy?: [{
		location?: [{}, ...]
	}, ...]
	deploy_policy?: [{
		max_expansion:   number
		max_unavailable: number
	}, ...]
	instance_template?: [{
		boot_disk?: [{}, ...]
		resources?: [{}, ...]
		scheduling_policy?: [{}, ...]
	}, ...]
	maintenance_policy?: [{
		auto_repair:  bool
		auto_upgrade: bool
		maintenance_window?: [{
			duration:   string
			start_time: string
		}, ...]
	}, ...]
	scale_policy?: [{
		auto_scale?: [{
			initial: number
			max:     number
			min:     number
		}, ...]
		fixed_scale?: [{}, ...]
	}, ...]
	timeouts?: {
		create?: string
		delete?: string
		read?:   string
		update?: string
	}
}
#YandexLbNetworkLoadBalancerResource: {
	description?: string
	labels?: [_]: string
	name?:      string
	region_id?: string
	type?:      string
	attached_target_group?: [{
		target_group_id: string
		healthcheck?: [{
			name:                 string
			healthy_threshold?:   number
			interval?:            number
			timeout?:             number
			unhealthy_threshold?: number
			http_options?: [{
				port:  number
				path?: string
			}, ...]
			tcp_options?: [{
				port: number
			}, ...]
		}, ...]
	}, ...]
	listener?: [{
		name:      string
		port:      number
		protocol?: string
		external_address_spec?: [{
			ip_version?: string
		}, ...]
		internal_address_spec?: [{
			subnet_id:   string
			ip_version?: string
		}, ...]
	}, ...]
	timeouts?: {
		create?: string
		delete?: string
		update?: string
	}
}
#YandexLbTargetGroupResource: {
	description?: string
	labels?: [_]: string
	name?:      string
	region_id?: string
	target?: [{
		address:   string
		subnet_id: string
	}, ...]
	timeouts?: {
		create?: string
		delete?: string
		update?: string
	}
}
#YandexMdbClickhouseClusterResource: {
	environment:  string
	name:         string
	network_id:   string
	description?: string
	labels?: [_]: string
	access?: [{
		data_lens?:  bool
		metrika?:    bool
		serverless?: bool
		web_sql?:    bool
	}, ...]
	backup_window_start?: [{
		hours?:   number
		minutes?: number
	}, ...]
	clickhouse?: [{
		resources?: [{
			disk_size:          number
			disk_type_id:       string
			resource_preset_id: string
		}, ...]
	}, ...]
	database?: [{
		name: string
	}, ...]
	host?: [{
		type:              string
		zone:              string
		assign_public_ip?: bool
	}, ...]
	timeouts?: {
		create?: string
		delete?: string
		update?: string
	}
	user?: [{
		name:     string
		password: string
		permission?: [{
			database_name: string
		}, ...]
	}, ...]
	zookeeper?: [{
		resources?: [{}, ...]
	}, ...]
}
#YandexMdbMongodbClusterResource: {
	environment: string
	name:        string
	network_id:  string
	cluster_config?: [{
		version: string
		access?: [{}, ...]
		backup_window_start?: [{
			hours?:   number
			minutes?: number
		}, ...]
	}, ...]
	database?: [{
		name: string
	}, ...]
	host?: [{
		subnet_id: string
		zone_id:   string
	}, ...]
	resources?: [{
		disk_size:          number
		disk_type_id:       string
		resource_preset_id: string
	}, ...]
	timeouts?: {
		create?: string
		delete?: string
		update?: string
	}
	user?: [{
		name:     string
		password: string
		permission?: [{
			database_name: string
			roles?: [string, ...]
		}, ...]
	}, ...]
}
#YandexMdbMysqlClusterResource: {
	environment:  string
	name:         string
	network_id:   string
	version:      string
	description?: string
	labels?: [_]: string
	backup_window_start?: [{
		hours?:   number
		minutes?: number
	}, ...]
	database?: [{
		name: string
	}, ...]
	host?: [{
		zone:              string
		assign_public_ip?: bool
	}, ...]
	resources?: [{
		disk_size:          number
		disk_type_id:       string
		resource_preset_id: string
	}, ...]
	timeouts?: {
		create?: string
		delete?: string
		update?: string
	}
	user?: [{
		name:     string
		password: string
		permission?: [{
			database_name: string
			roles?: [string, ...]
		}, ...]
	}, ...]
}
#YandexMdbPostgresqlClusterResource: {
	environment:  string
	name:         string
	network_id:   string
	description?: string
	labels?: [_]: string
	config?: [{
		version: string
		access?: [{
			data_lens?: bool
		}, ...]
		backup_window_start?: [{
			hours?:   number
			minutes?: number
		}, ...]
		pooler_config?: [{
			pool_discard?: bool
			pooling_mode?: string
		}, ...]
		resources?: [{
			disk_size:          number
			resource_preset_id: string
			disk_type_id?:      string
		}, ...]
	}, ...]
	database?: [{
		name:        string
		owner:       string
		lc_collate?: string
		lc_type?:    string
		extension?: [{
			name:     string
			version?: string
		}, ...]
	}, ...]
	host?: [{
		zone:              string
		assign_public_ip?: bool
	}, ...]
	timeouts?: {
		create?: string
		delete?: string
		update?: string
	}
	user?: [{
		name:     string
		password: string
		grants?: [string, ...]
		login?: bool
		permission?: [{
			database_name: string
		}, ...]
	}, ...]
}
#YandexMdbRedisClusterResource: {
	environment:  string
	name:         string
	network_id:   string
	description?: string
	labels?: [_]: string
	sharded?: bool
	config?: [{
		password: string
	}, ...]
	host?: [{
		zone: string
	}, ...]
	resources?: [{
		disk_size:          number
		resource_preset_id: string
	}, ...]
	timeouts?: {
		create?: string
		delete?: string
		update?: string
	}
}
#YandexResourcemanagerCloudIamBindingResource: {
	cloud_id: string
	members: [string, ...]
	role:         string
	sleep_after?: number
}
#YandexResourcemanagerCloudIamMemberResource: {
	cloud_id:     string
	member:       string
	role:         string
	sleep_after?: number
}
#YandexResourcemanagerFolderIamBindingResource: {
	folder_id: string
	members: [string, ...]
	role:         string
	sleep_after?: number
}
#YandexResourcemanagerFolderIamMemberResource: {
	folder_id:    string
	member:       string
	role:         string
	sleep_after?: number
}
#YandexResourcemanagerFolderIamPolicyResource: {
	folder_id:   string
	policy_data: string
}
#YandexStorageBucketResource: {
	access_key?:    string
	acl?:           string
	bucket_prefix?: string
	force_destroy?: bool
	secret_key?:    string
	cors_rule?: [{
		allowed_methods: [string, ...]
		allowed_origins: [string, ...]
		allowed_headers?: [string, ...]
		expose_headers?: [string, ...]
		max_age_seconds?: number
	}, ...]
	grant?: [{
		permissions: [string, ...]
		type: string
		id?:  string
		uri?: string
	}, ...]
	website?: [{
		error_document?: string
		index_document?: string
	}, ...]
}
#YandexStorageObjectResource: {
	bucket:          string
	key:             string
	access_key?:     string
	acl?:            string
	content?:        string
	content_base64?: string
	secret_key?:     string
	source?:         string
}
#YandexVpcNetworkResource: {
	description?: string
	labels?: [_]: string
	timeouts?: {
		create?: string
		delete?: string
		update?: string
	}
}
#YandexVpcRouteTableResource: {
	network_id:   string
	description?: string
	labels?: [_]: string
	name?: string
	static_route?: [{
		destination_prefix?: string
		next_hop_address?:   string
	}, ...]
	timeouts?: {
		create?: string
		delete?: string
		update?: string
	}
}
#YandexVpcSecurityGroupResource: {
	network_id:   string
	description?: string
	labels?: [_]: string
	name?: string
	egress?: [{
		protocol:     string
		description?: string
		from_port?:   number
		labels?: [_]: string
		port?:    number
		to_port?: number
		v4_cidr_blocks?: [string, ...]
		v6_cidr_blocks?: [string, ...]
	}, ...]
	ingress?: [{
		protocol:     string
		description?: string
		from_port?:   number
		labels?: [_]: string
		port?:    number
		to_port?: number
		v4_cidr_blocks?: [string, ...]
		v6_cidr_blocks?: [string, ...]
	}, ...]
	timeouts?: {
		create?: string
		delete?: string
		update?: string
	}
}
#YandexVpcSubnetResource: {
	network_id: string
	v4_cidr_blocks: [string, ...]
	description?: string
	labels?: [_]: string
	timeouts?: {
		create?: string
		delete?: string
		update?: string
	}
}
#Resources: {
	yandex_compute_disk?: [_]:                          #YandexComputeDiskResource
	yandex_compute_image?: [_]:                         #YandexComputeImageResource
	yandex_compute_instance?: [_]:                      #YandexComputeInstanceResource
	yandex_compute_instance_group?: [_]:                #YandexComputeInstanceGroupResource
	yandex_compute_snapshot?: [_]:                      #YandexComputeSnapshotResource
	yandex_container_registry?: [_]:                    #YandexContainerRegistryResource
	yandex_dataproc_cluster?: [_]:                      #YandexDataprocClusterResource
	yandex_function?: [_]:                              #YandexFunctionResource
	yandex_function_iam_binding?: [_]:                  #YandexFunctionIamBindingResource
	yandex_function_trigger?: [_]:                      #YandexFunctionTriggerResource
	yandex_iam_service_account?: [_]:                   #YandexIamServiceAccountResource
	yandex_iam_service_account_api_key?: [_]:           #YandexIamServiceAccountApiKeyResource
	yandex_iam_service_account_iam_binding?: [_]:       #YandexIamServiceAccountIamBindingResource
	yandex_iam_service_account_iam_member?: [_]:        #YandexIamServiceAccountIamMemberResource
	yandex_iam_service_account_iam_policy?: [_]:        #YandexIamServiceAccountIamPolicyResource
	yandex_iam_service_account_key?: [_]:               #YandexIamServiceAccountKeyResource
	yandex_iam_service_account_static_access_key?: [_]: #YandexIamServiceAccountStaticAccessKeyResource
	yandex_iot_core_device?: [_]:                       #YandexIotCoreDeviceResource
	yandex_iot_core_registry?: [_]:                     #YandexIotCoreRegistryResource
	yandex_kms_secret_ciphertext?: [_]:                 #YandexKmsSecretCiphertextResource
	yandex_kms_symmetric_key?: [_]:                     #YandexKmsSymmetricKeyResource
	yandex_kubernetes_cluster?: [_]:                    #YandexKubernetesClusterResource
	yandex_kubernetes_node_group?: [_]:                 #YandexKubernetesNodeGroupResource
	yandex_lb_network_load_balancer?: [_]:              #YandexLbNetworkLoadBalancerResource
	yandex_lb_target_group?: [_]:                       #YandexLbTargetGroupResource
	yandex_mdb_clickhouse_cluster?: [_]:                #YandexMdbClickhouseClusterResource
	yandex_mdb_mongodb_cluster?: [_]:                   #YandexMdbMongodbClusterResource
	yandex_mdb_mysql_cluster?: [_]:                     #YandexMdbMysqlClusterResource
	yandex_mdb_postgresql_cluster?: [_]:                #YandexMdbPostgresqlClusterResource
	yandex_mdb_redis_cluster?: [_]:                     #YandexMdbRedisClusterResource
	yandex_resourcemanager_cloud_iam_binding?: [_]:     #YandexResourcemanagerCloudIamBindingResource
	yandex_resourcemanager_cloud_iam_member?: [_]:      #YandexResourcemanagerCloudIamMemberResource
	yandex_resourcemanager_folder_iam_binding?: [_]:    #YandexResourcemanagerFolderIamBindingResource
	yandex_resourcemanager_folder_iam_member?: [_]:     #YandexResourcemanagerFolderIamMemberResource
	yandex_resourcemanager_folder_iam_policy?: [_]:     #YandexResourcemanagerFolderIamPolicyResource
	yandex_storage_bucket?: [_]:                        #YandexStorageBucketResource
	yandex_storage_object?: [_]:                        #YandexStorageObjectResource
	yandex_vpc_network?: [_]:                           #YandexVpcNetworkResource
	yandex_vpc_route_table?: [_]:                       #YandexVpcRouteTableResource
	yandex_vpc_security_group?: [_]:                    #YandexVpcSecurityGroupResource
	yandex_vpc_subnet?: [_]:                            #YandexVpcSubnetResource
}
