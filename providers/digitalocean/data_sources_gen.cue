// Generated by cue-terraform-gen (https://github.com/tnarg/cue_terraform_gen). DO NOT EDIT.
package digitalocean

#DigitaloceanAccountDataSource: {
	droplet_limit?:     number
	email?:             string
	email_verified?:    bool
	floating_ip_limit?: number
	id?:                string
	status?:            string
	status_message?:    string
	uuid?:              string
}
#DigitaloceanAppDataSource: {
	app_id:                string
	active_deployment_id?: string
	created_at?:           string
	default_ingress?:      string
	id?:                   string
	live_url?:             string
	spec?: [{
		database: [{
			cluster_name: string
			db_name:      string
			db_user:      string
			engine:       string
			name:         string
			production:   bool
			version:      string
		}, ...]
		domains: [string, ...]
		name:   string
		region: string
		service: [{
			build_command:   string
			dockerfile_path: string
			env: [{
				key:   string
				scope: string
				type:  string
				value: string
			}, ...]
			environment_slug: string
			git: [{
				branch:         string
				repo_clone_url: string
			}, ...]
			github: [{
				branch:         string
				deploy_on_push: bool
				repo:           string
			}, ...]
			health_check: [{
				failure_threshold:     number
				http_path:             string
				initial_delay_seconds: number
				period_seconds:        number
				success_threshold:     number
				timeout_seconds:       number
			}, ...]
			http_port:          number
			instance_count:     number
			instance_size_slug: string
			name:               string
			routes: [{
				path: string
			}, ...]
			run_command: string
			source_dir:  string
		}, ...]
		static_site: [{
			build_command:   string
			dockerfile_path: string
			env: [{
				key:   string
				scope: string
				type:  string
				value: string
			}, ...]
			environment_slug: string
			error_document:   string
			git: [{
				branch:         string
				repo_clone_url: string
			}, ...]
			github: [{
				branch:         string
				deploy_on_push: bool
				repo:           string
			}, ...]
			index_document: string
			name:           string
			output_dir:     string
			routes: [{
				path: string
			}, ...]
			source_dir: string
		}, ...]
		worker: [{
			build_command:   string
			dockerfile_path: string
			env: [{
				key:   string
				scope: string
				type:  string
				value: string
			}, ...]
			environment_slug: string
			git: [{
				branch:         string
				repo_clone_url: string
			}, ...]
			github: [{
				branch:         string
				deploy_on_push: bool
				repo:           string
			}, ...]
			instance_count:     number
			instance_size_slug: string
			name:               string
			routes: [{
				path: string
			}, ...]
			run_command: string
			source_dir:  string
		}, ...]
	}, ...]
	updated_at?: string
}
#DigitaloceanCertificateDataSource: {
	name: string
	domains?: [string, ...]
	id?:               string
	not_after?:        string
	sha1_fingerprint?: string
	state?:            string
	type?:             string
}
#DigitaloceanContainerRegistryDataSource: {
	name:        string
	endpoint?:   string
	id?:         string
	server_url?: string
}
#DigitaloceanDatabaseClusterDataSource: {
	name:      string
	database?: string
	engine?:   string
	host?:     string
	id?:       string
	maintenance_window?: [{
		day:  string
		hour: string
	}, ...]
	node_count?:           number
	password?:             string
	port?:                 number
	private_host?:         string
	private_network_uuid?: string
	private_uri?:          string
	region?:               string
	size?:                 string
	tags?: [string, ...]
	uri?:     string
	urn?:     string
	user?:    string
	version?: string
}
#DigitaloceanDomainDataSource: {
	name:       string
	id?:        string
	ttl?:       number
	urn?:       string
	zone_file?: string
}
#DigitaloceanDomainsDataSource: {
	domains?: [{
		name: string
		ttl:  number
		urn:  string
	}, ...]
	id?: string
	filter?: [{
		key: string
		values: [string, ...]
		all?:      bool
		match_by?: string
	}, ...]
	sort?: [{
		key:        string
		direction?: string
	}, ...]
}
#DigitaloceanDropletDataSource: {
	backups?:              bool
	created_at?:           string
	disk?:                 number
	id?:                   number
	image?:                string
	ipv4_address?:         string
	ipv4_address_private?: string
	ipv6?:                 bool
	ipv6_address?:         string
	ipv6_address_private?: string
	locked?:               bool
	memory?:               number
	monitoring?:           bool
	name?:                 string
	price_hourly?:         number
	price_monthly?:        number
	private_networking?:   bool
	region?:               string
	size?:                 string
	status?:               string
	tag?:                  string
	tags?: [string, ...]
	urn?:   string
	vcpus?: number
	volume_ids?: [string, ...]
	vpc_uuid?: string
}
#DigitaloceanDropletSnapshotDataSource: {
	created_at?:    string
	droplet_id?:    string
	id?:            string
	min_disk_size?: number
	most_recent?:   bool
	name?:          string
	name_regex?:    string
	region?:        string
	regions?: [string, ...]
	size?: number
}
#DigitaloceanDropletsDataSource: {
	droplets?: [{
		backups:              bool
		created_at:           string
		disk:                 number
		id:                   number
		image:                string
		ipv4_address:         string
		ipv4_address_private: string
		ipv6:                 bool
		ipv6_address:         string
		ipv6_address_private: string
		locked:               bool
		memory:               number
		monitoring:           bool
		name:                 string
		price_hourly:         number
		price_monthly:        number
		private_networking:   bool
		region:               string
		size:                 string
		status:               string
		tags: [string, ...]
		urn:   string
		vcpus: number
		volume_ids: [string, ...]
		vpc_uuid: string
	}, ...]
	id?: string
	filter?: [{
		key: string
		values: [string, ...]
		all?:      bool
		match_by?: string
	}, ...]
	sort?: [{
		key:        string
		direction?: string
	}, ...]
}
#DigitaloceanFloatingIpDataSource: {
	ip_address:  string
	droplet_id?: number
	id?:         string
	region?:     string
	urn?:        string
}
#DigitaloceanImageDataSource: {
	created?:       string
	distribution?:  string
	error_message?: string
	id?:            number
	image?:         string
	min_disk_size?: number
	name?:          string
	private?:       bool
	regions?: [string, ...]
	size_gigabytes?: number
	slug?:           string
	source?:         string
	status?:         string
	tags?: [string, ...]
	type?: string
}
#DigitaloceanImagesDataSource: {
	id?: string
	images?: [{
		created:       string
		distribution:  string
		error_message: string
		id:            number
		image:         string
		min_disk_size: number
		name:          string
		private:       bool
		regions: [string, ...]
		size_gigabytes: number
		slug:           string
		status:         string
		tags: [string, ...]
		type: string
	}, ...]
	filter?: [{
		key: string
		values: [string, ...]
		all?:      bool
		match_by?: string
	}, ...]
	sort?: [{
		key:        string
		direction?: string
	}, ...]
}
#DigitaloceanKubernetesClusterDataSource: {
	name:            string
	auto_upgrade?:   bool
	cluster_subnet?: string
	created_at?:     string
	endpoint?:       string
	id?:             string
	ipv4_address?:   string
	kube_config?: [{
		client_certificate:     string
		client_key:             string
		cluster_ca_certificate: string
		expires_at:             string
		host:                   string
		raw_config:             string
		token:                  string
	}, ...]
	node_pool?: [{
		actual_node_count: number
		auto_scale:        bool
		id:                string
		labels: [_]: string
		max_nodes:  number
		min_nodes:  number
		name:       string
		node_count: number
		nodes: [{
			created_at: string
			droplet_id: string
			id:         string
			name:       string
			status:     string
			updated_at: string
		}, ...]
		size: string
		tags: [string, ...]
	}, ...]
	region?:         string
	service_subnet?: string
	status?:         string
	surge_upgrade?:  bool
	tags?: [string, ...]
	updated_at?: string
	version?:    string
	vpc_uuid?:   string
}
#DigitaloceanKubernetesVersionsDataSource: {
	id?:             string
	latest_version?: string
	valid_versions?: [string, ...]
	version_prefix?: string
}
#DigitaloceanLoadbalancerDataSource: {
	name:       string
	algorithm?: string
	droplet_ids?: [number, ...]
	droplet_tag?:              string
	enable_backend_keepalive?: bool
	enable_proxy_protocol?:    bool
	forwarding_rule?: [{
		certificate_id:  string
		entry_port:      number
		entry_protocol:  string
		target_port:     number
		target_protocol: string
		tls_passthrough: bool
	}, ...]
	healthcheck?: [{
		check_interval_seconds:   number
		healthy_threshold:        number
		path:                     string
		port:                     number
		protocol:                 string
		response_timeout_seconds: number
		unhealthy_threshold:      number
	}, ...]
	id?:                     string
	ip?:                     string
	redirect_http_to_https?: bool
	region?:                 string
	status?:                 string
	sticky_sessions?: [{
		cookie_name:        string
		cookie_ttl_seconds: number
		type:               string
	}, ...]
	urn?:      string
	vpc_uuid?: string
}
#DigitaloceanProjectDataSource: {
	created_at?:  string
	description?: string
	environment?: string
	id?:          string
	is_default?:  bool
	name?:        string
	owner_id?:    number
	owner_uuid?:  string
	purpose?:     string
	resources?: [string, ...]
	updated_at?: string
}
#DigitaloceanProjectsDataSource: {
	id?: string
	projects?: [{
		created_at:  string
		description: string
		environment: string
		id:          string
		is_default:  bool
		name:        string
		owner_id:    number
		owner_uuid:  string
		purpose:     string
		resources: [string, ...]
		updated_at: string
	}, ...]
	filter?: [{
		key: string
		values: [string, ...]
		all?:      bool
		match_by?: string
	}, ...]
	sort?: [{
		key:        string
		direction?: string
	}, ...]
}
#DigitaloceanRecordDataSource: {
	domain:    string
	name:      string
	data?:     string
	flags?:    number
	id?:       string
	port?:     number
	priority?: number
	tag?:      string
	ttl?:      number
	type?:     string
	weight?:   number
}
#DigitaloceanRegionDataSource: {
	slug:       string
	available?: bool
	features?: [string, ...]
	id?:   string
	name?: string
	sizes?: [string, ...]
}
#DigitaloceanRegionsDataSource: {
	id?: string
	regions?: [{
		available: bool
		features: [string, ...]
		name: string
		sizes: [string, ...]
		slug: string
	}, ...]
	filter?: [{
		key: string
		values: [string, ...]
		all?:      bool
		match_by?: string
	}, ...]
	sort?: [{
		key:        string
		direction?: string
	}, ...]
}
#DigitaloceanSizesDataSource: {
	id?: string
	sizes?: [{
		available:     bool
		disk:          number
		memory:        number
		price_hourly:  number
		price_monthly: number
		regions: [string, ...]
		slug:     string
		transfer: number
		vcpus:    number
	}, ...]
	filter?: [{
		key: string
		values: [string, ...]
		all?:      bool
		match_by?: string
	}, ...]
	sort?: [{
		key:        string
		direction?: string
	}, ...]
}
#DigitaloceanSpacesBucketDataSource: {
	name:                string
	region:              string
	bucket_domain_name?: string
	id?:                 string
	urn?:                string
}
#DigitaloceanSpacesBucketObjectDataSource: {
	bucket:               string
	key:                  string
	region:               string
	body?:                string
	cache_control?:       string
	content_disposition?: string
	content_encoding?:    string
	content_language?:    string
	content_length?:      number
	content_type?:        string
	etag?:                string
	expiration?:          string
	expires?:             string
	id?:                  string
	last_modified?:       string
	metadata?: [_]: string
	range?:                     string
	version_id?:                string
	website_redirect_location?: string
}
#DigitaloceanSpacesBucketObjectsDataSource: {
	bucket: string
	region: string
	common_prefixes?: [string, ...]
	delimiter?:     string
	encoding_type?: string
	id?:            string
	keys?: [string, ...]
	max_keys?: number
	owners?: [string, ...]
	prefix?: string
}
#DigitaloceanSpacesBucketsDataSource: {
	buckets?: [{
		bucket_domain_name: string
		name:               string
		region:             string
		urn:                string
	}, ...]
	id?: string
	filter?: [{
		key: string
		values: [string, ...]
		all?:      bool
		match_by?: string
	}, ...]
	sort?: [{
		key:        string
		direction?: string
	}, ...]
}
#DigitaloceanSshKeyDataSource: {
	name:         string
	fingerprint?: string
	id?:          string
	public_key?:  string
}
#DigitaloceanTagDataSource: {
	name:                    string
	databases_count?:        number
	droplets_count?:         number
	id?:                     string
	images_count?:           number
	total_resource_count?:   number
	volume_snapshots_count?: number
	volumes_count?:          number
}
#DigitaloceanTagsDataSource: {
	id?: string
	tags?: [{
		databases_count:        number
		droplets_count:         number
		images_count:           number
		name:                   string
		total_resource_count:   number
		volume_snapshots_count: number
		volumes_count:          number
	}, ...]
	filter?: [{
		key: string
		values: [string, ...]
		all?:      bool
		match_by?: string
	}, ...]
	sort?: [{
		key:        string
		direction?: string
	}, ...]
}
#DigitaloceanVolumeDataSource: {
	name:         string
	description?: string
	droplet_ids?: [number, ...]
	filesystem_label?: string
	filesystem_type?:  string
	id?:               string
	region?:           string
	size?:             number
	tags?: [string, ...]
	urn?: string
}
#DigitaloceanVolumeSnapshotDataSource: {
	created_at?:    string
	id?:            string
	min_disk_size?: number
	most_recent?:   bool
	name?:          string
	name_regex?:    string
	region?:        string
	regions?: [string, ...]
	size?: number
	tags?: [string, ...]
	volume_id?: string
}
#DigitaloceanVpcDataSource: {
	created_at?:  string
	default?:     bool
	description?: string
	id?:          string
	ip_range?:    string
	name?:        string
	region?:      string
	urn?:         string
}
#DataSources: {
	digitalocean_account?: [_]:               #DigitaloceanAccountDataSource
	digitalocean_app?: [_]:                   #DigitaloceanAppDataSource
	digitalocean_certificate?: [_]:           #DigitaloceanCertificateDataSource
	digitalocean_container_registry?: [_]:    #DigitaloceanContainerRegistryDataSource
	digitalocean_database_cluster?: [_]:      #DigitaloceanDatabaseClusterDataSource
	digitalocean_domain?: [_]:                #DigitaloceanDomainDataSource
	digitalocean_domains?: [_]:               #DigitaloceanDomainsDataSource
	digitalocean_droplet?: [_]:               #DigitaloceanDropletDataSource
	digitalocean_droplet_snapshot?: [_]:      #DigitaloceanDropletSnapshotDataSource
	digitalocean_droplets?: [_]:              #DigitaloceanDropletsDataSource
	digitalocean_floating_ip?: [_]:           #DigitaloceanFloatingIpDataSource
	digitalocean_image?: [_]:                 #DigitaloceanImageDataSource
	digitalocean_images?: [_]:                #DigitaloceanImagesDataSource
	digitalocean_kubernetes_cluster?: [_]:    #DigitaloceanKubernetesClusterDataSource
	digitalocean_kubernetes_versions?: [_]:   #DigitaloceanKubernetesVersionsDataSource
	digitalocean_loadbalancer?: [_]:          #DigitaloceanLoadbalancerDataSource
	digitalocean_project?: [_]:               #DigitaloceanProjectDataSource
	digitalocean_projects?: [_]:              #DigitaloceanProjectsDataSource
	digitalocean_record?: [_]:                #DigitaloceanRecordDataSource
	digitalocean_region?: [_]:                #DigitaloceanRegionDataSource
	digitalocean_regions?: [_]:               #DigitaloceanRegionsDataSource
	digitalocean_sizes?: [_]:                 #DigitaloceanSizesDataSource
	digitalocean_spaces_bucket?: [_]:         #DigitaloceanSpacesBucketDataSource
	digitalocean_spaces_bucket_object?: [_]:  #DigitaloceanSpacesBucketObjectDataSource
	digitalocean_spaces_bucket_objects?: [_]: #DigitaloceanSpacesBucketObjectsDataSource
	digitalocean_spaces_buckets?: [_]:        #DigitaloceanSpacesBucketsDataSource
	digitalocean_ssh_key?: [_]:               #DigitaloceanSshKeyDataSource
	digitalocean_tag?: [_]:                   #DigitaloceanTagDataSource
	digitalocean_tags?: [_]:                  #DigitaloceanTagsDataSource
	digitalocean_volume?: [_]:                #DigitaloceanVolumeDataSource
	digitalocean_volume_snapshot?: [_]:       #DigitaloceanVolumeSnapshotDataSource
	digitalocean_vpc?: [_]:                   #DigitaloceanVpcDataSource
}
