// Generated by cue-terraform-gen (https://github.com/tnarg/cue_terraform_gen). DO NOT EDIT.
package nutanix

#NutanixAccessControlPoliciesDataSource: {
	api_version?: string
	entities?: [{
		access_control_policy_id: string
		api_version:              string
		categories: [{
			name:  string
			value: string
		}, ...]
		context_filter_list: [{
			entity_filter_expression_list: [{
				left_hand_side_entity_type: string
				operator:                   string
				right_hand_side: [{
					categories: [{
						name: string
						value: [string, ...]
					}, ...]
					collection: string
					uuid_list: [string, ...]
				}, ...]
			}, ...]
			scope_filter_expression_list: [{
				left_hand_side: string
				operator:       string
				right_hand_side: [{
					categories: [{
						name: string
						value: [string, ...]
					}, ...]
					collection: string
					uuid_list: [string, ...]
				}, ...]
			}, ...]
		}, ...]
		description: string
		metadata: [_]: string
		name: string
		owner_reference: [_]:   string
		project_reference: [_]: string
		role_reference: [{
			kind: string
			name: string
			uuid: string
		}, ...]
		state: string
		user_group_reference_list: [{
			kind: string
			name: string
			uuid: string
		}, ...]
		user_reference_list: [{
			kind: string
			name: string
			uuid: string
		}, ...]
	}, ...]
	id?: string
	metadata?: [{
		filter?:         string
		kind?:           string
		length?:         number
		offset?:         number
		sort_attribute?: string
		sort_order?:     string
	}, ...]
}
#NutanixAccessControlPolicyDataSource: {
	access_control_policy_id?:   string
	access_control_policy_name?: string
	api_version?:                string
	context_filter_list?: [{
		entity_filter_expression_list: [{
			left_hand_side_entity_type: string
			operator:                   string
			right_hand_side: [{
				categories: [{
					name: string
					value: [string, ...]
				}, ...]
				collection: string
				uuid_list: [string, ...]
			}, ...]
		}, ...]
		scope_filter_expression_list: [{
			left_hand_side: string
			operator:       string
			right_hand_side: [{
				categories: [{
					name: string
					value: [string, ...]
				}, ...]
				collection: string
				uuid_list: [string, ...]
			}, ...]
		}, ...]
	}, ...]
	description?: string
	id?:          string
	metadata?: [_]: string
	name?: string
	owner_reference?: [_]:   string
	project_reference?: [_]: string
	role_reference?: [{
		kind: string
		name: string
		uuid: string
	}, ...]
	state?: string
	user_group_reference_list?: [{
		kind: string
		name: string
		uuid: string
	}, ...]
	user_reference_list?: [{
		kind: string
		name: string
		uuid: string
	}, ...]
	categories?: [{
		name?:  string
		value?: string
	}, ...]
}
#NutanixCategoryKeyDataSource: {
	name:            string
	api_version?:    string
	description?:    string
	id?:             string
	system_defined?: bool
	values?: [string, ...]
}
#NutanixClusterDataSource: {
	analysis_vm_efficiency_map?: [_]: string
	api_version?: string
	authorized_public_key_list?: [{
		key:  string
		name: string
	}, ...]
	build?: [_]: string
	ca_certificate_list?: [{
		ca_name:     string
		certificate: string
	}, ...]
	certification_signing_info?: [_]: string
	client_auth?: [_]:                string
	cluster_arch?: string
	cluster_id?:   string
	domain_server_credentials?: [_]: string
	domain_server_name?:       string
	domain_server_nameserver?: string
	enabled_feature_list?: [string, ...]
	encryption_status?:         string
	external_data_services_ip?: string
	external_ip?:               string
	external_subnet?:           string
	gpu_driver_version?:        string
	http_proxy_list?: [{
		address: [_]:     string
		credentials: [_]: string
		proxy_type_list: [string, ...]
	}, ...]
	http_proxy_whitelist?: [{
		target:      string
		target_type: string
	}, ...]
	id?:              string
	internal_subnet?: string
	is_available?:    bool
	management_server_list?: [{
		drs_enabled: bool
		ip:          string
		status_list: [string, ...]
		type: string
	}, ...]
	masquerading_ip?:   string
	masquerading_port?: number
	metadata?: [_]: string
	name?: string
	name_server_ip_list?: [string, ...]
	nfs_subnet_whitelist?: [string, ...]
	nodes?: [{
		ip:      string
		type:    string
		version: string
	}, ...]
	ntp_server_ip_list?: [string, ...]
	operation_mode?: string
	owner_reference?: [_]:   string
	project_reference?: [_]: string
	service_list?: [string, ...]
	smtp_server_address?: [_]:     string
	smtp_server_credentials?: [_]: string
	smtp_server_email_address?: string
	smtp_server_proxy_type_list?: [string, ...]
	smtp_server_type?: string
	software_map_ncc?: [_]: string
	software_map_nos?: [_]: string
	ssl_key_expire_datetime?: string
	ssl_key_name?:            string
	ssl_key_signing_info?: [_]: string
	ssl_key_type?:                    string
	state?:                           string
	supported_information_verbosity?: string
	timezone?:                        string
	categories?: [{
		name?:  string
		value?: string
	}, ...]
}
#NutanixClustersDataSource: {
	api_version?: string
	entities?: [{
		analysis_vm_efficiency_map: [_]: string
		api_version: string
		authorized_public_key_list: [{
			key:  string
			name: string
		}, ...]
		build: [_]: string
		ca_certificate_list: [{
			ca_name:     string
			certificate: string
		}, ...]
		categories: [{
			name:  string
			value: string
		}, ...]
		certification_signing_info: [_]: string
		client_auth: [_]:                string
		cluster_arch: string
		domain_server_credentials: [_]: string
		domain_server_name:       string
		domain_server_nameserver: string
		enabled_feature_list: [string, ...]
		encryption_status:         string
		external_data_services_ip: string
		external_ip:               string
		external_subnet:           string
		gpu_driver_version:        string
		http_proxy_list: [{
			address: [_]:     string
			credentials: [_]: string
			proxy_type_list: [string, ...]
		}, ...]
		http_proxy_whitelist: [{
			target:      string
			target_type: string
		}, ...]
		internal_subnet: string
		is_available:    bool
		management_server_list: [{
			drs_enabled: bool
			ip:          string
			status_list: [string, ...]
			type: string
		}, ...]
		masquerading_ip:   string
		masquerading_port: number
		metadata: [_]: string
		name: string
		name_server_ip_list: [string, ...]
		nfs_subnet_whitelist: [string, ...]
		nodes: [{
			ip:      string
			type:    string
			version: string
		}, ...]
		ntp_server_ip_list: [string, ...]
		operation_mode: string
		owner_reference: [_]:   string
		project_reference: [_]: string
		service_list: [string, ...]
		smtp_server_address: [_]:     string
		smtp_server_credentials: [_]: string
		smtp_server_email_address: string
		smtp_server_proxy_type_list: [string, ...]
		smtp_server_type: string
		software_map_ncc: [_]: string
		software_map_nos: [_]: string
		ssl_key_expire_datetime: string
		ssl_key_name:            string
		ssl_key_signing_info: [_]: string
		ssl_key_type:                    string
		state:                           string
		supported_information_verbosity: string
		timezone:                        string
	}, ...]
	id?: string
}
#NutanixHostDataSource: {
	host_id:      string
	api_version?: string
	block?: [_]:             string
	cluster_reference?: [_]: string
	controller_vm?: [_]:     string
	cpu_capacity_hz?: number
	cpu_model?:       string
	failover_cluster?: [_]: string
	gpu_driver_version?: string
	gpu_list?: [{
		assignable: bool
		consumer_reference: [_]: string
		device_id:             number
		fraction:              number
		frame_buffer_size_mib: number
		guest_driver_version:  string
		index:                 number
		license_list: [string, ...]
		max_resolution:            string
		mode:                      string
		name:                      string
		num_vgpus_allocated:       number
		num_virtual_display_heads: number
		numa_node:                 number
		pci_address:               string
		status:                    string
		uuid:                      string
		vendor:                    string
	}, ...]
	host_disks_reference_list?: [{
		kind: string
		name: string
		uuid: string
	}, ...]
	host_nics_id_list?: [string, ...]
	host_type?: string
	hypervisor?: [_]: string
	id?: string
	ipmi?: [_]: string
	memory_capacity_mib?: number
	metadata?: [_]: string
	monitoring_state?: string
	name?:             string
	num_cpu_cores?:    number
	num_cpu_sockets?:  number
	owner_reference?: [_]:         string
	project_reference?: [_]:       string
	rackable_unit_reference?: [_]: string
	serial_number?: string
	windows_domain?: [_]: string
	categories?: [{
		name?:  string
		value?: string
	}, ...]
}
#NutanixHostsDataSource: {
	api_version?: string
	entities?: [{
		api_version: string
		block: [_]: string
		categories: [{
			name:  string
			value: string
		}, ...]
		cluster_reference: [_]: string
		controller_vm: [_]:     string
		cpu_capacity_hz: number
		cpu_model:       string
		failover_cluster: [_]: string
		gpu_driver_version: string
		gpu_list: [{
			assignable: bool
			consumer_reference: [_]: string
			device_id:             number
			fraction:              number
			frame_buffer_size_mib: number
			guest_driver_version:  string
			index:                 number
			license_list: [string, ...]
			max_resolution:            string
			mode:                      string
			name:                      string
			num_vgpus_allocated:       number
			num_virtual_display_heads: number
			numa_node:                 number
			pci_address:               string
			status:                    string
			uuid:                      string
			vendor:                    string
		}, ...]
		host_disks_reference_list: [{
			kind: string
			name: string
			uuid: string
		}, ...]
		host_nics_id_list: [string, ...]
		host_type: string
		hypervisor: [_]: string
		ipmi: [_]:       string
		memory_capacity_mib: number
		metadata: [_]: string
		monitoring_state: string
		name:             string
		num_cpu_cores:    number
		num_cpu_sockets:  number
		owner_reference: [_]:         string
		project_reference: [_]:       string
		rackable_unit_reference: [_]: string
		serial_number: string
		windows_domain: [_]: string
	}, ...]
	id?: string
}
#NutanixImageDataSource: {
	api_version?:  string
	architecture?: string
	availability_zone_reference?: [_]: string
	checksum?: [_]:                    string
	cluster_name?: string
	cluster_uuid?: string
	description?:  string
	id?:           string
	image_id?:     string
	image_name?:   string
	image_type?:   string
	metadata?: [_]: string
	name?: string
	owner_reference?: [_]:   string
	project_reference?: [_]: string
	retrieval_uri_list?: [string, ...]
	size_bytes?: number
	source_uri?: string
	state?:      string
	version?: [_]: string
	categories?: [{
		name?:  string
		value?: string
	}, ...]
}
#NutanixKarbonClusterDataSource: {
	deployment_type?: string
	etcd_node_pool?: [{
		ahv_config: [{
			cpu:                        number
			disk_mib:                   number
			memory_mib:                 number
			network_uuid:               string
			prism_element_cluster_uuid: string
		}, ...]
		name:            string
		node_os_version: string
		nodes: [{
			hostname:     string
			ipv4_address: string
		}, ...]
		num_instances: number
	}, ...]
	id?:                          string
	karbon_cluster_id?:           string
	karbon_cluster_name?:         string
	kubeapi_server_ipv4_address?: string
	master_node_pool?: [{
		ahv_config: [{
			cpu:                        number
			disk_mib:                   number
			memory_mib:                 number
			network_uuid:               string
			prism_element_cluster_uuid: string
		}, ...]
		name:            string
		node_os_version: string
		nodes: [{
			hostname:     string
			ipv4_address: string
		}, ...]
		num_instances: number
	}, ...]
	name?:    string
	status?:  string
	uuid?:    string
	version?: string
	worker_node_pool?: [{
		ahv_config: [{
			cpu:                        number
			disk_mib:                   number
			memory_mib:                 number
			network_uuid:               string
			prism_element_cluster_uuid: string
		}, ...]
		name:            string
		node_os_version: string
		nodes: [{
			hostname:     string
			ipv4_address: string
		}, ...]
		num_instances: number
	}, ...]
}
#NutanixKarbonClusterKubeconfigDataSource: {
	access_token?:           string
	cluster_ca_certificate?: string
	cluster_url?:            string
	id?:                     string
	karbon_cluster_id?:      string
	karbon_cluster_name?:    string
	name?:                   string
}
#NutanixKarbonClusterSshDataSource: {
	certificate?:         string
	expiry_time?:         string
	id?:                  string
	karbon_cluster_id?:   string
	karbon_cluster_name?: string
	private_key?:         string
	username?:            string
}
#NutanixKarbonClustersDataSource: {
	clusters?: [{
		deployment_type: string
		etcd_node_pool: [{
			ahv_config: [{
				cpu:                        number
				disk_mib:                   number
				memory_mib:                 number
				network_uuid:               string
				prism_element_cluster_uuid: string
			}, ...]
			name:            string
			node_os_version: string
			nodes: [{
				hostname:     string
				ipv4_address: string
			}, ...]
			num_instances: number
		}, ...]
		kubeapi_server_ipv4_address: string
		master_node_pool: [{
			ahv_config: [{
				cpu:                        number
				disk_mib:                   number
				memory_mib:                 number
				network_uuid:               string
				prism_element_cluster_uuid: string
			}, ...]
			name:            string
			node_os_version: string
			nodes: [{
				hostname:     string
				ipv4_address: string
			}, ...]
			num_instances: number
		}, ...]
		name:    string
		status:  string
		uuid:    string
		version: string
		worker_node_pool: [{
			ahv_config: [{
				cpu:                        number
				disk_mib:                   number
				memory_mib:                 number
				network_uuid:               string
				prism_element_cluster_uuid: string
			}, ...]
			name:            string
			node_os_version: string
			nodes: [{
				hostname:     string
				ipv4_address: string
			}, ...]
			num_instances: number
		}, ...]
	}, ...]
	id?: string
}
#NutanixKarbonPrivateRegistriesDataSource: {
	id?: string
	private_registries?: [{
		endpoint: string
		name:     string
		uuid:     string
	}, ...]
}
#NutanixKarbonPrivateRegistryDataSource: {
	endpoint?:              string
	id?:                    string
	name?:                  string
	private_registry_id?:   string
	private_registry_name?: string
	uuid?:                  string
}
#NutanixNetworkSecurityRuleDataSource: {
	network_security_rule_id: string
	ad_rule_action?:          string
	ad_rule_inbound_allow_list?: [{
		expiration_time: string
		filter_kind_list: [string, ...]
		filter_params: [{
			name: string
			values: [string, ...]
		}, ...]
		filter_type: string
		icmp_type_code_list: [{
			code: string
			type: string
		}, ...]
		ip_subnet:               string
		ip_subnet_prefix_length: string
		network_function_chain_reference: [_]: string
		peer_specification_type: string
		protocol:                string
		tcp_port_range_list: [{
			end_port:   number
			start_port: number
		}, ...]
		udp_port_range_list: [{
			end_port:   number
			start_port: number
		}, ...]
	}, ...]
	ad_rule_outbound_allow_list?: [{
		expiration_time: string
		filter_kind_list: [string, ...]
		filter_params: [{
			name: string
			values: [string, ...]
		}, ...]
		filter_type: string
		icmp_type_code_list: [{
			code: string
			type: string
		}, ...]
		ip_subnet:               string
		ip_subnet_prefix_length: string
		network_function_chain_reference: [_]: string
		peer_specification_type: string
		protocol:                string
		tcp_port_range_list: [{
			end_port:   number
			start_port: number
		}, ...]
		udp_port_range_list: [{
			end_port:   number
			start_port: number
		}, ...]
	}, ...]
	ad_rule_target_group_default_internal_policy?: string
	ad_rule_target_group_filter_kind_list?: [string, ...]
	ad_rule_target_group_filter_params?: [{
		name: string
		values: [string, ...]
	}, ...]
	ad_rule_target_group_filter_type?:             string
	ad_rule_target_group_peer_specification_type?: string
	api_version?:                                  string
	app_rule_action?:                              string
	app_rule_inbound_allow_list?: [{
		expiration_time: string
		filter_kind_list: [string, ...]
		filter_params: [{
			name: string
			values: [string, ...]
		}, ...]
		filter_type: string
		icmp_type_code_list: [{
			code: string
			type: string
		}, ...]
		ip_subnet:               string
		ip_subnet_prefix_length: string
		network_function_chain_reference: [_]: string
		peer_specification_type: string
		protocol:                string
		tcp_port_range_list: [{
			end_port:   number
			start_port: number
		}, ...]
		udp_port_range_list: [{
			end_port:   number
			start_port: number
		}, ...]
	}, ...]
	app_rule_outbound_allow_list?: [{
		expiration_time: string
		filter_kind_list: [string, ...]
		filter_params: [{
			name: string
			values: [string, ...]
		}, ...]
		filter_type: string
		icmp_type_code_list: [{
			code: string
			type: string
		}, ...]
		ip_subnet:               string
		ip_subnet_prefix_length: string
		network_function_chain_reference: [_]: string
		peer_specification_type: string
		protocol:                string
		tcp_port_range_list: [{
			end_port:   number
			start_port: number
		}, ...]
		udp_port_range_list: [{
			end_port:   number
			start_port: number
		}, ...]
	}, ...]
	app_rule_target_group_default_internal_policy?: string
	app_rule_target_group_filter_kind_list?: [string, ...]
	app_rule_target_group_filter_params?: [{
		name: string
		values: [string, ...]
	}, ...]
	app_rule_target_group_filter_type?:             string
	app_rule_target_group_peer_specification_type?: string
	description?:                                   string
	id?:                                            string
	isolation_rule_action?:                         string
	isolation_rule_first_entity_filter_kind_list?: [string, ...]
	isolation_rule_first_entity_filter_params?: [{
		name: string
		values: [string, ...]
	}, ...]
	isolation_rule_first_entity_filter_type?: string
	isolation_rule_second_entity_filter_kind_list?: [string, ...]
	isolation_rule_second_entity_filter_params?: [{
		name: string
		values: [string, ...]
	}, ...]
	isolation_rule_second_entity_filter_type?: string
	metadata?: [_]: string
	name?: string
	owner_reference?: [_]:   string
	project_reference?: [_]: string
	quarantine_rule_action?: string
	quarantine_rule_inbound_allow_list?: [{
		expiration_time: string
		filter_kind_list: [string, ...]
		filter_params: [{
			name: string
			values: [string, ...]
		}, ...]
		filter_type: string
		icmp_type_code_list: [{
			code: string
			type: string
		}, ...]
		ip_subnet:               string
		ip_subnet_prefix_length: string
		network_function_chain_reference: [_]: string
		peer_specification_type: string
		protocol:                string
		tcp_port_range_list: [{
			end_port:   number
			start_port: number
		}, ...]
		udp_port_range_list: [{
			end_port:   number
			start_port: number
		}, ...]
	}, ...]
	quarantine_rule_outbound_allow_list?: [{
		expiration_time: string
		filter_kind_list: [string, ...]
		filter_params: [{
			name: string
			values: [string, ...]
		}, ...]
		filter_type: string
		icmp_type_code_list: [{
			code: string
			type: string
		}, ...]
		ip_subnet:               string
		ip_subnet_prefix_length: string
		network_function_chain_reference: [_]: string
		peer_specification_type: string
		protocol:                string
		tcp_port_range_list: [{
			end_port:   number
			start_port: number
		}, ...]
		udp_port_range_list: [{
			end_port:   number
			start_port: number
		}, ...]
	}, ...]
	quarantine_rule_target_group_default_internal_policy?: string
	quarantine_rule_target_group_filter_kind_list?: [string, ...]
	quarantine_rule_target_group_filter_params?: [{
		name: string
		values: [string, ...]
	}, ...]
	quarantine_rule_target_group_filter_type?:             string
	quarantine_rule_target_group_peer_specification_type?: string
	categories?: [{
		name?:  string
		value?: string
	}, ...]
}
#NutanixPermissionDataSource: {
	api_version?: string
	description?: string
	fields?: [{
		field_mode: string
		field_name_list: [string, ...]
	}, ...]
	id?:   string
	kind?: string
	metadata?: [_]: string
	name?:      string
	operation?: string
	owner_reference?: [_]: string
	permission_id?:   string
	permission_name?: string
	project_reference?: [_]: string
	state?: string
	categories?: [{
		name?:  string
		value?: string
	}, ...]
}
#NutanixPermissionsDataSource: {
	api_version?: string
	entities?: [{
		api_version: string
		categories: [{
			name:  string
			value: string
		}, ...]
		description: string
		fields: [{
			field_mode: string
			field_name_list: [string, ...]
		}, ...]
		kind: string
		metadata: [_]: string
		name:      string
		operation: string
		owner_reference: [_]:   string
		project_reference: [_]: string
		state: string
	}, ...]
	id?: string
	metadata?: [{
		filter?:         string
		kind?:           string
		length?:         number
		offset?:         number
		sort_attribute?: string
		sort_order?:     string
	}, ...]
}
#NutanixProjectDataSource: {
	account_reference_list?: [{
		kind: string
		name: string
		uuid: string
	}, ...]
	api_version?: string
	default_subnet_reference?: [_]: string
	description?: string
	environment_reference_list?: [{
		kind: string
		name: string
		uuid: string
	}, ...]
	external_network_list?: [{
		name: string
		uuid: string
	}, ...]
	id?:         string
	is_default?: bool
	metadata?: [_]: string
	name?: string
	owner_reference?: [_]: string
	project_id?:   string
	project_name?: string
	project_reference?: [_]: string
	resource_domain?: [{
		resources: [{
			limit:         number
			resource_type: string
			units:         string
			value:         number
		}, ...]
	}, ...]
	state?: string
	categories?: [{
		name?:  string
		value?: string
	}, ...]
	external_user_group_reference_list?: [{
		kind?: string
		name?: string
		uuid?: string
	}, ...]
	subnet_reference_list?: [{
		kind?: string
		name?: string
		uuid?: string
	}, ...]
	user_reference_list?: [{
		kind?: string
		name?: string
		uuid?: string
	}, ...]
}
#NutanixProjectsDataSource: {
	api_version?: string
	entities?: [{
		account_reference_list: [{
			kind: string
			name: string
			uuid: string
		}, ...]
		api_version: string
		categories: [{
			name:  string
			value: string
		}, ...]
		default_subnet_reference: [_]: string
		description: string
		environment_reference_list: [{
			kind: string
			name: string
			uuid: string
		}, ...]
		external_network_list: [{
			name: string
			uuid: string
		}, ...]
		external_user_group_reference_list: [{
			kind: string
			name: string
			uuid: string
		}, ...]
		is_default: bool
		metadata: [_]: string
		name: string
		owner_reference: [_]:   string
		project_reference: [_]: string
		resource_domain: [{
			resources: [{
				limit:         number
				resource_type: string
				units:         string
				value:         number
			}, ...]
		}, ...]
		state: string
		subnet_reference_list: [{
			kind: string
			name: string
			uuid: string
		}, ...]
		user_reference_list: [{
			kind: string
			name: string
			uuid: string
		}, ...]
	}, ...]
	id?: string
}
#NutanixProtectionRuleDataSource: {
	api_version?: string
	availability_zone_connectivity_list?: [{
		destination_availability_zone_index: number
		snapshot_schedule_list: [{
			auto_suspend_timeout_secs: number
			local_snapshot_retention_policy: [{
				num_snapshots:                                  number
				rollup_retention_policy_multiple:               number
				rollup_retention_policy_snapshot_interval_type: string
			}, ...]
			recovery_point_objective_secs: number
			remote_snapshot_retention_policy: [{
				num_snapshots:                                  number
				rollup_retention_policy_multiple:               number
				rollup_retention_policy_snapshot_interval_type: string
			}, ...]
			snapshot_type: string
		}, ...]
		source_availability_zone_index: number
	}, ...]
	category_filter?: [{
		kind_list: [string, ...]
		params: [{
			name: string
			values: [string, ...]
		}, ...]
		type: string
	}, ...]
	description?: string
	id?:          string
	metadata?: [_]: string
	name?: string
	ordered_availability_zone_list?: [{
		availability_zone_url: string
		cluster_uuid:          string
	}, ...]
	owner_reference?: [{
		kind: string
		name: string
		uuid: string
	}, ...]
	project_reference?: [{
		kind: string
		name: string
		uuid: string
	}, ...]
	protection_rule_id?:   string
	protection_rule_name?: string
	start_time?:           string
	state?:                string
	categories?: [{
		name?:  string
		value?: string
	}, ...]
}
#NutanixProtectionRulesDataSource: {
	api_version?: string
	entities?: [{
		api_version: string
		availability_zone_connectivity_list: [{
			destination_availability_zone_index: number
			snapshot_schedule_list: [{
				auto_suspend_timeout_secs: number
				local_snapshot_retention_policy: [{
					num_snapshots:                                  number
					rollup_retention_policy_multiple:               number
					rollup_retention_policy_snapshot_interval_type: string
				}, ...]
				recovery_point_objective_secs: number
				remote_snapshot_retention_policy: [{
					num_snapshots:                                  number
					rollup_retention_policy_multiple:               number
					rollup_retention_policy_snapshot_interval_type: string
				}, ...]
				snapshot_type: string
			}, ...]
			source_availability_zone_index: number
		}, ...]
		categories: [{
			name:  string
			value: string
		}, ...]
		category_filter: [{
			kind_list: [string, ...]
			params: [{
				name: string
				values: [string, ...]
			}, ...]
			type: string
		}, ...]
		description: string
		metadata: [_]: string
		name: string
		ordered_availability_zone_list: [{
			availability_zone_url: string
			cluster_uuid:          string
		}, ...]
		owner_reference: [{
			kind: string
			name: string
			uuid: string
		}, ...]
		project_reference: [{
			kind: string
			name: string
			uuid: string
		}, ...]
		start_time: string
		state:      string
	}, ...]
	id?: string
}
#NutanixRecoveryPlanDataSource: {
	api_version?: string
	description?: string
	id?:          string
	metadata?: [_]: string
	name?: string
	owner_reference?: [{
		kind: string
		name: string
		uuid: string
	}, ...]
	parameters?: [{
		floating_ip_assignment_list: [{
			availability_zone_url: string
			vm_ip_assignment_list: [{
				recovery_floating_ip_config: [{
					ip:                          string
					should_allocate_dynamically: bool
				}, ...]
				test_floating_ip_config: [{
					ip:                          string
					should_allocate_dynamically: bool
				}, ...]
				vm_nic_information: [{
					ip:   string
					uuid: string
				}, ...]
				vm_reference: [{
					kind: string
					name: string
					uuid: string
				}, ...]
			}, ...]
		}, ...]
		network_mapping_list: [{
			are_networks_stretched: bool
			availability_zone_network_mapping_list: [{
				availability_zone_url: string
				cluster_reference_list: [{
					kind: string
					name: string
					uuid: string
				}, ...]
				recovery_ip_assignment_list: [{
					ip_config_list: [{
						ip_address: string
					}, ...]
					vm_reference: [{
						kind: string
						name: string
						uuid: string
					}, ...]
				}, ...]
				recovery_network: [{
					name: string
					subnet_list: [{
						external_connectivity_state: string
						gateway_ip:                  string
						prefix_length:               number
					}, ...]
					use_vpc_reference: bool
					virtual_network_reference: [{
						kind: string
						name: string
						uuid: string
					}, ...]
					vpc_reference: [{
						kind: string
						name: string
						uuid: string
					}, ...]
				}, ...]
				test_ip_assignment_list: [{
					ip_config_list: [{
						ip_address: string
					}, ...]
					vm_reference: [{
						kind: string
						name: string
						uuid: string
					}, ...]
				}, ...]
				test_network: [{
					name: string
					subnet_list: [{
						external_connectivity_state: string
						gateway_ip:                  string
						prefix_length:               number
					}, ...]
					use_vpc_reference: bool
					virtual_network_reference: [{
						kind: string
						name: string
						uuid: string
					}, ...]
					vpc_reference: [{
						kind: string
						name: string
						uuid: string
					}, ...]
				}, ...]
			}, ...]
		}, ...]
	}, ...]
	project_reference?: [{
		kind: string
		name: string
		uuid: string
	}, ...]
	recovery_plan_id?:   string
	recovery_plan_name?: string
	stage_list?: [{
		delay_time_secs: number
		stage_uuid:      string
		stage_work: [{
			recover_entities: [{
				entity_info_list: [{
					any_entity_reference_kind: string
					any_entity_reference_name: string
					any_entity_reference_uuid: string
					categories: [{
						name:  string
						value: string
					}, ...]
					script_list: [{
						enable_script_exec: bool
						timeout:            string
					}, ...]
				}, ...]
			}, ...]
		}, ...]
	}, ...]
	state?: string
	categories?: [{
		name?:  string
		value?: string
	}, ...]
}
#NutanixRecoveryPlansDataSource: {
	api_version?: string
	entities?: [{
		api_version: string
		categories: [{
			name:  string
			value: string
		}, ...]
		description: string
		metadata: [_]: string
		name: string
		owner_reference: [{
			kind: string
			name: string
			uuid: string
		}, ...]
		parameters: [{
			floating_ip_assignment_list: [{
				availability_zone_url: string
				vm_ip_assignment_list: [{
					recovery_floating_ip_config: [{
						ip:                          string
						should_allocate_dynamically: bool
					}, ...]
					test_floating_ip_config: [{
						ip:                          string
						should_allocate_dynamically: bool
					}, ...]
					vm_nic_information: [{
						ip:   string
						uuid: string
					}, ...]
					vm_reference: [{
						kind: string
						name: string
						uuid: string
					}, ...]
				}, ...]
			}, ...]
			network_mapping_list: [{
				are_networks_stretched: bool
				availability_zone_network_mapping_list: [{
					availability_zone_url: string
					cluster_reference_list: [{
						kind: string
						name: string
						uuid: string
					}, ...]
					recovery_ip_assignment_list: [{
						ip_config_list: [{
							ip_address: string
						}, ...]
						vm_reference: [{
							kind: string
							name: string
							uuid: string
						}, ...]
					}, ...]
					recovery_network: [{
						name: string
						subnet_list: [{
							external_connectivity_state: string
							gateway_ip:                  string
							prefix_length:               number
						}, ...]
						use_vpc_reference: bool
						virtual_network_reference: [{
							kind: string
							name: string
							uuid: string
						}, ...]
						vpc_reference: [{
							kind: string
							name: string
							uuid: string
						}, ...]
					}, ...]
					test_ip_assignment_list: [{
						ip_config_list: [{
							ip_address: string
						}, ...]
						vm_reference: [{
							kind: string
							name: string
							uuid: string
						}, ...]
					}, ...]
					test_network: [{
						name: string
						subnet_list: [{
							external_connectivity_state: string
							gateway_ip:                  string
							prefix_length:               number
						}, ...]
						use_vpc_reference: bool
						virtual_network_reference: [{
							kind: string
							name: string
							uuid: string
						}, ...]
						vpc_reference: [{
							kind: string
							name: string
							uuid: string
						}, ...]
					}, ...]
				}, ...]
			}, ...]
		}, ...]
		project_reference: [{
			kind: string
			name: string
			uuid: string
		}, ...]
		stage_list: [{
			delay_time_secs: number
			stage_uuid:      string
			stage_work: [{
				recover_entities: [{
					entity_info_list: [{
						any_entity_reference_kind: string
						any_entity_reference_name: string
						any_entity_reference_uuid: string
						categories: [{
							name:  string
							value: string
						}, ...]
						script_list: [{
							enable_script_exec: bool
							timeout:            string
						}, ...]
					}, ...]
				}, ...]
			}, ...]
		}, ...]
		state: string
	}, ...]
	id?: string
}
#NutanixRoleDataSource: {
	api_version?: string
	description?: string
	id?:          string
	metadata?: [_]: string
	name?: string
	owner_reference?: [_]: string
	permission_reference_list?: [{
		kind: string
		name: string
		uuid: string
	}, ...]
	project_reference?: [_]: string
	role_id?:   string
	role_name?: string
	state?:     string
	categories?: [{
		name?:  string
		value?: string
	}, ...]
}
#NutanixRolesDataSource: {
	api_version?: string
	entities?: [{
		api_version: string
		categories: [{
			name:  string
			value: string
		}, ...]
		description: string
		metadata: [_]: string
		name: string
		owner_reference: [_]: string
		permission_reference_list: [{
			kind: string
			name: string
			uuid: string
		}, ...]
		project_reference: [_]: string
		role_id: string
		state:   string
	}, ...]
	id?: string
	metadata?: [{
		filter?:         string
		kind?:           string
		length?:         number
		offset?:         number
		sort_attribute?: string
		sort_order?:     string
	}, ...]
}
#NutanixSubnetDataSource: {
	api_version?: string
	availability_zone_reference?: [_]: string
	cluster_name?:       string
	cluster_uuid?:       string
	default_gateway_ip?: string
	description?:        string
	dhcp_domain_name_server_list?: [string, ...]
	dhcp_domain_search_list?: [string, ...]
	dhcp_options?: [_]:        string
	dhcp_server_address?: [_]: string
	dhcp_server_address_port?: number
	id?:                       string
	ip_config_pool_list_ranges?: [string, ...]
	message_list?: [{
		details: [_]: string
		message: string
		reason:  string
	}, ...]
	metadata?: [_]: string
	name?: string
	network_function_chain_reference?: [_]: string
	owner_reference?: [_]:                  string
	prefix_length?: number
	project_reference?: [_]: string
	state?:        string
	subnet_id?:    string
	subnet_ip?:    string
	subnet_name?:  string
	subnet_type?:  string
	vlan_id?:      number
	vswitch_name?: string
	categories?: [{
		name?:  string
		value?: string
	}, ...]
}
#NutanixSubnetsDataSource: {
	api_version?: string
	entities?: [{
		api_version: string
		availability_zone_reference: [_]: string
		categories: [{
			name:  string
			value: string
		}, ...]
		cluster_name: string
		cluster_reference: [_]: string
		cluster_uuid:       string
		default_gateway_ip: string
		description:        string
		dhcp_domain_name_server_list: [string, ...]
		dhcp_domain_search_list: [string, ...]
		dhcp_options: [_]:        string
		dhcp_server_address: [_]: string
		dhcp_server_address_port: number
		ip_config_pool_list_ranges: [string, ...]
		message_list: [{
			details: [_]: string
			message: string
			reason:  string
		}, ...]
		metadata: [_]: string
		name: string
		network_function_chain_reference: [_]: string
		owner_reference: [_]:                  string
		prefix_length: number
		project_reference: [_]: string
		state:        string
		subnet_id:    string
		subnet_ip:    string
		subnet_name:  string
		subnet_type:  string
		vlan_id:      number
		vswitch_name: string
	}, ...]
	id?: string
	metadata?: [{
		filter?:         string
		kind?:           string
		length?:         number
		offset?:         number
		sort_attribute?: string
		sort_order?:     string
	}, ...]
}
#NutanixUserDataSource: {
	access_control_policy_reference_list?: [{
		kind: string
		name: string
		uuid: string
	}, ...]
	api_version?: string
	directory_service_user?: [{
		default_user_principal_name: string
		directory_service_reference: [{
			kind: string
			name: string
			uuid: string
		}, ...]
		user_principal_name: string
	}, ...]
	display_name?: string
	id?:           string
	identity_provider_user?: [{
		identity_provider_reference: [{
			kind: string
			name: string
			uuid: string
		}, ...]
		username: string
	}, ...]
	metadata?: [_]:          string
	owner_reference?: [_]:   string
	project_reference?: [_]: string
	project_reference_list?: [{
		kind: string
		name: string
		uuid: string
	}, ...]
	state?:     string
	user_id?:   string
	user_name?: string
	user_type?: string
	categories?: [{
		name?:  string
		value?: string
	}, ...]
}
#NutanixUserGroupDataSource: {
	access_control_policy_reference_list?: [{
		kind: string
		name: string
		uuid: string
	}, ...]
	api_version?: string
	directory_service_user_group?: [{
		default_user_principal_name: string
		directory_service_reference: [{
			kind: string
			name: string
			uuid: string
		}, ...]
		distinguished_name: string
	}, ...]
	display_name?: string
	id?:           string
	metadata?: [_]:          string
	owner_reference?: [_]:   string
	project_reference?: [_]: string
	project_reference_list?: [{
		kind: string
		name: string
		uuid: string
	}, ...]
	state?:                         string
	user_group_distinguished_name?: string
	user_group_id?:                 string
	user_group_name?:               string
	user_group_type?:               string
	categories?: [{
		name?:  string
		value?: string
	}, ...]
}
#NutanixUserGroupsDataSource: {
	api_version?: string
	entities?: [{
		access_control_policy_reference_list: [{
			kind: string
			name: string
			uuid: string
		}, ...]
		api_version: string
		categories: [{
			name:  string
			value: string
		}, ...]
		directory_service_user_group: [{
			default_user_principal_name: string
			directory_service_reference: [{
				kind: string
				name: string
				uuid: string
			}, ...]
			distinguished_name: string
		}, ...]
		display_name: string
		metadata: [_]:          string
		owner_reference: [_]:   string
		project_reference: [_]: string
		project_reference_list: [{
			kind: string
			name: string
			uuid: string
		}, ...]
		state:           string
		user_group_type: string
	}, ...]
	id?: string
	metadata?: [{
		filter?:         string
		kind?:           string
		length?:         number
		offset?:         number
		sort_attribute?: string
		sort_order?:     string
	}, ...]
}
#NutanixUsersDataSource: {
	api_version?: string
	entities?: [{
		access_control_policy_reference_list: [{
			kind: string
			name: string
			uuid: string
		}, ...]
		api_version: string
		categories: [{
			name:  string
			value: string
		}, ...]
		directory_service_user: [{
			default_user_principal_name: string
			directory_service_reference: [{
				kind: string
				name: string
				uuid: string
			}, ...]
			user_principal_name: string
		}, ...]
		display_name: string
		identity_provider_user: [{
			identity_provider_reference: [{
				kind: string
				name: string
				uuid: string
			}, ...]
			username: string
		}, ...]
		metadata: [_]: string
		name: string
		owner_reference: [_]:   string
		project_reference: [_]: string
		project_reference_list: [{
			kind: string
			name: string
			uuid: string
		}, ...]
		state:     string
		user_type: string
	}, ...]
	id?: string
	metadata?: [{
		filter?:         string
		kind?:           string
		length?:         number
		offset?:         number
		sort_attribute?: string
		sort_order?:     string
	}, ...]
}
#NutanixVirtualMachineDataSource: {
	vm_id:        string
	api_version?: string
	availability_zone_reference?: [_]: string
	boot_device_disk_address?: [_]:    string
	boot_device_mac_address?: string
	boot_device_order_list?: [string, ...]
	boot_type?:    string
	cluster_name?: string
	cluster_uuid?: string
	description?:  string
	disk_list?: [{
		data_source_reference: [_]: string
		device_properties: [{
			device_type: string
			disk_address: [_]: string
		}, ...]
		disk_size_bytes: number
		disk_size_mib:   number
		storage_config: [{
			flash_mode: string
			storage_container_reference: [{
				kind: string
				name: string
				url:  string
				uuid: string
			}, ...]
		}, ...]
		uuid: string
		volume_group_reference: [_]: string
	}, ...]
	enable_script_exec?: bool
	gpu_list?: [{
		device_id:                 number
		fraction:                  number
		frame_buffer_size_mib:     number
		guest_driver_version:      string
		mode:                      string
		name:                      string
		num_virtual_display_heads: number
		pci_address:               string
		uuid:                      string
		vendor:                    string
	}, ...]
	guest_customization_cloud_init_custom_key_values?: [_]: string
	guest_customization_cloud_init_meta_data?: string
	guest_customization_cloud_init_user_data?: string
	guest_customization_is_overridable?:       bool
	guest_customization_sysprep?: [_]:                   string
	guest_customization_sysprep_custom_key_values?: [_]: string
	guest_os_id?:             string
	hardware_clock_timezone?: string
	host_reference?: [_]: string
	hypervisor_type?: string
	id?:              string
	machine_type?:    string
	memory_size_mib?: number
	message_list?: [{
		details: [_]: string
		message: string
		reason:  string
	}, ...]
	metadata?: [_]: string
	name?: string
	ngt_credentials?: [_]: string
	ngt_enabled_capability_list?: [string, ...]
	nic_list?: [{
		floating_ip: string
		ip_endpoint_list: [{
			ip:   string
			type: string
		}, ...]
		is_connected: string
		mac_address:  string
		model:        string
		network_function_chain_reference: [_]: string
		network_function_nic_type: string
		nic_type:                  string
		subnet_name:               string
		subnet_uuid:               string
		uuid:                      string
	}, ...]
	num_sockets?:          number
	num_vcpus_per_socket?: number
	num_vnuma_nodes?:      number
	nutanix_guest_tools?: [_]: string
	owner_reference?: [_]:     string
	parent_reference?: [_]:    string
	power_state?:           string
	power_state_mechanism?: string
	project_reference?: [_]: string
	serial_port_list?: [{
		index:        number
		is_connected: bool
	}, ...]
	should_fail_on_script_failure?: bool
	state?:                         string
	vga_console_enabled?:           bool
	categories?: [{
		name?:  string
		value?: string
	}, ...]
}
#DataSources: {
	nutanix_access_control_policies?: [_]:   #NutanixAccessControlPoliciesDataSource
	nutanix_access_control_policy?: [_]:     #NutanixAccessControlPolicyDataSource
	nutanix_category_key?: [_]:              #NutanixCategoryKeyDataSource
	nutanix_cluster?: [_]:                   #NutanixClusterDataSource
	nutanix_clusters?: [_]:                  #NutanixClustersDataSource
	nutanix_host?: [_]:                      #NutanixHostDataSource
	nutanix_hosts?: [_]:                     #NutanixHostsDataSource
	nutanix_image?: [_]:                     #NutanixImageDataSource
	nutanix_karbon_cluster?: [_]:            #NutanixKarbonClusterDataSource
	nutanix_karbon_cluster_kubeconfig?: [_]: #NutanixKarbonClusterKubeconfigDataSource
	nutanix_karbon_cluster_ssh?: [_]:        #NutanixKarbonClusterSshDataSource
	nutanix_karbon_clusters?: [_]:           #NutanixKarbonClustersDataSource
	nutanix_karbon_private_registries?: [_]: #NutanixKarbonPrivateRegistriesDataSource
	nutanix_karbon_private_registry?: [_]:   #NutanixKarbonPrivateRegistryDataSource
	nutanix_network_security_rule?: [_]:     #NutanixNetworkSecurityRuleDataSource
	nutanix_permission?: [_]:                #NutanixPermissionDataSource
	nutanix_permissions?: [_]:               #NutanixPermissionsDataSource
	nutanix_project?: [_]:                   #NutanixProjectDataSource
	nutanix_projects?: [_]:                  #NutanixProjectsDataSource
	nutanix_protection_rule?: [_]:           #NutanixProtectionRuleDataSource
	nutanix_protection_rules?: [_]:          #NutanixProtectionRulesDataSource
	nutanix_recovery_plan?: [_]:             #NutanixRecoveryPlanDataSource
	nutanix_recovery_plans?: [_]:            #NutanixRecoveryPlansDataSource
	nutanix_role?: [_]:                      #NutanixRoleDataSource
	nutanix_roles?: [_]:                     #NutanixRolesDataSource
	nutanix_subnet?: [_]:                    #NutanixSubnetDataSource
	nutanix_subnets?: [_]:                   #NutanixSubnetsDataSource
	nutanix_user?: [_]:                      #NutanixUserDataSource
	nutanix_user_group?: [_]:                #NutanixUserGroupDataSource
	nutanix_user_groups?: [_]:               #NutanixUserGroupsDataSource
	nutanix_users?: [_]:                     #NutanixUsersDataSource
	nutanix_virtual_machine?: [_]:           #NutanixVirtualMachineDataSource
}
