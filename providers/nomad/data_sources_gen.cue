// Generated by cue-terraform-gen (https://github.com/tnarg/cue_terraform_gen). DO NOT EDIT.
package nomad

#NomadAclPoliciesDataSource: {
	id?: string
	policies?: [{
		description: string
		name:        string
	}, ...]
	prefix?: string
}
#NomadAclPolicyDataSource: {
	name:         string
	description?: string
	id?:          string
	rules?:       string
}
#NomadAclTokenDataSource: {
	accessor_id:  string
	create_time?: string
	global?:      bool
	id?:          string
	name?:        string
	policies?: [string, ...]
	secret_id?: string
	type?:      string
}
#NomadAclTokensDataSource: {
	acl_tokens?: [{
		accessor_id: string
		create_time: string
		global:      bool
		name:        string
		policies: [string, ...]
		type: string
	}, ...]
	id?:     string
	prefix?: string
}
#NomadDatacentersDataSource: {
	datacenters?: [string, ...]
	id?:                string
	ignore_down_nodes?: bool
	prefix?:            string
}
#NomadDeploymentsDataSource: {
	deployments?: [{
		[_]: string
	}, ...]
	id?: string
}
#NomadJobDataSource: {
	job_id:       string
	all_at_once?: bool
	constraints?: [{
		ltarget: string
		operand: string
		rtarget: string
	}, ...]
	create_index?: number
	datacenters?: [string, ...]
	id?:               string
	job_modify_index?: number
	modify_index?:     number
	name?:             string
	namespace?:        string
	parent_id?:        string
	periodic_config?: [{
		enabled:          bool
		prohibit_overlap: bool
		spec:             string
		spec_type:        string
		timezone:         string
	}, ...]
	priority?:           number
	region?:             string
	stable?:             bool
	status?:             string
	status_description?: string
	stop?:               bool
	submit_time?:        number
	task_groups?: [{
		count: number
		meta: [_]: string
		name: string
		task: [{
			driver: string
			meta: [_]: string
			name: string
			volume_mounts: [{
				destination: string
				read_only:   bool
				volume:      string
			}, ...]
		}, ...]
		volumes: [{
			name:      string
			read_only: bool
			source:    string
			type:      string
		}, ...]
	}, ...]
	type?:    string
	version?: number
}
#NomadJobParserDataSource: {
	hcl:           string
	canonicalize?: bool
	id?:           string
	json?:         string
}
#NomadNamespaceDataSource: {
	name:         string
	description?: string
	id?:          string
	quota?:       string
}
#NomadNamespacesDataSource: {
	id?: string
	namespaces?: [string, ...]
}
#NomadPluginDataSource: {
	plugin_id:             string
	controller_required?:  bool
	controllers_expected?: number
	controllers_healthy?:  number
	id?:                   string
	nodes?: [{
		healthy:             bool
		healthy_description: string
		name:                string
	}, ...]
	nodes_expected?:          number
	nodes_healthy?:           number
	plugin_provider?:         string
	plugin_provider_version?: string
	wait_for_healthy?:        bool
	wait_for_registration?:   bool
}
#NomadPluginsDataSource: {
	id?: string
	plugins?: [{
		[_]: string
	}, ...]
	type?: string
}
#NomadRegionsDataSource: {
	id?: string
	regions?: [string, ...]
}
#NomadScalingPoliciesDataSource: {
	id?:     string
	job_id?: string
	policies?: [{
		enabled: bool
		id:      string
		target: [_]: string
		type: string
	}, ...]
	type?: string
}
#NomadScalingPolicyDataSource: {
	id:       string
	enabled?: bool
	max?:     number
	min?:     number
	policy?:  string
	target?: [_]: string
	type?: string
}
#NomadSchedulerConfigDataSource: {
	id?: string
	preemption_config?: [_]: bool
	scheduler_algorithm?: string
}
#NomadVolumesDataSource: {
	id?:        string
	namespace?: string
	node_id?:   string
	plugin_id?: string
	type?:      string
	volumes?: [{
		[_]: string
	}, ...]
}
#DataSources: {
	nomad_acl_policies?: [_]:     #NomadAclPoliciesDataSource
	nomad_acl_policy?: [_]:       #NomadAclPolicyDataSource
	nomad_acl_token?: [_]:        #NomadAclTokenDataSource
	nomad_acl_tokens?: [_]:       #NomadAclTokensDataSource
	nomad_datacenters?: [_]:      #NomadDatacentersDataSource
	nomad_deployments?: [_]:      #NomadDeploymentsDataSource
	nomad_job?: [_]:              #NomadJobDataSource
	nomad_job_parser?: [_]:       #NomadJobParserDataSource
	nomad_namespace?: [_]:        #NomadNamespaceDataSource
	nomad_namespaces?: [_]:       #NomadNamespacesDataSource
	nomad_plugin?: [_]:           #NomadPluginDataSource
	nomad_plugins?: [_]:          #NomadPluginsDataSource
	nomad_regions?: [_]:          #NomadRegionsDataSource
	nomad_scaling_policies?: [_]: #NomadScalingPoliciesDataSource
	nomad_scaling_policy?: [_]:   #NomadScalingPolicyDataSource
	nomad_scheduler_config?: [_]: #NomadSchedulerConfigDataSource
	nomad_volumes?: [_]:          #NomadVolumesDataSource
}
