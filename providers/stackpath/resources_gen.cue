// Generated by cue-terraform-gen (https://github.com/tnarg/cue_terraform_gen). DO NOT EDIT.
package stackpath

#StackpathComputeNetworkPolicyResource: {
	name: string
	policy_types: [string, ...]
	priority: number
	slug:     string
	annotations?: [_]: string
	description?: string
	id?:          string
	labels?: [_]: string
	version?: string
	egress?: [{
		action:       string
		description?: string
		protocol?: [{
			ah?: [{}, ...]
			esp?: [{}, ...]
			gre?: [{}, ...]
			icmp?: [{}, ...]
			tcp?: [{
				destination_ports?: [string, ...]
				source_ports?: [string, ...]
			}, ...]
			tcp_udp?: [{
				destination_ports?: [string, ...]
				source_ports?: [string, ...]
			}, ...]
			udp?: [{
				destination_ports?: [string, ...]
				source_ports?: [string, ...]
			}, ...]
		}, ...]
		to?: [{
			instance_selector?: [{
				key:      string
				operator: string
				values: [string, ...]
			}, ...]
			ip_block?: [{
				cidr: string
				except?: [string, ...]
			}, ...]
			network_selector?: [{
				key:      string
				operator: string
				values: [string, ...]
			}, ...]
		}, ...]
	}, ...]
	ingress?: [{
		action:       string
		description?: string
		from?: [{
			instance_selector?: [{
				key:      string
				operator: string
				values: [string, ...]
			}, ...]
			ip_block?: [{
				cidr: string
				except?: [string, ...]
			}, ...]
			network_selector?: [{
				key:      string
				operator: string
				values: [string, ...]
			}, ...]
		}, ...]
		protocol?: [{
			ah?: [{}, ...]
			esp?: [{}, ...]
			gre?: [{}, ...]
			icmp?: [{}, ...]
			tcp?: [{
				destination_ports?: [string, ...]
				source_ports?: [string, ...]
			}, ...]
			tcp_udp?: [{
				destination_ports?: [string, ...]
				source_ports?: [string, ...]
			}, ...]
			udp?: [{
				destination_ports?: [string, ...]
				source_ports?: [string, ...]
			}, ...]
		}, ...]
	}, ...]
	instance_selector?: [{
		key:      string
		operator: string
		values: [string, ...]
	}, ...]
	network_selector?: [{
		key:      string
		operator: string
		values: [string, ...]
	}, ...]
}
#StackpathComputeWorkloadResource: {
	name: string
	slug: string
	annotations?: [_]: string
	id?: string
	labels?: [_]: string
	container?: [{
		image: string
		name:  string
		command?: [string, ...]
		env?: [{
			key:           string
			secret_value?: string
			value?:        string
		}, ...]
		liveness_probe?: [{
			failure_threshold:      number
			success_threshold:      number
			initial_delay_seconds?: number
			period_seconds?:        number
			timeout_seconds?:       number
			http_get?: [{
				port: number
				http_headers?: [_]: string
				path?:   string
				scheme?: string
			}, ...]
			tcp_socket?: [{
				port: number
			}, ...]
		}, ...]
		port?: [{
			name:                            string
			port:                            number
			enable_implicit_network_policy?: bool
			protocol?:                       string
		}, ...]
		readiness_probe?: [{
			failure_threshold:      number
			success_threshold:      number
			initial_delay_seconds?: number
			period_seconds?:        number
			timeout_seconds?:       number
			http_get?: [{
				port: number
				http_headers?: [_]: string
				path?:   string
				scheme?: string
			}, ...]
			tcp_socket?: [{
				port: number
			}, ...]
		}, ...]
		resources?: [{
			requests: [_]: string
		}, ...]
		volume_mount?: [{
			mount_path: string
			slug:       string
		}, ...]
	}, ...]
	image_pull_credentials?: [{
		docker_registry?: [{
			password: string
			username: string
			email?:   string
			server?:  string
		}, ...]
	}, ...]
	instances?: [{
		name:                 string
		external_ip_address?: string
		ip_address?:          string
		message?:             string
		phase?:               string
		reason?:              string
		container?: [{
			image: string
			name:  string
			command?: [string, ...]
			env?: [{
				key:           string
				secret_value?: string
				value?:        string
			}, ...]
			liveness_probe?: [{
				failure_threshold:      number
				success_threshold:      number
				initial_delay_seconds?: number
				period_seconds?:        number
				timeout_seconds?:       number
				http_get?: [{
					port: number
					http_headers?: [_]: string
					path?:   string
					scheme?: string
				}, ...]
				tcp_socket?: [{
					port: number
				}, ...]
			}, ...]
			port?: [{
				name:                            string
				port:                            number
				enable_implicit_network_policy?: bool
				protocol?:                       string
			}, ...]
			readiness_probe?: [{
				failure_threshold:      number
				success_threshold:      number
				initial_delay_seconds?: number
				period_seconds?:        number
				timeout_seconds?:       number
				http_get?: [{
					port: number
					http_headers?: [_]: string
					path?:   string
					scheme?: string
				}, ...]
				tcp_socket?: [{
					port: number
				}, ...]
			}, ...]
			resources?: [{
				requests: [_]: string
			}, ...]
			volume_mount?: [{
				mount_path: string
				slug:       string
			}, ...]
		}, ...]
		location?: [{
			city?:             string
			city_code?:        string
			continent?:        string
			continent_code?:   string
			country?:          string
			country_code?:     string
			latitude?:         number
			longitude?:        number
			name?:             string
			region?:           string
			region_code?:      string
			subdivision?:      string
			subdivision_code?: string
		}, ...]
		metadata?: [{
			annotations?: [_]: string
			labels?: [_]:      string
		}, ...]
		network_interface?: [{
			gateway:    string
			ip_address: string
			network:    string
			ip_address_aliases?: [string, ...]
		}, ...]
		virtual_machine?: [{
			image:      string
			name:       string
			user_data?: string
			liveness_probe?: [{
				failure_threshold:      number
				success_threshold:      number
				initial_delay_seconds?: number
				period_seconds?:        number
				timeout_seconds?:       number
				http_get?: [{
					port: number
					http_headers?: [_]: string
					path?:   string
					scheme?: string
				}, ...]
				tcp_socket?: [{
					port: number
				}, ...]
			}, ...]
			port?: [{
				name:                            string
				port:                            number
				enable_implicit_network_policy?: bool
				protocol?:                       string
			}, ...]
			readiness_probe?: [{
				failure_threshold:      number
				success_threshold:      number
				initial_delay_seconds?: number
				period_seconds?:        number
				timeout_seconds?:       number
				http_get?: [{
					port: number
					http_headers?: [_]: string
					path?:   string
					scheme?: string
				}, ...]
				tcp_socket?: [{
					port: number
				}, ...]
			}, ...]
			resources?: [{
				requests: [_]: string
			}, ...]
			volume_mount?: [{
				mount_path: string
				slug:       string
			}, ...]
		}, ...]
	}, ...]
	network_interface?: [{
		network: string
	}, ...]
	target?: [{
		min_replicas:      number
		name:              string
		deployment_scope?: string
		max_replicas?:     number
		scale_settings?: [{
			metrics?: [{
				metric:               string
				average_utilization?: number
				average_value?:       string
			}, ...]
		}, ...]
		selector?: [{
			key:      string
			operator: string
			values: [string, ...]
		}, ...]
	}, ...]
	virtual_machine?: [{
		image:      string
		name:       string
		user_data?: string
		liveness_probe?: [{
			failure_threshold:      number
			success_threshold:      number
			initial_delay_seconds?: number
			period_seconds?:        number
			timeout_seconds?:       number
			http_get?: [{
				port: number
				http_headers?: [_]: string
				path?:   string
				scheme?: string
			}, ...]
			tcp_socket?: [{
				port: number
			}, ...]
		}, ...]
		port?: [{
			name:                            string
			port:                            number
			enable_implicit_network_policy?: bool
			protocol?:                       string
		}, ...]
		readiness_probe?: [{
			failure_threshold:      number
			success_threshold:      number
			initial_delay_seconds?: number
			period_seconds?:        number
			timeout_seconds?:       number
			http_get?: [{
				port: number
				http_headers?: [_]: string
				path?:   string
				scheme?: string
			}, ...]
			tcp_socket?: [{
				port: number
			}, ...]
		}, ...]
		resources?: [{
			requests: [_]: string
		}, ...]
		volume_mount?: [{
			mount_path: string
			slug:       string
		}, ...]
	}, ...]
	volume_claim?: [{
		name:  string
		slug?: string
		resources?: [{
			requests: [_]: string
		}, ...]
	}, ...]
}
#StackpathObjectStorageBucketResource: {
	label:         string
	region:        string
	endpoint_url?: string
	id?:           string
	visibility?:   string
}
#Resources: {
	stackpath_compute_network_policy?: [_]: #StackpathComputeNetworkPolicyResource
	stackpath_compute_workload?: [_]:       #StackpathComputeWorkloadResource
	stackpath_object_storage_bucket?: [_]:  #StackpathObjectStorageBucketResource
}
