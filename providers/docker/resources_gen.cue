// Generated by cue-terraform-gen (https://github.com/tnarg/cue_terraform_gen). DO NOT EDIT.
package docker

#DockerConfigResource: {
	data: string
	name: string
	id?:  string
}
#DockerContainerResource: {
	image:   string
	name:    string
	attach?: bool
	bridge?: string
	command?: [string, ...]
	container_logs?:        string
	cpu_set?:               string
	cpu_shares?:            number
	destroy_grace_seconds?: number
	dns?: [string, ...]
	dns_opts?: [string, ...]
	dns_search?: [string, ...]
	domainname?: string
	entrypoint?: [string, ...]
	env?: [string, ...]
	exit_code?: number
	gateway?:   string
	group_add?: [string, ...]
	hostname?:         string
	id?:               string
	ip_address?:       string
	ip_prefix_length?: number
	ipc_mode?:         string
	links?: [string, ...]
	log_driver?: string
	log_opts?: [_]: string
	logs?:            bool
	max_retry_count?: number
	memory?:          number
	memory_swap?:     number
	must_run?:        bool
	network_alias?: [string, ...]
	network_data?: [{
		gateway:          string
		ip_address:       string
		ip_prefix_length: number
		network_name:     string
	}, ...]
	network_mode?: string
	networks?: [string, ...]
	pid_mode?:          string
	privileged?:        bool
	publish_all_ports?: bool
	read_only?:         bool
	restart?:           string
	rm?:                bool
	shm_size?:          number
	start?:             bool
	sysctls?: [_]: string
	tmpfs?: [_]:   string
	user?:        string
	userns_mode?: string
	working_dir?: string
	capabilities?: [{
		add?: [string, ...]
		drop?: [string, ...]
	}, ...]
	devices?: [{
		host_path:       string
		container_path?: string
		permissions?:    string
	}, ...]
	healthcheck?: [{
		test: [string, ...]
		interval?:     string
		retries?:      number
		start_period?: string
		timeout?:      string
	}, ...]
	host?: [{
		host: string
		ip:   string
	}, ...]
	labels?: [{
		label: string
		value: string
	}, ...]
	mounts?: [{
		target:     string
		type:       string
		read_only?: bool
		source?:    string
		bind_options?: [{
			propagation?: string
		}, ...]
		tmpfs_options?: [{
			mode?:       number
			size_bytes?: number
		}, ...]
		volume_options?: [{
			driver_name?: string
			driver_options?: [_]: string
			no_copy?: bool
			labels?: [{
				label: string
				value: string
			}, ...]
		}, ...]
	}, ...]
	networks_advanced?: [{
		name: string
		aliases?: [string, ...]
		ipv4_address?: string
		ipv6_address?: string
	}, ...]
	ports?: [{
		internal:  number
		external?: number
		ip?:       string
		protocol?: string
	}, ...]
	ulimit?: [{
		hard: number
		name: string
		soft: number
	}, ...]
	upload?: [{
		file:            string
		content?:        string
		content_base64?: string
		executable?:     bool
		source?:         string
		source_hash?:    string
	}, ...]
	volumes?: [{
		container_path?: string
		from_container?: string
		host_path?:      string
		read_only?:      bool
		volume_name?:    string
	}, ...]
}
#DockerImageResource: {
	name:          string
	id?:           string
	keep_locally?: bool
	latest?:       string
	pull_trigger?: string
	pull_triggers?: [string, ...]
}
#DockerNetworkResource: {
	name:             string
	attachable?:      bool
	check_duplicate?: bool
	driver?:          string
	id?:              string
	ingress?:         bool
	internal?:        bool
	ipam_driver?:     string
	ipv6?:            bool
	options?: [_]: string
	scope?: string
	ipam_config?: [{
		aux_address?: [_]: string
		gateway?:  string
		ip_range?: string
		subnet?:   string
	}, ...]
	labels?: [{
		label: string
		value: string
	}, ...]
}
#DockerSecretResource: {
	data: string
	name: string
	id?:  string
	labels?: [{
		label: string
		value: string
	}, ...]
}
#DockerServiceResource: {
	name: string
	auth?: [_]: string
	id?: string
	converge_config?: [{
		delay?:   string
		timeout?: string
	}, ...]
	endpoint_spec?: [{
		mode?: string
		ports?: [{
			target_port:     number
			name?:           string
			protocol?:       string
			publish_mode?:   string
			published_port?: number
		}, ...]
	}, ...]
	labels?: [{
		label: string
		value: string
	}, ...]
	mode?: [{
		global?: bool
		replicated?: [{
			replicas?: number
		}, ...]
	}, ...]
	rollback_config?: [{
		delay?:             string
		failure_action?:    string
		max_failure_ratio?: string
		monitor?:           string
		order?:             string
		parallelism?:       number
	}, ...]
	task_spec?: [{
		force_update?: number
		networks?: [string, ...]
		restart_policy?: [_]: string
		runtime?: string
		container_spec?: [{
			image: string
			args?: [string, ...]
			command?: [string, ...]
			dir?: string
			env?: [_]: string
			groups?: [string, ...]
			hostname?:          string
			isolation?:         string
			read_only?:         bool
			stop_grace_period?: string
			stop_signal?:       string
			user?:              string
			configs?: [{
				config_id:    string
				file_name:    string
				config_name?: string
				file_gid?:    string
				file_mode?:   number
				file_uid?:    string
			}, ...]
			dns_config?: [{
				nameservers: [string, ...]
				options?: [string, ...]
				search?: [string, ...]
			}, ...]
			healthcheck?: [{
				test: [string, ...]
				interval?:     string
				retries?:      number
				start_period?: string
				timeout?:      string
			}, ...]
			hosts?: [{
				host: string
				ip:   string
			}, ...]
			labels?: [{
				label: string
				value: string
			}, ...]
			mounts?: [{
				target:     string
				type:       string
				read_only?: bool
				source?:    string
				bind_options?: [{
					propagation?: string
				}, ...]
				tmpfs_options?: [{
					mode?:       number
					size_bytes?: number
				}, ...]
				volume_options?: [{
					driver_name?: string
					driver_options?: [_]: string
					no_copy?: bool
					labels?: [{
						label: string
						value: string
					}, ...]
				}, ...]
			}, ...]
			privileges?: [{
				credential_spec?: [{
					file?:     string
					registry?: string
				}, ...]
				se_linux_context?: [{
					disable?: bool
					level?:   string
					role?:    string
					type?:    string
					user?:    string
				}, ...]
			}, ...]
			secrets?: [{
				file_name:    string
				secret_id:    string
				file_gid?:    string
				file_mode?:   number
				file_uid?:    string
				secret_name?: string
			}, ...]
		}, ...]
		log_driver?: [{
			name: string
			options?: [_]: string
		}, ...]
		placement?: [{
			constraints?: [string, ...]
			prefs?: [string, ...]
			platforms?: [{
				architecture: string
				os:           string
			}, ...]
		}, ...]
		resources?: [{
			limits?: [{
				memory_bytes?: number
				nano_cpus?:    number
				generic_resources?: [{
					discrete_resources_spec?: [string, ...]
					named_resources_spec?: [string, ...]
				}, ...]
			}, ...]
			reservation?: [{
				memory_bytes?: number
				nano_cpus?:    number
				generic_resources?: [{
					discrete_resources_spec?: [string, ...]
					named_resources_spec?: [string, ...]
				}, ...]
			}, ...]
		}, ...]
	}, ...]
	update_config?: [{
		delay?:             string
		failure_action?:    string
		max_failure_ratio?: string
		monitor?:           string
		order?:             string
		parallelism?:       number
	}, ...]
}
#DockerVolumeResource: {
	driver?: string
	driver_opts?: [_]: string
	id?:         string
	mountpoint?: string
	name?:       string
	labels?: [{
		label: string
		value: string
	}, ...]
}
#Resources: {
	docker_config?: [_]:    #DockerConfigResource
	docker_container?: [_]: #DockerContainerResource
	docker_image?: [_]:     #DockerImageResource
	docker_network?: [_]:   #DockerNetworkResource
	docker_secret?: [_]:    #DockerSecretResource
	docker_service?: [_]:   #DockerServiceResource
	docker_volume?: [_]:    #DockerVolumeResource
}
